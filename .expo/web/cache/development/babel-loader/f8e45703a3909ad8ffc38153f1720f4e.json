{"ast":null,"code":"var _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/HygoInterventionCard.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport COLORS from \"../colors\";\nimport i18n from 'i18n-js';\nimport { connect } from 'react-redux';\nimport { getInterventionByID } from \"../api/hygoApi\";\nimport moment from 'moment-timezone';\n\nvar HygoInterventionCard = function HygoInterventionCard(_ref) {\n  var navigation = _ref.navigation,\n      intervention = _ref.intervention,\n      phytoProductList = _ref.phytoProductList;\n\n  var getDay = function getDay() {\n    return moment.utc(intervention.starttime).tz('Europe/Paris').format('DD/MM');\n  };\n\n  var getStartHour = function getStartHour() {\n    return moment.utc(intervention.starttime).tz('Europe/Paris').format('HH:mm');\n  };\n\n  var getEndHour = function getEndHour() {\n    return moment.utc(intervention.endtime).tz('Europe/Paris').format('HH:mm');\n  };\n\n  var onCardPressed = function onCardPressed() {\n    navigation.navigate('LoadingScreen', {\n      next: 'InterventionMapScreen',\n      params: {\n        id: intervention.id\n      },\n      action: getInterventionByID\n    });\n  };\n\n  var getPhyto = function getPhyto() {\n    if (intervention.products && intervention.products.length > 0) {\n      var ptext = [];\n\n      if (intervention.products.indexOf(-1) > -1) {\n        ptext.push(i18n.t('intervention_map.other_farm_work'));\n      }\n\n      ptext = ptext.concat(phytoProductList.filter(function (pp) {\n        return intervention.products.includes(pp.id);\n      }).map(function (p) {\n        return i18n.t(\"products.\" + p.name);\n      }));\n      return ptext.join(', ');\n    } else if (intervention.phytoproduct) {\n      return intervention.phytoproduct;\n    }\n\n    return i18n.t('intervention.no_phyto_selected');\n  };\n\n  return React.createElement(TouchableOpacity, {\n    onPress: onCardPressed,\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.headerTopText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, i18n.t('intervention.header_top', {\n    day: getDay(),\n    start: getStartHour(),\n    end: getEndHour()\n  })), React.createElement(Text, {\n    style: styles.headerBottomText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, i18n.t('intervention.header_bottom', {\n    number: intervention.numberFields\n  }))), React.createElement(View, {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.phytoContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/phyto.png\"),\n    style: styles.elemIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.phyto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, getPhyto())), React.createElement(View, {\n    style: styles.metrics,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, typeof intervention.avgwind !== 'undefined' && React.createElement(View, {\n    style: styles.elem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/ICN-Wind.png\"),\n    style: styles.elemIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.big,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, Math.round(intervention.avgwind) + \" km/h\"), React.createElement(Text, {\n    style: styles.mini,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"min \" + Math.round(intervention.minwind) + \" km/h\"), React.createElement(Text, {\n    style: styles.mini,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"max \" + Math.round(intervention.maxwind) + \" km/h\")), typeof intervention.precipitation !== 'undefined' && React.createElement(View, {\n    style: styles.elem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/ICN-Rain.png\"),\n    style: styles.elemIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.big,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, Math.round(intervention.precipitation) + \" mm\")), React.createElement(View, {\n    style: styles.elem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/ICN-Temperature.png\"),\n    style: styles.elemIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.big,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, intervention.avgtemp.toFixed(1) + \"\\xB0C\"), React.createElement(Text, {\n    style: styles.mini,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"min \" + intervention.mintemp.toFixed(1) + \"\\xB0C\"), React.createElement(Text, {\n    style: styles.mini,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"max \" + intervention.maxtemp.toFixed(1) + \"\\xB0C\")), React.createElement(View, {\n    style: styles.elem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/ICN-Hygro.png\"),\n    style: styles.elemIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.big,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, Math.round(intervention.avghumi) + \"%\"), React.createElement(Text, {\n    style: styles.mini,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"min \" + Math.round(intervention.minhumi) + \"%\"), React.createElement(Text, {\n    style: styles.mini,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"max \" + Math.round(intervention.maxhumi) + \"%\"))))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingBottom: 15\n  },\n  content: {\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: .6,\n    shadowRadius: 3,\n    shadowColor: '#000',\n    elevation: 4,\n    backgroundColor: '#fff',\n    padding: 15\n  },\n  header: {\n    backgroundColor: COLORS.DARK_BLUE,\n    borderTopRightRadius: 20,\n    display: 'flex',\n    padding: 15\n  },\n  headerTopText: {\n    textTransform: 'uppercase',\n    fontFamily: 'nunito-regular',\n    fontSize: 14,\n    color: '#fff'\n  },\n  headerBottomText: {\n    fontFamily: 'nunito-regular',\n    fontSize: 14,\n    color: '#fff'\n  },\n  phytoContainer: {\n    paddingTop: 7,\n    paddingBottom: 7,\n    paddingLeft: 5,\n    paddingRight: 5,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  phyto: {\n    fontFamily: 'nunito-regular',\n    fontSize: 16,\n    color: COLORS.DARK_GREEN,\n    marginLeft: 10\n  },\n  metrics: {\n    backgroundColor: COLORS.BEIGE,\n    borderWidth: 1,\n    borderRadius: 2,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'space-evenly'\n  },\n  elem: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 5\n  },\n  elemIcon: {\n    height: 24,\n    tintColor: '#aaaaaa'\n  },\n  big: {\n    fontFamily: 'nunito-bold',\n    fontSize: 16,\n    color: COLORS.DARK_BLUE,\n    marginTop: 5\n  },\n  mini: {\n    fontSize: 12,\n    fontFamily: 'nunito-heavy',\n    color: '#aaa'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    phytoProductList: state.pulve.phytoProductList\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HygoInterventionCard);","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/HygoInterventionCard.js"],"names":["React","COLORS","i18n","connect","getInterventionByID","moment","HygoInterventionCard","navigation","intervention","phytoProductList","getDay","utc","starttime","tz","format","getStartHour","getEndHour","endtime","onCardPressed","navigate","next","params","id","action","getPhyto","products","length","ptext","indexOf","push","t","concat","filter","pp","includes","map","p","name","join","phytoproduct","styles","container","card","header","headerTopText","day","start","end","headerBottomText","number","numberFields","content","phytoContainer","require","elemIcon","phyto","metrics","avgwind","elem","big","Math","round","mini","minwind","maxwind","precipitation","avgtemp","toFixed","mintemp","maxtemp","avghumi","minhumi","maxhumi","StyleSheet","create","paddingBottom","shadowOffset","width","height","shadowOpacity","shadowRadius","shadowColor","elevation","backgroundColor","padding","DARK_BLUE","borderTopRightRadius","display","textTransform","fontFamily","fontSize","color","paddingTop","paddingLeft","paddingRight","flexDirection","alignItems","DARK_GREEN","marginLeft","BEIGE","borderWidth","borderRadius","borderColor","borderBottomWidth","marginRight","marginTop","justifyContent","tintColor","mapStateToProps","state","pulve","mapDispatchToProps","dispatch","props"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StyleSheet, View, Text, Image, TouchableOpacity } from 'react-native'\n\nimport COLORS from '../colors'\n\nimport i18n from 'i18n-js'\n\nimport { connect } from 'react-redux'\nimport { getInterventionByID } from '../api/hygoApi'\n\nimport moment from 'moment-timezone'\n\nconst HygoInterventionCard = ({ navigation, intervention, phytoProductList }) => {\n  const getDay = () => {\n    return moment.utc(intervention.starttime).tz('Europe/Paris').format('DD/MM')\n  }\n\n  const getStartHour = () => {\n    return moment.utc(intervention.starttime).tz('Europe/Paris').format('HH:mm')\n  }\n\n  const getEndHour = () => {\n    return moment.utc(intervention.endtime).tz('Europe/Paris').format('HH:mm')\n  }\n\n  const onCardPressed = () => {\n    navigation.navigate('LoadingScreen', {\n      next: 'InterventionMapScreen', \n      params: {\n        id: intervention.id\n      },\n      action: getInterventionByID,\n    })\n  }\n\n  const getPhyto = () => {\n    if (intervention.products && intervention.products.length > 0) {\n      let ptext = []\n      if (intervention.products.indexOf(-1) > -1) {\n        ptext.push(i18n.t('intervention_map.other_farm_work'))\n      }\n\n      ptext = ptext.concat(phytoProductList.filter(pp => intervention.products.includes(pp.id)).map(p => i18n.t(`products.${p.name}`)))\n      return ptext.join(', ')\n    } else if (intervention.phytoproduct) {\n      return intervention.phytoproduct\n    }\n\n    return i18n.t('intervention.no_phyto_selected')\n  }\n\n  return (\n    <TouchableOpacity onPress={onCardPressed} style={styles.container}>\n      <View style={styles.card}>\n        <View style={styles.header}>\n          <Text style={styles.headerTopText}>{i18n.t('intervention.header_top', { day: getDay(), start: getStartHour(), end: getEndHour() })}</Text>\n          <Text style={styles.headerBottomText}>{i18n.t('intervention.header_bottom', { number: intervention.numberFields })}</Text>\n        </View>\n        <View style={styles.content}>\n          <View style={styles.phytoContainer}>\n            <Image source={require('../../assets/phyto.png')} style={styles.elemIcon} />\n            <Text style={styles.phyto}>{getPhyto()}</Text>\n          </View>\n          <View style={styles.metrics}>\n            { typeof intervention.avgwind !== 'undefined' && (\n              <View style={styles.elem}>\n                <Image source={require('../../assets/ICN-Wind.png')} style={styles.elemIcon} />\n                <Text style={styles.big}>{`${Math.round(intervention.avgwind)} km/h`}</Text>\n                <Text style={styles.mini}>{`min ${Math.round(intervention.minwind)} km/h`}</Text>\n                <Text style={styles.mini}>{`max ${Math.round(intervention.maxwind)} km/h`}</Text>\n              </View>\n            )}\n            { typeof intervention.precipitation !== 'undefined' && (\n              <View style={styles.elem}>\n                <Image source={require('../../assets/ICN-Rain.png')} style={styles.elemIcon} />\n                <Text style={styles.big}>{`${Math.round(intervention.precipitation)} mm`}</Text>\n              </View>\n            )}\n            <View style={styles.elem}>\n              <Image source={require('../../assets/ICN-Temperature.png')} style={styles.elemIcon} />\n              <Text style={styles.big}>{`${intervention.avgtemp.toFixed(1)}°C`}</Text>\n              <Text style={styles.mini}>{`min ${intervention.mintemp.toFixed(1)}°C`}</Text>\n              <Text style={styles.mini}>{`max ${intervention.maxtemp.toFixed(1)}°C`}</Text>\n            </View>\n            <View style={styles.elem}>\n              <Image source={require('../../assets/ICN-Hygro.png')} style={styles.elemIcon} />\n              <Text style={styles.big}>{`${Math.round(intervention.avghumi)}%`}</Text>\n              <Text style={styles.mini}>{`min ${Math.round(intervention.minhumi)}%`}</Text>\n              <Text style={styles.mini}>{`max ${Math.round(intervention.maxhumi)}%`}</Text>\n            </View>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingBottom: 15,\n\n  },\n  content: {\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: .6,\n    shadowRadius: 3,\n    shadowColor: '#000',\n    elevation: 4,\n    backgroundColor: '#fff',\n    padding: 15\n  },\n  header: {\n    backgroundColor: COLORS.DARK_BLUE,\n    borderTopRightRadius: 20,\n    display: 'flex',\n    padding: 15\n  },\n  headerTopText: {\n    textTransform: 'uppercase',\n    fontFamily: 'nunito-regular',\n    fontSize: 14,\n    color: '#fff',\n  },\n  headerBottomText: {\n    fontFamily: 'nunito-regular',\n    fontSize: 14,\n    color: '#fff',\n  },\n  phytoContainer: {\n    paddingTop: 7,\n    paddingBottom: 7,\n    paddingLeft: 5,\n    paddingRight: 5,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  phyto: {\n    fontFamily: 'nunito-regular',\n    fontSize: 16,\n    color: COLORS.DARK_GREEN,\n    marginLeft: 10\n  },\n  metrics: {\n    backgroundColor: COLORS.BEIGE,\n    borderWidth: 1,\n    borderRadius: 2,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'space-evenly'\n  },\n  elem: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 5,\n  },\n  elemIcon: {\n    height: 24,\n    tintColor: '#aaaaaa'\n  },\n  big: {\n    fontFamily: 'nunito-bold',\n    fontSize: 16,\n    color: COLORS.DARK_BLUE,\n    marginTop: 5,\n  },\n  mini: {\n    fontSize: 12,\n    fontFamily: 'nunito-heavy',\n    color: '#aaa'\n  }\n})\n\nconst mapStateToProps = (state) => ({\n  phytoProductList: state.pulve.phytoProductList,\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HygoInterventionCard);"]},"metadata":{},"sourceType":"module"}