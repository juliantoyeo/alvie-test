{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/NextPulverisationDetails.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Button, Icon, Left, Right, Body, Header, Title } from 'native-base';\nimport COLORS from \"../colors\";\nimport i18n from 'i18n-js';\nimport _ from 'lodash';\nimport HygoParcelleIntervention from \"../components/HygoParcelleIntervention\";\nimport HygoButton from \"../components/pulverisation-detailed/HygoButton\";\nimport { PADDED, CONDITIONS_ORDERING } from \"../constants\";\nimport Map from \"../components/pulverisation-detailed/Map\";\nimport Modulation from \"../components/pulverisation-detailed/Modulation\";\nimport Metrics from \"../components/pulverisation-detailed/Metrics\";\nimport ExtraMetrics from \"../components/pulverisation-detailed/ExtraMetrics\";\nimport Cultures from \"../components/pulverisation-detailed/Cultures\";\nimport Products from \"../components/pulverisation-detailed/Products\";\nimport HourScale from \"../components/pulverisation-detailed/HourScale\";\nimport moment from 'moment';\nimport capitalize from \"../utils/capitalize\";\nimport { Amplitude, AMPLITUDE_EVENTS } from \"../amplitude\";\nvar ampEvent = AMPLITUDE_EVENTS.PulvDetailsScreen;\n\nvar NextPulverisationDetails = function NextPulverisationDetails(_ref) {\n  var result = _ref.result,\n      day = _ref.day,\n      hour = _ref.hour,\n      ra = _ref.ra,\n      next12HoursData = _ref.next12HoursData,\n      navigation = _ref.navigation;\n  var MONTHS = [i18n.t('months.january'), i18n.t('months.february'), i18n.t('months.march'), i18n.t('months.april'), i18n.t('months.may'), i18n.t('months.june'), i18n.t('months.july'), i18n.t('months.august'), i18n.t('months.september'), i18n.t('months.october'), i18n.t('months.november'), i18n.t('months.december')];\n  var DAYS = [i18n.t('days.sunday'), i18n.t('days.monday'), i18n.t('days.tuesday'), i18n.t('days.wednesday'), i18n.t('days.thursday'), i18n.t('days.friday'), i18n.t('days.saturday')];\n\n  var _useState = useState({\n    min: 0,\n    max: ra ? parseInt(ra) : 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentHourMetrics = _useState4[0],\n      setCurrentHourMetrics = _useState4[1];\n\n  var _useState5 = useState(COLORS.GREY),\n      _useState6 = _slicedToArray(_useState5, 2),\n      background = _useState6[0],\n      setBackground = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modulationChanged = _useState8[0],\n      setModulationChanged = _useState8[1];\n\n  var notifyAmplitude = function notifyAmplitude() {\n    Amplitude.logEventWithProperties(ampEvent.click_toRealTimeScreen, {\n      timestamp: Date.now()\n    });\n  };\n\n  var openPicker = function openPicker(screen) {\n    var event = screen == \"HygoCulturePicker\" ? ampEvent.click_culturePicker : ampEvent.click_productPicker;\n    Amplitude.logEventWithProperties(event, {\n      timestamp: Date.now()\n    });\n    setModulationChanged(true);\n    navigation.navigate(screen, {\n      notifyUpdate: function notifyUpdate() {\n        return setModulationChanged(true);\n      },\n      backScreen: 'Pulverisation'\n    });\n  };\n\n  var reloadCurrentMetrics = useCallback(function (selected) {\n    var minval = -99999,\n        maxval = 99999;\n    var chd = {},\n        dir = [];\n\n    _.forOwn(next12HoursData, function (v, k) {\n      if (k === 'ready') {\n        return;\n      }\n\n      if (parseInt(k) - parseInt(hour) > selected.max || parseInt(k) - parseInt(hour) < selected.min) {\n        return;\n      }\n\n      chd.wind = Math.max(chd.wind || minval, v.data.wind);\n      chd.gust = Math.max(chd.gust || minval, v.data.gust);\n      chd.precipitation = (chd.precipitation || 0) + v.data.precipitation;\n      chd.probabilityCnt = (chd.probabilityCnt || 0) + 1;\n      chd.probabilitySum = (chd.probabilitySum || 0) + parseFloat(v.data.probability);\n      chd.prevprecipitation = (chd.prevprecipitation || 0) + (parseInt(k) - parseInt(hour) < selected.max ? v.data.precipitation : 0);\n      chd.mintemp = Math.min(chd.mintemp || maxval, v.data.mintemp);\n      chd.maxtemp = Math.max(chd.maxtemp || minval, v.data.maxtemp);\n      chd.minhumi = Math.min(chd.minhumi || maxval, v.data.minhumi);\n      chd.maxhumi = Math.max(chd.maxhumi || minval, v.data.maxhumi);\n      chd.minsoilhumi = Math.min(chd.minsoilhumi || maxval, v.data.soilhumi);\n      chd.maxsoilhumi = Math.max(chd.maxsoilhumi || minval, v.data.soilhumi);\n      dir.push(v.data.winddirection);\n\n      _.forOwn(v.parcelle, function (v0, k0) {\n        if (parseInt(k) - parseInt(hour) === selected.max) {\n          chd.r2 = Math.max(chd.r2 || minval, v0.r2);\n          chd.r3 = Math.max(chd.r3 || minval, v0.r3);\n          chd.r6 = Math.max(chd.r6 || minval, v0.r6);\n        }\n\n        chd.deltatemp = Math.max(chd.deltatemp || minval, v0.deltatemp);\n        chd.t3 = Math.min(chd.t3 || maxval, v0.t3);\n      });\n    });\n\n    chd.winddirection = _.head(_(dir).countBy().entries().maxBy(_.last));\n    chd.probability = chd.probabilityCnt > 0 ? chd.probabilitySum / chd.probabilityCnt : 0.0;\n    setCurrentHourMetrics(chd);\n  }, [selected, hour, next12HoursData]);\n  var setBackgroundColor = useCallback(function (selected) {\n    var curCond = null;\n\n    for (var i = selected.min; i <= selected.max; i++) {\n      if (!curCond || CONDITIONS_ORDERING[curCond] >= CONDITIONS_ORDERING[next12HoursData[PADDED[i + parseInt(hour)]].condition]) {\n        curCond = next12HoursData[PADDED[i + parseInt(hour)]].condition;\n      }\n    }\n\n    setBackground(COLORS[\"\" + curCond]);\n  }, [selected, next12HoursData, hour]);\n  useEffect(function () {\n    reloadCurrentMetrics(selected);\n    setBackgroundColor(selected);\n  }, [next12HoursData]);\n  var hasRacinaire = useCallback(function () {\n    return result.products.filter(function (p) {\n      return p.isRacinaire;\n    }).length > 0;\n  }, [result.products]);\n  var getDay = useCallback(function () {\n    var md = moment.utc(day);\n    return capitalize(DAYS[md.day()]) + \" \" + md.date() + \" \" + capitalize(MONTHS[md.month()]);\n  }, [day]);\n  return React.createElement(SafeAreaView, {\n    style: [styles.statusbar, {\n      backgroundColor: Platform.OS === 'ios' ? 'black' : background\n    }],\n    forceInset: {\n      top: 'always'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    translucent: true,\n    backgroundColor: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    style: [styles.container, {\n      backgroundColor: background\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, React.createElement(Header, {\n    hasTabs: true,\n    style: [styles.header, {\n      backgroundColor: background\n    }],\n    androidStatusBarColor: \"transparent\",\n    iosBarStyle: \"light-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, React.createElement(Left, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return navigation.navigate(\"Pulverisation\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"close\",\n    style: {\n      color: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }))), React.createElement(Body, {\n    style: styles.headerBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, React.createElement(Title, {\n    style: styles.headerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, getDay()), React.createElement(Title, {\n    style: styles.headerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, i18n.t('meteo_overlay.header', {\n    from: (parseInt(hour) + selected.min) % 24,\n    to: (parseInt(hour) + selected.max + 1) % 24\n  }))), React.createElement(Right, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.pulveContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, React.createElement(Cultures, {\n    navigation: navigation,\n    onPress: function onPress() {\n      return openPicker(\"HygoCulturePicker\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }), React.createElement(Products, {\n    navigation: navigation,\n    onPress: function onPress() {\n      return openPicker(\"HygoProductPicker\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, React.createElement(Metrics, {\n    currentHourMetrics: currentHourMetrics,\n    hasRacinaire: hasRacinaire(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.sliderContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, React.createElement(HygoParcelleIntervention, {\n    from: parseInt(hour),\n    initialMax: selected.max,\n    onHourChangeEnd: function onHourChangeEnd(h) {\n      setSelected(h);\n      setModulationChanged(true);\n\n      if (h.max < h.min) {\n        return;\n      }\n\n      reloadCurrentMetrics(h);\n      setBackgroundColor(h);\n    },\n    data: next12HoursData,\n    width: Dimensions.get('window').width - 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  })), React.createElement(HourScale, {\n    hour: hour,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }), React.createElement(ExtraMetrics, {\n    currentHourMetrics: currentHourMetrics,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }), React.createElement(Modulation, {\n    day: day,\n    hour: hour,\n    selected: selected,\n    modulationChanged: modulationChanged,\n    setModulationChanged: setModulationChanged,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.mapviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, React.createElement(Map, {\n    parcelles: result.parcelles,\n    region: result.region,\n    min: selected.min,\n    max: selected.max,\n    hour: hour,\n    data: next12HoursData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  })), React.createElement(HygoButton, {\n    navigation: navigation,\n    action: notifyAmplitude,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  header: {\n    backgroundColor: 'transparent'\n  },\n  headerBody: {\n    flex: 3,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 20\n  },\n  container: {\n    display: 'flex'\n  },\n  details: {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    paddingTop: 20,\n    justifyContent: 'center',\n    flex: 1\n  },\n  sliderContainer: {\n    marginTop: 40,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  mapviewContainer: {\n    backgroundColor: '#fff'\n  },\n  pulveContainer: {\n    paddingRight: 15,\n    paddingTop: 30,\n    paddingBottom: 10\n  }\n});\nexport default NextPulverisationDetails;","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/NextPulverisationDetails.js"],"names":["React","useState","useEffect","useCallback","SafeAreaView","Button","Icon","Left","Right","Body","Header","Title","COLORS","i18n","_","HygoParcelleIntervention","HygoButton","PADDED","CONDITIONS_ORDERING","Map","Modulation","Metrics","ExtraMetrics","Cultures","Products","HourScale","moment","capitalize","Amplitude","AMPLITUDE_EVENTS","ampEvent","PulvDetailsScreen","NextPulverisationDetails","result","day","hour","ra","next12HoursData","navigation","MONTHS","t","DAYS","min","max","parseInt","selected","setSelected","currentHourMetrics","setCurrentHourMetrics","GREY","background","setBackground","modulationChanged","setModulationChanged","notifyAmplitude","logEventWithProperties","click_toRealTimeScreen","timestamp","Date","now","openPicker","screen","event","click_culturePicker","click_productPicker","navigate","notifyUpdate","backScreen","reloadCurrentMetrics","minval","maxval","chd","dir","forOwn","v","k","wind","Math","data","gust","precipitation","probabilityCnt","probabilitySum","parseFloat","probability","prevprecipitation","mintemp","maxtemp","minhumi","maxhumi","minsoilhumi","soilhumi","maxsoilhumi","push","winddirection","parcelle","v0","k0","r2","r3","r6","deltatemp","t3","head","countBy","entries","maxBy","last","setBackgroundColor","curCond","i","condition","hasRacinaire","products","filter","p","isRacinaire","length","getDay","md","utc","date","month","styles","statusbar","backgroundColor","Platform","OS","top","container","header","flex","color","headerBody","headerTitle","from","to","pulveContainer","height","details","sliderContainer","h","Dimensions","get","width","mapviewContainer","parcelles","region","StyleSheet","create","display","justifyContent","alignItems","fontFamily","fontSize","paddingTop","marginTop","paddingRight","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport { ScrollView, StyleSheet, View, StatusBar, Dimensions } from 'react-native';\nimport { Button, Icon, Left, Right, Body, Header, Title } from 'native-base';\n\nimport COLORS from '../colors'\nimport i18n from 'i18n-js'\n\nimport _ from 'lodash'\n\nimport HygoParcelleIntervention from '../components/HygoParcelleIntervention'\nimport HygoButton from '../components/pulverisation-detailed/HygoButton'\n\nimport { PADDED, CONDITIONS_ORDERING } from '../constants'\n\nimport Map from '../components/pulverisation-detailed/Map';\nimport Modulation from '../components/pulverisation-detailed/Modulation';\nimport Metrics from '../components/pulverisation-detailed/Metrics';\nimport ExtraMetrics from '../components/pulverisation-detailed/ExtraMetrics';\nimport Cultures from '../components/pulverisation-detailed/Cultures';\nimport Products from '../components/pulverisation-detailed/Products';\nimport HourScale from '../components/pulverisation-detailed/HourScale';\nimport moment from 'moment';\n\nimport capitalize from '../utils/capitalize'\n\nimport { Amplitude, AMPLITUDE_EVENTS } from '../amplitude'\nconst { PulvDetailsScreen: ampEvent} = AMPLITUDE_EVENTS\n\nconst NextPulverisationDetails = ({ result, day, hour, ra, next12HoursData, navigation }) => {\n  const MONTHS = [\n    i18n.t('months.january'),\n    i18n.t('months.february'),\n    i18n.t('months.march'),\n    i18n.t('months.april'),\n    i18n.t('months.may'),\n    i18n.t('months.june'),\n    i18n.t('months.july'),\n    i18n.t('months.august'),\n    i18n.t('months.september'),\n    i18n.t('months.october'),\n    i18n.t('months.november'),\n    i18n.t('months.december'),\n  ]\n  \n  const DAYS = [\n    i18n.t('days.sunday'),\n    i18n.t('days.monday'),\n    i18n.t('days.tuesday'),\n    i18n.t('days.wednesday'),\n    i18n.t('days.thursday'),\n    i18n.t('days.friday'),\n    i18n.t('days.saturday'),\n  ]\n\n  const [selected, setSelected] = useState({\n    min: 0,\n    max: ra ? parseInt(ra) : 0,\n  })\n\n  const [currentHourMetrics, setCurrentHourMetrics] = useState({})\n  const [background, setBackground] = useState(COLORS.GREY)\n  const [modulationChanged, setModulationChanged] = useState(true)\n\n  const notifyAmplitude = () => {\n    // console.log(\"Amplitude : \", ampEvent.click_toRealTimeScreen)\n    Amplitude.logEventWithProperties(ampEvent.click_toRealTimeScreen, {\n      timestamp: Date.now()\n    })\n  }\n\n  const openPicker = (screen) => {\n    const event = (screen == \"HygoCulturePicker\") ? ampEvent.click_culturePicker : ampEvent.click_productPicker\n    // console.log(\"Amplitude : \", event)\n    Amplitude.logEventWithProperties(event, {\n      timestamp: Date.now()\n    })\n\n    setModulationChanged(true)\n    navigation.navigate(screen, {\n      notifyUpdate: ()=>setModulationChanged(true),\n      backScreen: 'Pulverisation'\n    })\n  }\n\n  const reloadCurrentMetrics = useCallback((selected) => {\n    const minval = -99999, maxval = 99999\n    let chd = {}, dir = []\n    _.forOwn(next12HoursData, (v, k) => {\n      if (k === 'ready') { return }\n      if ((parseInt(k) - parseInt(hour)) > selected.max || (parseInt(k) - parseInt(hour)) < selected.min) {\n        return\n      }\n\n      chd.wind = Math.max((chd.wind || minval), v.data.wind)\n      chd.gust = Math.max((chd.gust || minval), v.data.gust)\n\n      chd.precipitation = (chd.precipitation||0) + v.data.precipitation\n      chd.probabilityCnt = (chd.probabilityCnt||0) + 1\n      chd.probabilitySum = (chd.probabilitySum||0) + parseFloat(v.data.probability)\n\n      chd.prevprecipitation = (chd.prevprecipitation||0) + ((parseInt(k) - parseInt(hour)) < selected.max ? v.data.precipitation : 0)\n\n      chd.mintemp = Math.min((chd.mintemp || maxval), v.data.mintemp)\n      chd.maxtemp = Math.max((chd.maxtemp || minval), v.data.maxtemp)\n\n      chd.minhumi = Math.min((chd.minhumi || maxval), v.data.minhumi)\n      chd.maxhumi = Math.max((chd.maxhumi || minval), v.data.maxhumi)\n\n      chd.minsoilhumi = Math.min((chd.minsoilhumi || maxval), v.data.soilhumi)\n      chd.maxsoilhumi = Math.max((chd.maxsoilhumi || minval), v.data.soilhumi)\n\n      dir.push(v.data.winddirection)\n\n      _.forOwn(v.parcelle, (v0, k0) => {\n        if (parseInt(k) - parseInt(hour) === selected.max) {\n          chd.r2 = Math.max((chd.r2 || minval), v0.r2)\n          chd.r3 = Math.max((chd.r3 || minval), v0.r3)\n          chd.r6 = Math.max((chd.r6 || minval), v0.r6)\n        }\n\n        chd.deltatemp = Math.max((chd.deltatemp||minval), v0.deltatemp)\n        chd.t3 = Math.min((chd.t3||maxval), v0.t3)\n      })\n    })\n\n    chd.winddirection = _.head(_(dir).countBy().entries().maxBy(_.last));\n\n    chd.probability = chd.probabilityCnt > 0 ? chd.probabilitySum / chd.probabilityCnt : 0.0\n\n    setCurrentHourMetrics(chd)\n  }, [selected, hour, next12HoursData])\n\n  const setBackgroundColor = useCallback((selected) => {\n    let curCond = null\n    for (let i = selected.min; i <= selected.max; i++) {\n      if (!curCond || CONDITIONS_ORDERING[curCond] >= CONDITIONS_ORDERING[next12HoursData[PADDED[i+parseInt(hour)]].condition]) {\n        curCond = next12HoursData[PADDED[i+parseInt(hour)]].condition\n      }\n    }\n    setBackground(COLORS[`${curCond}`])\n  }, [selected, next12HoursData, hour])\n\n  useEffect(() => {\n    reloadCurrentMetrics(selected)\n    setBackgroundColor(selected)\n  }, [next12HoursData])\n\n  const hasRacinaire = useCallback(() => {\n    return result.products.filter(p => p.isRacinaire).length > 0\n  }, [result.products])\n\n  const getDay = useCallback(() => {\n    let md = moment.utc(day)\n\n    return `${capitalize(DAYS[md.day()])} ${md.date()} ${capitalize(MONTHS[md.month()])}`\n  }, [day])\n\n\n  return (\n    <SafeAreaView style={[styles.statusbar, {backgroundColor: Platform.OS === 'ios' ? 'black' : background}]} forceInset={{top:'always'}}>\n      <StatusBar translucent backgroundColor=\"transparent\" />\n      <ScrollView style={[styles.container, { backgroundColor: background }]}>\n        <Header hasTabs style={[styles.header, { backgroundColor: background }]} androidStatusBarColor=\"transparent\" iosBarStyle=\"light-content\">\n          <Left style={{ flex: 1 }}>\n            <Button transparent onPress={() => navigation.navigate(\"Pulverisation\")}>\n              <Icon name='close' style={{ color: '#fff' }} />\n            </Button>\n          </Left>\n          <Body style={styles.headerBody}>\n            <Title style={styles.headerTitle}>{getDay()}</Title>\n            <Title style={styles.headerTitle}>{i18n.t('meteo_overlay.header', { from: (parseInt(hour)+selected.min)%24, to: (parseInt(hour)+selected.max+1)%24 })}</Title>\n          </Body>\n          <Right style={{ flex: 1 }}></Right>\n        </Header>\n\n        <View style={styles.pulveContainer}>\n          <Cultures navigation={navigation} onPress={() => openPicker(\"HygoCulturePicker\")}/>\n          <View style={{ height: 10 }}></View>\n          <Products navigation={navigation} onPress={() => openPicker(\"HygoProductPicker\")}/>\n        </View>\n\n        <View style={styles.details}>\n          <Metrics currentHourMetrics={currentHourMetrics} hasRacinaire={hasRacinaire()} />\n\n          <View style={styles.sliderContainer}>\n            <HygoParcelleIntervention from={parseInt(hour)} initialMax={selected.max} onHourChangeEnd={(h) => {\n              setSelected(h);\n              setModulationChanged(true)\n\n              if (h.max < h.min) {\n                return\n              }\n              reloadCurrentMetrics(h)\n              setBackgroundColor(h)\n            }} data={next12HoursData} width={Dimensions.get('window').width - 30} />\n          </View>\n\n          <HourScale hour={hour} />\n\n          <ExtraMetrics currentHourMetrics={currentHourMetrics} />\n\n          <Modulation day={day} hour={hour} selected={selected} modulationChanged={modulationChanged} setModulationChanged={setModulationChanged} />\n          <View style={styles.mapviewContainer}>\n            <Map parcelles={result.parcelles} region={result.region} min={selected.min} max={selected.max} hour={hour} data={next12HoursData} />\n          </View>\n          <HygoButton navigation={navigation} action={notifyAmplitude}/>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    backgroundColor: 'transparent'\n  },\n  headerBody: {\n    flex: 3,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 20\n  },  \n  container: {\n    display: 'flex',\n  },\n  details: {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    paddingTop: 20,\n    justifyContent: 'center',\n    flex: 1,\n  },\n  sliderContainer: {\n    marginTop: 40,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  mapviewContainer: {\n    backgroundColor: '#fff'\n  },\n  pulveContainer: {\n    paddingRight: 15,\n    paddingTop: 30,\n    paddingBottom: 10,\n  },\n});\n\nexport default NextPulverisationDetails"]},"metadata":{},"sourceType":"module"}