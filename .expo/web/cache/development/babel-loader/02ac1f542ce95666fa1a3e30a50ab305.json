{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/testScreens/SelectProductsScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { connect } from 'react-redux';\nimport { Container, Header, Left, Body, Title, Right, Button, Content, Icon, Text, Footer, Fab } from 'native-base';\nimport { FinderList } from \"./FinderList\";\nimport HygoInputModal from \"./HygoInputModal\";\nimport HygoPickerModal from \"./HygoPickerModal\";\nimport HygoButton from \"../../components/v2/HygoButton\";\nimport { HygoCard } from \"../../components/v2/HygoCards\";\nimport { ModulationContext } from \"../../context/modulation.context\";\nimport COLORS from \"../../colors\";\nimport hygoStyles from \"../../styles\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { getEquipment, getActiveProducts } from \"../../api/hygoApi\";\nvar buses = [\"Orange\", \"Bleu\", \"Verte\", \"Jaune\", \"Blanche\"];\nexport var ProductList = function ProductList(_ref) {\n  var items = _ref.items,\n      _onPress = _ref.onPress;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      opened = _useState2[0],\n      setOpened = _useState2[1];\n\n  return React.createElement(View, {\n    style: productStyles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      minHeight: 26,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, opened && items.map(function (item, k) {\n    return React.createElement(View, {\n      key: k,\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        paddingVertical: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        _onPress(item.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, React.createElement(Icon, {\n      type: \"AntDesign\",\n      name: \"delete\",\n      style: {\n        fontSize: 16,\n        paddingTop: 2,\n        color: COLORS.DARK_BLUE\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    })), React.createElement(Text, {\n      style: [hygoStyles.text, {\n        flex: 1,\n        paddingLeft: 10\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, item.name), React.createElement(Text, {\n      style: hygoStyles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, item.dose.toString() + ' L/ha'));\n  })));\n};\n\nvar SelectProductsScreen = function SelectProductsScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  var context = React.useContext(ModulationContext);\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      products = _useState4[0],\n      setProducts = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      debitModalVisible = _useState6[0],\n      setDebitModalVisible = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ready = _useState8[0],\n      setReady = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      viewMode = _useState10[0],\n      setViewMode = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      families = _useState12[0],\n      setFamilies = _useState12[1];\n\n  var totalArea = context.selectedFields.reduce(function (r, f) {\n    return r + f.area / 10000;\n  }, 0);\n  useEffect(function () {\n    var load = function load() {\n      var prd, nm;\n      return _regeneratorRuntime.async(function load$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getActiveProducts());\n\n            case 2:\n              prd = _context.sent;\n\n              if (prd.length > 0) {\n                setProducts(prd);\n                nm = prd.map(function (f) {\n                  return f.phytoproduct.name;\n                });\n                setFamilies(_toConsumableArray(new Set(nm)));\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (products.length == 0) {\n      context.cleanProducts();\n      load();\n    }\n  }, []);\n  useEffect(function () {\n    var load = function load() {\n      var equ;\n      return _regeneratorRuntime.async(function load$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(getEquipment());\n\n            case 2:\n              equ = _context2.sent;\n              context.setBuses(equ.buses);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    load();\n  }, []);\n  useEffect(function () {\n    setReady(context.selectedProducts.length > 0);\n  }, [context.selectedProducts]);\n\n  var removeProduct = function removeProduct(id) {\n    context.removeProduct(id);\n    var item = products.find(function (p) {\n      return p.id == id;\n    });\n    setProducts([].concat(_toConsumableArray(products.filter(function (p) {\n      return p.id != id;\n    })), [_objectSpread({}, item, {\n      selected: false\n    })]));\n  };\n\n  var Cuve = function Cuve() {\n    var _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        buseModalVisible = _useState14[0],\n        setBuseModalVisible = _useState14[1];\n\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: hygoStyles.h0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"Ma Cuve\"), React.createElement(HygoCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.grid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.colLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, \"D\\xE9bit\"), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setDebitModalVisible(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: styles.colRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, context.debit, \" L/ha\"))), React.createElement(View, {\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.colLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, \"Type de buse\"), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setBuseModalVisible(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: styles.colRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, context.buses))), React.createElement(View, {\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.colLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, \"Volume de bouillie\"), React.createElement(Text, {\n      style: [styles.colRight, {\n        borderWidth: 0\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }, (context.debit * totalArea).toFixed(1), \" L\")), React.createElement(View, {\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.colLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, \"Total surface\"), React.createElement(Text, {\n      style: [styles.colRight, {\n        borderWidth: 0\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, totalArea.toFixed(1), \" ha\")))), React.createElement(HygoPickerModal, {\n      onClose: function onClose() {},\n      modalVisible: buseModalVisible,\n      setModalVisible: setBuseModalVisible,\n      defaultValue: context.buses,\n      items: buses,\n      setInput: function setInput(item) {\n        context.setBuses(item);\n      },\n      title: \"Type de buses\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  var Recap = function Recap() {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, context.selectedProducts.length > 0 ? React.createElement(ProductList, {\n      items: context.selectedProducts.sort(function (it1, it2) {\n        return it1.id - it2.id;\n      }),\n      onPress: function onPress(id) {\n        return removeProduct(id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }) : React.createElement(Text, {\n      style: [hygoStyles.h0, {\n        textAlign: 'center'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, \"Ajouter les produits phytosanitaires que vous voulez utiliser\"));\n  };\n\n  var Finder = function Finder() {\n    var _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        doseModalVisible = _useState16[0],\n        setDoseModalVisible = _useState16[1];\n\n    var _useState17 = useState(),\n        _useState18 = _slicedToArray(_useState17, 2),\n        select = _useState18[0],\n        setSelect = _useState18[1];\n\n    var addProduct = function addProduct(item) {\n      setSelect(item);\n      setDoseModalVisible(true);\n    };\n\n    return React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, families.length > 0 && families.map(function (f, k) {\n      var items = products.filter(function (p) {\n        return p.phytoproduct.name == f;\n      });\n      return items.length > 0 && React.createElement(FinderList, {\n        key: k,\n        title: f,\n        items: items.sort(function (it1, it2) {\n          return it1.id - it2.id;\n        }),\n        onPress: addProduct,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      });\n    }), React.createElement(HygoInputModal, {\n      onClose: function onClose() {},\n      modalVisible: doseModalVisible,\n      setModalVisible: setDoseModalVisible,\n      defaultValue: '0.6',\n      setInput: function setInput(str) {\n        var newItem = _objectSpread({}, select, {\n          selected: true\n        });\n\n        context.addProduct(_objectSpread({}, newItem, {\n          dose: parseFloat(str)\n        }));\n        setProducts([].concat(_toConsumableArray(products.filter(function (p) {\n          return p.id != select.id;\n        })), [newItem]));\n      },\n      title: select && \"Concentration pour \" + select.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.statusbar,\n    forceInset: {\n      top: 'always'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    translucent: true,\n    backgroundColor: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }), React.createElement(Container, {\n    contentContainerStyle: [styles.container, StyleSheet.absoluteFill],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, React.createElement(Header, {\n    style: styles.header,\n    androidStatusBarColor: COLORS.CYAN,\n    iosBarStyle: \"light-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, React.createElement(Left, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, React.createElement(Icon, {\n    type: \"AntDesign\",\n    name: \"arrowleft\",\n    style: {\n      color: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }))), React.createElement(Body, {\n    style: styles.headerBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, React.createElement(Title, {\n    style: styles.headerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, \"Pulv\\xE9risation\"), React.createElement(Title, {\n    style: styles.headerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, \"Choix des produits\")), React.createElement(Right, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  })), React.createElement(Content, {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, React.createElement(HygoInputModal, {\n    onClose: function onClose() {},\n    modalVisible: debitModalVisible,\n    setModalVisible: setDebitModalVisible,\n    defaultValue: context.debit.toString(),\n    setInput: function setInput(str) {\n      return context.setDebit(parseInt(str));\n    },\n    title: \"D\\xE9bit de pulv\\xE9risation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }), React.createElement(Cuve, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: hygoStyles.h0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, \"Mes Produits\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setViewMode(!viewMode);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }, viewMode && React.createElement(Icon, {\n    type: \"AntDesign\",\n    name: \"pluscircleo\",\n    style: styles.iconTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 42\n    }\n  }))), viewMode ? React.createElement(Recap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 33\n    }\n  }) : React.createElement(Finder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 45\n    }\n  })), viewMode ? React.createElement(Footer, {\n    style: styles.footer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, React.createElement(HygoButton, {\n    label: \"CHOIX DU CR\\xC9NEAU\",\n    onPress: function onPress() {\n      navigation.navigate('TestPageSlot');\n    },\n    icon: {\n      type: 'AntDesign',\n      name: 'arrowright',\n      fontSize: 26\n    },\n    enabled: ready,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 25\n    }\n  })) : React.createElement(Fab, {\n    active: true,\n    direction: \"left\",\n    style: styles.fab,\n    position: \"bottomRight\",\n    onPress: function onPress() {\n      setViewMode(!viewMode);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }, React.createElement(Icon, {\n    type: \"AntDesign\",\n    name: 'check',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 25\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  statusbar: {\n    flex: 1,\n    display: 'flex',\n    backgroundColor: Platform.OS === 'ios' ? 'black' : COLORS.CYAN\n  },\n  container: {\n    backgroundColor: COLORS.BEIGE,\n    flexDirection: \"column\",\n    display: 'flex'\n  },\n  content: {\n    backgroundColor: COLORS.BEIGE,\n    flexDirection: \"column\",\n    display: 'flex'\n  },\n  header: {\n    backgroundColor: COLORS.CYAN\n  },\n  headerBody: {\n    flex: 4,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 24\n  },\n  title: {\n    paddingTop: 20,\n    paddingLeft: 10,\n    textTransform: 'uppercase',\n    fontFamily: 'nunito-bold',\n    fontSize: 16,\n    color: COLORS.DARK_BLUE\n  },\n  iconTitle: {\n    color: COLORS.DARK_BLUE,\n    padding: 10\n  },\n  footer: {\n    backgroundColor: COLORS.BEIGE\n  },\n  fab: {\n    backgroundColor: COLORS.DARK_BLUE\n  },\n  grid: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    flexDirection: 'column'\n  },\n  row: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    paddingBottom: 5\n  },\n  colRight: _objectSpread({}, hygoStyles.text, {\n    textAlign: 'right',\n    borderWidth: 1,\n    borderColor: '#AAA',\n    flex: 1,\n    padding: 2,\n    paddingBottom: 2\n  }),\n  colLeft: _objectSpread({}, hygoStyles.text, {\n    flex: 3,\n    padding: 2,\n    paddingBottom: 2\n  })\n});\nvar productStyles = StyleSheet.create({\n  container: {\n    borderTopRightRadius: 20,\n    backgroundColor: '#fff',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowColor: '#000000',\n    shadowRadius: 2,\n    shadowOpacity: .2,\n    padding: 20,\n    display: 'flex',\n    elevation: 2,\n    marginBottom: 10\n  },\n  cardTitle: {\n    textTransform: 'uppercase',\n    fontFamily: 'nunito-bold',\n    fontSize: 14,\n    flex: 1,\n    color: COLORS.CYAN\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectProductsScreen);","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/testScreens/SelectProductsScreen.tsx"],"names":["React","useEffect","useState","SafeAreaView","connect","Container","Header","Left","Body","Title","Right","Button","Content","Icon","Text","Footer","Fab","FinderList","HygoInputModal","HygoPickerModal","HygoButton","HygoCard","ModulationContext","COLORS","hygoStyles","TouchableOpacity","getEquipment","getActiveProducts","buses","ProductList","items","onPress","opened","setOpened","productStyles","container","minHeight","display","flexDirection","justifyContent","map","item","k","paddingVertical","id","fontSize","paddingTop","color","DARK_BLUE","text","flex","paddingLeft","name","dose","toString","SelectProductsScreen","navigation","context","useContext","products","setProducts","debitModalVisible","setDebitModalVisible","ready","setReady","viewMode","setViewMode","families","setFamilies","totalArea","selectedFields","reduce","r","f","area","load","prd","length","nm","phytoproduct","Set","cleanProducts","equ","setBuses","selectedProducts","removeProduct","find","p","filter","selected","Cuve","buseModalVisible","setBuseModalVisible","h0","styles","grid","row","colLeft","colRight","debit","borderWidth","toFixed","Recap","sort","it1","it2","textAlign","Finder","doseModalVisible","setDoseModalVisible","select","setSelect","addProduct","str","newItem","parseFloat","statusbar","top","StyleSheet","absoluteFill","header","CYAN","goBack","headerBody","headerTitle","content","setDebit","parseInt","iconTitle","footer","navigate","type","fab","create","backgroundColor","Platform","OS","BEIGE","alignItems","fontFamily","title","textTransform","padding","paddingBottom","borderColor","borderTopRightRadius","shadowOffset","width","height","shadowColor","shadowRadius","shadowOpacity","elevation","marginBottom","cardTitle","mapStateToProps","state","mapDispatchToProps","dispatch","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport { StyleSheet, RefreshControl, StatusBar, View, Platform } from 'react-native';\nimport { connect } from 'react-redux';\nimport { Container, Header, Left, Body, Title, Right, Button, Content, Icon, Text, Footer, Picker, Grid, Row, Col, Fab } from 'native-base';\n//import { ProductList } from './ProductList';\nimport { FinderList } from './FinderList';\nimport HygoInputModal from './HygoInputModal';\nimport HygoPickerModal from './HygoPickerModal';\nimport HygoButton from '../../components/v2/HygoButton';\nimport { HygoCard } from '../../components/v2/HygoCards';\nimport { ModulationContext } from '../../context/modulation.context';\nimport i18n from 'i18n-js';\nimport HygoStyles from '../../styles';\nimport COLORS from '../../colors'\n\nimport {\n    Alert,\n    Modal,\n    TouchableHighlight,\n} from \"react-native\";\nimport hygoStyles from '../../styles';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { getEquipment, getActiveProducts, getActiveProductsReturnType } from '../../api/hygoApi';\nimport { productType, productsData } from './staticData';\nimport { activeProductType } from '../../types/activeproduct.types';\n\nconst buses = [\"Orange\", \"Bleu\", \"Verte\", \"Jaune\", \"Blanche\"]\n\n\nexport const ProductList = ({ items, onPress }) => {\n    const [opened, setOpened] = useState(true)\n    return (\n        <View style={productStyles.container}>\n            <View style={{ minHeight: 26, display: 'flex', flexDirection: 'column', justifyContent: 'flex-start' }}>\n                {/* <View style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between'}}>\n                    <Text style={styles.cardTitle}>{title}</Text>\n                    <TouchableOpacity onPress={()=>setOpened(!opened)}>\n                        <Icon type='AntDesign' name={opened ? 'arrowdown' : 'arrowright'} style={{fontSize: 16}} />\n                    </TouchableOpacity>\n                </View> */}\n                {opened && items.map((item, k) => (\n                    <View key={k} style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', paddingVertical: 5 }}>\n                        <TouchableOpacity onPress={() => { onPress(item.id) }}>\n                            <Icon type='AntDesign' name='delete' style={{ fontSize: 16, paddingTop: 2, color: COLORS.DARK_BLUE }} />\n                        </TouchableOpacity>\n                        <Text style={[hygoStyles.text, { flex: 1, paddingLeft: 10 }]}>{item.name}</Text>\n                        <Text style={hygoStyles.text}>{item.dose.toString() + ' L/ha'}</Text>\n                    </View>\n                ))}\n            </View>\n        </View>\n    )\n}\n\nconst SelectProductsScreen = ({ navigation }) => {\n    const context = React.useContext(ModulationContext)\n    const [products, setProducts] = useState<Array<activeProductType>>([])\n    const [debitModalVisible, setDebitModalVisible] = useState<boolean>(true)\n    const [ready, setReady] = useState<boolean>(false)\n    const [viewMode, setViewMode] = useState<boolean>(true)\n    const [families, setFamilies] = useState<Array<string>>([])\n    const totalArea = context.selectedFields.reduce((r, f) => r + f.area / 10000, 0)    //converted to ha\n\n    useEffect(() => {\n        // Init product list and retrieve product families, init buses\n        const load = async () => {\n            const prd: Array<activeProductType> = await getActiveProducts()\n            if (prd.length > 0) {\n                setProducts(prd)\n                const nm = prd.map((f) => f.phytoproduct.name)\n                setFamilies([... new Set(nm)])     //delete duplicate\n            }\n        }\n        if (products.length == 0) {\n            context.cleanProducts()\n            load()\n        }\n    }, [])\n\n    // init equipment\n    useEffect(() => {\n        const load = async () => {\n            const equ = await getEquipment()\n            context.setBuses(equ.buses)\n        }\n        load()\n    }, [])\n\n    useEffect(() => {\n        setReady(context.selectedProducts.length > 0)\n    }, [context.selectedProducts])\n\n    const removeProduct = (id) => {\n        context.removeProduct(id)\n        const item: any = products.find((p) => p.id == id)\n        setProducts([...products.filter((p) => p.id != id), { ...item, selected: false }])\n    }\n\n    const Cuve = () => {\n        const [buseModalVisible, setBuseModalVisible] = useState<boolean>(false)\n        return (\n\n            <View>\n                <Text style={hygoStyles.h0}>Ma Cuve</Text>\n                <HygoCard>\n                    <View style={styles.grid}>\n                        <View style={styles.row}>\n                            <Text style={styles.colLeft}>Débit</Text>\n                            <TouchableOpacity onPress={() => setDebitModalVisible(true)}>\n                                <Text style={styles.colRight}>{context.debit} L/ha</Text>\n                            </TouchableOpacity>\n                        </View>\n                        <View style={styles.row}>\n                            <Text style={styles.colLeft}>Type de buse</Text>\n                            <TouchableOpacity onPress={() => setBuseModalVisible(true)}>\n                                <Text style={styles.colRight}>{context.buses}</Text>\n                            </TouchableOpacity>\n                        </View>\n                        <View style={styles.row}>\n                            <Text style={styles.colLeft}>Volume de bouillie</Text>\n                            <Text style={[styles.colRight, { borderWidth: 0 }]}>{(context.debit * totalArea).toFixed(1)} L</Text>\n                        </View>\n                        <View style={styles.row}>\n                            <Text style={styles.colLeft}>Total surface</Text>\n                            <Text style={[styles.colRight, { borderWidth: 0 }]}>{(totalArea).toFixed(1)} ha</Text>\n                        </View>\n                    </View>\n                </HygoCard>\n                <HygoPickerModal\n                    onClose={() => { }}\n                    modalVisible={buseModalVisible}\n                    setModalVisible={setBuseModalVisible}\n                    defaultValue={context.buses}\n                    items={buses}\n                    setInput={(item) => {\n                        context.setBuses(item)\n                    }}\n                    title={`Type de buses`}\n                />\n            </View>\n        )\n    }\n    const Recap = () => (\n        <View>\n            {context.selectedProducts.length > 0 ? (\n                <ProductList\n                    items={context.selectedProducts.sort((it1, it2) => it1.id - it2.id)}\n                    onPress={(id) => removeProduct(id)}\n                />\n            ) : (\n                    <Text style={[hygoStyles.h0, { textAlign: 'center' }]}>Ajouter les produits phytosanitaires que vous voulez utiliser</Text>\n                )}\n        </View>\n    )\n\n    const Finder = () => {\n        const [doseModalVisible, setDoseModalVisible] = useState<boolean>(false)\n        const [select, setSelect] = useState<activeProductType>()\n\n        const addProduct = (item: activeProductType) => {\n            setSelect(item)\n            setDoseModalVisible(true)\n        }\n        return (\n            <View style={{flex:1}}>\n                {families.length > 0 && families.map((f, k) => {\n                    const items: Array<activeProductType> = products.filter((p) => p.phytoproduct.name == f)\n                    return (\n                        items.length > 0 &&\n                        <FinderList\n                            key={k}\n                            title={f}\n                            items={items.sort((it1, it2) => it1.id - it2.id)}\n                            onPress={addProduct}\n                        />\n                    )\n                })}\n                <HygoInputModal\n                    onClose={() => { }}\n                    modalVisible={doseModalVisible}\n                    setModalVisible={setDoseModalVisible}\n                    defaultValue={'0.6'}\n                    setInput={(str) => {\n                        const newItem: activeProductType = { ...select, selected: true }\n                        context.addProduct({ ...newItem, dose: parseFloat(str) })\n                        setProducts([...products.filter((p) => p.id != select.id), newItem])\n                    }}\n                    title={select && `Concentration pour ${select.name}`}\n                />\n                \n            </View>\n        )\n    }\n\n    return (\n        <SafeAreaView style={styles.statusbar} forceInset={{ top: 'always' }}>\n            <StatusBar translucent backgroundColor=\"transparent\" />\n            <Container contentContainerStyle={[styles.container, StyleSheet.absoluteFill]}>\n                <Header style={styles.header} androidStatusBarColor={COLORS.CYAN} iosBarStyle=\"light-content\">\n                    <Left style={{ flex: 1 }}>\n                        <Button transparent onPress={() => navigation.goBack()}>\n                            <Icon type='AntDesign' name='arrowleft' style={{ color: '#fff' }} />\n                        </Button>\n                    </Left>\n                    <Body style={styles.headerBody}>\n                        <Title style={styles.headerTitle}>Pulvérisation</Title>\n                        <Title style={styles.headerTitle}>Choix des produits</Title>\n                    </Body>\n                    <Right style={{ flex: 1 }}></Right>\n                </Header>\n                <Content style={styles.content}>\n                    <HygoInputModal\n                        onClose={() => { }}\n                        modalVisible={debitModalVisible}\n                        setModalVisible={setDebitModalVisible}\n                        defaultValue={context.debit.toString()}\n                        setInput={(str) => context.setDebit(parseInt(str))}\n                        title=\"Débit de pulvérisation\"\n                    />\n\n                    <Cuve />\n\n                    <View style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                        <Text style={hygoStyles.h0}>Mes Produits</Text>\n                        <TouchableOpacity onPress={() => { setViewMode(!viewMode) }} >\n                            {viewMode && <Icon type='AntDesign' name='pluscircleo' style={styles.iconTitle} />}\n                        </TouchableOpacity>\n                    </View>\n                    {viewMode ? <Recap /> : <Finder />}                    \n                </Content>\n                {viewMode ? (\n                    <Footer style={styles.footer}>\n                        <HygoButton\n                            label=\"CHOIX DU CRÉNEAU\"\n                            onPress={() => {\n                                navigation.navigate('TestPageSlot')\n                            }\n                            }\n                            icon={{\n                                type: 'AntDesign',\n                                name: 'arrowright',\n                                fontSize: 26,\n                            }}\n                            enabled={ready}\n                        />\n                    </Footer>\n                ) : (\n                    <Fab\n                        active={true}\n                        direction=\"left\"\n                        //containerStyle={{ marginLeft: 10 }}\n                        style={styles.fab}\n                        position=\"bottomRight\"\n                        onPress={() => { setViewMode(!viewMode) }}\n                    >\n                        <Icon type='AntDesign' name={'check'} />\n                    </Fab>\n            )}\n            </Container>\n\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    statusbar: {\n        flex: 1,\n        display: 'flex',\n        backgroundColor: Platform.OS === 'ios' ? 'black' : COLORS.CYAN,\n    },\n    container: {\n        backgroundColor: COLORS.BEIGE,\n        flexDirection: \"column\",\n        display: 'flex',\n    },\n    content: {\n        backgroundColor: COLORS.BEIGE,\n        flexDirection: \"column\",\n        display: 'flex',\n    },\n    header: {\n        backgroundColor: COLORS.CYAN\n    },\n    headerBody: {\n        flex: 4,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    headerTitle: {\n        color: '#fff',\n        fontFamily: 'nunito-regular',\n        fontSize: 24\n    },\n    title: {\n        paddingTop: 20,\n        paddingLeft: 10,\n        textTransform: 'uppercase',\n        fontFamily: 'nunito-bold',\n        fontSize: 16,\n        color: COLORS.DARK_BLUE\n    },\n    iconTitle: {\n        color: COLORS.DARK_BLUE,\n        padding: 10,\n    },\n    footer: {\n        backgroundColor: COLORS.BEIGE\n    },\n    fab: {\n        backgroundColor: COLORS.DARK_BLUE \n    },\n    grid: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        flexDirection: 'column'\n    },\n    row: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n        paddingBottom: 5\n    },\n    colRight: {\n        ...hygoStyles.text,\n        textAlign: 'right',\n        borderWidth: 1,\n        borderColor: '#AAA',\n        flex: 1,\n        padding: 2,\n        paddingBottom: 2\n    },\n    colLeft: {\n        ...hygoStyles.text,\n        flex: 3,\n        padding: 2,\n        paddingBottom: 2\n    }\n});\n\nconst productStyles = StyleSheet.create({\n    container: {\n        borderTopRightRadius: 20,\n        backgroundColor: '#fff',\n        shadowOffset: { width: 0, height: 2 },\n        shadowColor: '#000000',\n        shadowRadius: 2,\n        shadowOpacity: .2,\n        padding: 20,\n        display: 'flex',\n        elevation: 2,\n        marginBottom: 10\n    },\n    cardTitle: {\n        textTransform: 'uppercase',\n        fontFamily: 'nunito-bold',\n        fontSize: 14,\n        flex: 1,\n        color: COLORS.CYAN\n    }\n})\n\nconst mapStateToProps = (state) => ({\n\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectProductsScreen);"]},"metadata":{},"sourceType":"module"}