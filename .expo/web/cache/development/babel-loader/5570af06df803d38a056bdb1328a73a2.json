{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/testScreens/SelectParcelsScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { connect } from 'react-redux';\nimport { Container, Header, Left, Body, Title, Right, Button, Content, Icon, Text, Footer } from 'native-base';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport HygoButton from \"../../components/v2/HygoButton\";\nimport { ModulationContext } from \"../../context/modulation.context\";\nimport hygoStyles from \"../../styles\";\nimport COLORS from \"../../colors\";\nimport { AMPLITUDE_EVENTS } from \"../../amplitude\";\nvar ampEvent = AMPLITUDE_EVENTS.selectParcelsScreen;\nimport { getFields_v2 } from \"../../api/hygoApi\";\nexport var ParcelList = function ParcelList(_ref) {\n  var title = _ref.title,\n      items = _ref.items,\n      _onPress = _ref.onPress,\n      active = _ref.active;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      opened = _useState2[0],\n      setOpened = _useState2[1];\n\n  return React.createElement(View, {\n    style: ListStyles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      borderBottomWidth: 1,\n      borderColor: '#D1CFCF'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: [ListStyles.cardTitle, !active && ListStyles.hidden],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, title), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setOpened(!opened);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, React.createElement(Icon, {\n    type: \"AntDesign\",\n    name: opened ? 'down' : 'right',\n    style: [{\n      fontSize: 16,\n      color: COLORS.DARK_BLUE,\n      padding: 10,\n      paddingRight: 20\n    }, !active && ListStyles.hidden],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }))), opened && React.createElement(View, {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      marginTop: 10,\n      paddingLeft: 20,\n      paddingRight: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, items.map(function (item, k) {\n    return React.createElement(TouchableOpacity, {\n      key: k,\n      onPress: function onPress() {\n        active && _onPress(item.id, !item.selected);\n      },\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        paddingVertical: 5\n      },\n      disabled: !active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }, React.createElement(Icon, {\n      type: \"FontAwesome\",\n      name: item.selected ? 'square' : 'square-o',\n      style: [{\n        fontSize: 16,\n        color: COLORS.DARK_BLUE,\n        paddingTop: 3\n      }, !active && ListStyles.hidden],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }\n    }), React.createElement(Text, {\n      style: [hygoStyles.text, {\n        flex: 1,\n        paddingLeft: 10\n      }, !active && ListStyles.hidden],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }, item.id, \" - \", item.name), React.createElement(Text, {\n      style: [hygoStyles.text, {\n        textAlign: 'right'\n      }, !active && ListStyles.hidden],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }\n    }, (item.area / 10000).toFixed(1), \"ha\"));\n  }))));\n};\n\nvar SelectParcelsScreen = function SelectParcelsScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  var context = React.useContext(ModulationContext);\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fields = _useState4[0],\n      setFields = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      ready = _useState6[0],\n      setReady = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      names = _useState8[0],\n      setNames = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedName = _useState10[0],\n      setSelectedName = _useState10[1];\n\n  useEffect(function () {\n    var load = function load() {\n      var _await$getFields_v, fld, nm;\n\n      return _regeneratorRuntime.async(function load$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getFields_v2());\n\n            case 2:\n              _await$getFields_v = _context.sent;\n              fld = _await$getFields_v.fields;\n\n              if (!!fld) {\n                setFields(fld);\n                nm = fld.map(function (f) {\n                  return f.culture.name;\n                });\n                setNames(_toConsumableArray(new Set(nm)));\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (fields.length == 0) {\n      context.cleanFields();\n      load();\n    }\n  }, []);\n  useEffect(function () {\n    setReady(context.selectedFields.length > 0);\n\n    if (context.selectedFields.length == 0) {\n      setSelectedName(null);\n    }\n  }, [context.selectedFields]);\n\n  var updateList = function updateList(id, newSelected) {\n    var touchedField = _objectSpread({}, fields.find(function (p) {\n      return p.id == id;\n    }), {\n      selected: newSelected\n    });\n\n    setFields([].concat(_toConsumableArray(fields.filter(function (p) {\n      return p.id != id;\n    })), [touchedField]));\n\n    if (newSelected == true) {\n      context.addField(touchedField);\n      setSelectedName(touchedField.culture.name);\n    } else {\n      context.removeField(touchedField.id);\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.statusbar,\n    forceInset: {\n      top: 'always'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    translucent: true,\n    backgroundColor: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), React.createElement(Container, {\n    contentContainerStyle: [styles.container, StyleSheet.absoluteFill],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, React.createElement(Header, {\n    style: styles.header,\n    androidStatusBarColor: COLORS.CYAN,\n    iosBarStyle: \"light-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, React.createElement(Left, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, React.createElement(Icon, {\n    type: \"AntDesign\",\n    name: \"arrowleft\",\n    style: {\n      color: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }))), React.createElement(Body, {\n    style: styles.headerBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, React.createElement(Title, {\n    style: styles.headerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, \"Pulv\\xE9risation\"), React.createElement(Title, {\n    style: styles.headerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, \"Choix des parcelles\")), React.createElement(Right, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  })), React.createElement(Content, {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: hygoStyles.h0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, \"Mes Parcelles\"), fields.length > 0 && names.length > 0 && names.map(function (n, k) {\n    var items = fields.filter(function (f) {\n      return f.culture.name == n;\n    });\n    return items.length > 0 && React.createElement(ParcelList, {\n      key: k,\n      title: n,\n      items: items.sort(function (it1, it2) {\n        return it1.id - it2.id;\n      }),\n      onPress: updateList,\n      active: !selectedName || n == selectedName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 37\n      }\n    });\n  }))), React.createElement(Footer, {\n    style: styles.footer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, React.createElement(HygoButton, {\n    label: \"CHOIX DES PRODUITS\",\n    onPress: function onPress() {\n      return navigation.navigate('TestPageProducts');\n    },\n    enabled: ready,\n    icon: {\n      type: 'AntDesign',\n      name: 'arrowright',\n      fontSize: 26\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  statusbar: {\n    flex: 1,\n    display: 'flex',\n    backgroundColor: Platform.OS === 'ios' ? 'black' : COLORS.CYAN\n  },\n  container: {\n    backgroundColor: COLORS.BEIGE,\n    flexDirection: \"column\",\n    display: 'flex'\n  },\n  header: {\n    backgroundColor: COLORS.CYAN\n  },\n  headerBody: {\n    flex: 4,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 24\n  },\n  title: {\n    paddingTop: 20,\n    paddingLeft: 10,\n    textTransform: 'uppercase',\n    fontFamily: 'nunito-bold',\n    fontSize: 16,\n    color: COLORS.CYAN\n  },\n  content: {\n    backgroundColor: COLORS.BEIGE\n  },\n  footer: {\n    backgroundColor: COLORS.BEIGE\n  }\n});\nvar buttonStyle = StyleSheet.create({\n  inner: {\n    backgroundColor: '#AFAEAE'\n  }\n});\nvar ListStyles = StyleSheet.create({\n  container: {\n    borderTopRightRadius: 20,\n    backgroundColor: '#fff',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowColor: '#000000',\n    shadowRadius: 2,\n    shadowOpacity: .2,\n    display: 'flex',\n    elevation: 2,\n    marginBottom: 10\n  },\n  cardTitle: _objectSpread({}, hygoStyles.h1, {\n    flex: 1,\n    padding: 10,\n    paddingLeft: 20\n  }),\n  hidden: {\n    color: '#DDD'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectParcelsScreen);","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/testScreens/SelectParcelsScreen.tsx"],"names":["React","useEffect","useState","SafeAreaView","connect","Container","Header","Left","Body","Title","Right","Button","Content","Icon","Text","Footer","TouchableOpacity","HygoButton","ModulationContext","hygoStyles","COLORS","AMPLITUDE_EVENTS","ampEvent","selectParcelsScreen","getFields_v2","ParcelList","title","items","onPress","active","opened","setOpened","ListStyles","container","display","flexDirection","justifyContent","borderBottomWidth","borderColor","cardTitle","hidden","fontSize","color","DARK_BLUE","padding","paddingRight","marginTop","paddingLeft","map","item","k","id","selected","paddingVertical","paddingTop","text","flex","name","textAlign","area","toFixed","SelectParcelsScreen","navigation","context","useContext","fields","setFields","ready","setReady","names","setNames","selectedName","setSelectedName","load","fld","nm","f","culture","Set","length","cleanFields","selectedFields","updateList","newSelected","touchedField","find","p","filter","addField","removeField","styles","statusbar","top","StyleSheet","absoluteFill","header","CYAN","goBack","headerBody","headerTitle","content","h0","n","sort","it1","it2","footer","navigate","type","create","backgroundColor","Platform","OS","BEIGE","alignItems","fontFamily","textTransform","buttonStyle","inner","borderTopRightRadius","shadowOffset","width","height","shadowColor","shadowRadius","shadowOpacity","elevation","marginBottom","h1","mapStateToProps","state","mapDispatchToProps","dispatch","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport { StyleSheet, RefreshControl, StatusBar, View, Platform } from 'react-native';\nimport { connect } from 'react-redux';\nimport { Container, Header, Left, Body, Title, Right, Button, Content, Icon, Text, Footer } from 'native-base';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport HygoButton from '../../components/v2/HygoButton';\nimport { ModulationContext } from '../../context/modulation.context';\nimport i18n from 'i18n-js'\nimport hygoStyles from '../../styles';\nimport COLORS from '../../colors';\nimport { Amplitude, AMPLITUDE_EVENTS } from '../../amplitude'\nconst { selectParcelsScreen: ampEvent } = AMPLITUDE_EVENTS\nimport { fieldType } from '../../types/field.types';\nimport { getFields_v2, getFieldsReturnType } from '../../api/hygoApi';\n\n\ninterface ParcelListProps {\n    title: string,\n    items: Array<fieldType>,\n    onPress: ((id: number, selected: boolean) => any),\n    active: boolean\n}\n\nexport const ParcelList = ({ title, items, onPress, active }: ParcelListProps) => {\n    const [opened, setOpened] = useState(true)\n    return (\n        <View style={ListStyles.container}>\n            <View style={{ display: 'flex', flexDirection: 'column', justifyContent: 'flex-start' }}>\n                <View style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', borderBottomWidth: 1, borderColor: '#D1CFCF' }}>\n\n                    {/* <Icon \n                      type='AntDesign' \n                      name={items.filter((it)=>it.selected == true).length > 0 ? 'arrowdown' : 'arrowright'} \n                      style={{fontSize: 16, color: COLORS.CYAN}} /> */}\n\n                    <Text style={[ListStyles.cardTitle, !active && ListStyles.hidden]}>{title}</Text>\n                    <TouchableOpacity onPress={() => setOpened(!opened)}>\n                        <Icon\n                            type='AntDesign'\n                            name={opened ? 'down' : 'right'}\n                            style={[{ fontSize: 16, color: COLORS.DARK_BLUE, padding: 10, paddingRight: 20 }, !active && ListStyles.hidden]}\n                        />\n                    </TouchableOpacity>\n                </View>\n                {opened &&\n                    <View style={{ display: 'flex', flexDirection: 'column', justifyContent: 'flex-start', marginTop: 10, paddingLeft: 20, paddingRight: 20 }}>\n                        {items.map((item, k) => (\n                            <TouchableOpacity\n                                key={k}\n                                onPress={() => { active && onPress(item.id, !item.selected) }}\n                                style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', paddingVertical: 5 }}\n                                disabled={!active}\n                            >\n                                <Icon\n                                    type='FontAwesome'\n                                    name={item.selected ? 'square' : 'square-o'}\n                                    style={[{ fontSize: 16, color: COLORS.DARK_BLUE, paddingTop: 3 }, !active && ListStyles.hidden]}\n                                />\n                                <Text style={[hygoStyles.text, { flex: 1, paddingLeft: 10 }, !active && ListStyles.hidden]}>\n                                    {item.id} - {item.name}\n                                </Text>\n                                <Text style={[hygoStyles.text, { textAlign: 'right' }, !active && ListStyles.hidden]}>\n                                    {(item.area / 10000).toFixed(1)}ha\n                                </Text>\n                            </TouchableOpacity>\n\n                        ))}\n                    </View>\n                }\n            </View>\n        </View>\n\n    )\n}\n\nconst SelectParcelsScreen = ({ navigation }) => {\n    const context = React.useContext(ModulationContext)\n    const [fields, setFields] = useState<Array<fieldType>>([])\n    const [ready, setReady] = useState<boolean>(false)\n    const [names, setNames] = useState<Array<string>>([])\n    const [selectedName, setSelectedName] = useState<string>(null)\n\n    useEffect(() => {\n        // Init fields and retrieve culture_names\n        const load = async () => {\n           \n            const {fields: fld}: getFieldsReturnType = await getFields_v2()\n            if (!!fld) {\n                setFields(fld)\n                const nm = fld.map( (f) => f.culture.name)\n                setNames([... new Set(nm)])     //delete duplicate\n            }\n        }\n        if (fields.length == 0) {\n            context.cleanFields()\n            load()\n        }\n    }, [])\n\n    useEffect(() => {\n        setReady(context.selectedFields.length > 0)\n        if (context.selectedFields.length == 0) {\n            setSelectedName(null)\n        }\n    }, [context.selectedFields])\n\n    const updateList = (id, newSelected) => {\n        const touchedField = { ...fields.find((p) => p.id == id), selected: newSelected }\n        setFields([...fields.filter((p) => p.id != id), touchedField])\n        if (newSelected == true) {\n            context.addField(touchedField)\n            setSelectedName(touchedField.culture.name)\n        } else {\n            context.removeField(touchedField.id)\n        }\n    }\n    return (\n        <SafeAreaView style={styles.statusbar} forceInset={{ top: 'always' }}>\n            <StatusBar translucent backgroundColor=\"transparent\" />\n            <Container contentContainerStyle={[styles.container, StyleSheet.absoluteFill]}>\n                <Header style={styles.header} androidStatusBarColor={COLORS.CYAN} iosBarStyle=\"light-content\">\n                    <Left style={{ flex: 1 }}>\n                        <Button transparent onPress={() => navigation.goBack()}>\n                            <Icon type='AntDesign' name='arrowleft' style={{ color: '#fff' }} />\n                        </Button>\n                    </Left>\n                    <Body style={styles.headerBody}>\n                        <Title style={styles.headerTitle}>Pulvérisation</Title>\n                        <Title style={styles.headerTitle}>Choix des parcelles</Title>\n                    </Body>\n                    <Right style={{ flex: 1 }}></Right>\n                </Header>\n                <Content style={styles.content}>\n                    <View>\n                        <Text style={hygoStyles.h0}>Mes Parcelles</Text>\n                        {fields.length > 0 && names.length > 0 &&\n                            names.map((n, k) => {\n                                const items: Array<fieldType> = fields.filter((f) => f.culture.name == n)\n                                return (\n                                    items.length > 0 && \n                                    <ParcelList \n                                        key={k} \n                                        title={n} \n                                        items={items.sort((it1, it2) => it1.id - it2.id)} \n                                        onPress={updateList} \n                                        active={(!selectedName || n == selectedName)}\n                                    />\n                                )\n                            })}\n                    </View>\n                </Content>\n                <Footer style={styles.footer}>\n                    <HygoButton\n                        label=\"CHOIX DES PRODUITS\"\n                        onPress={() => navigation.navigate('TestPageProducts')}\n                        enabled={ready}\n                        icon={{\n                            type: 'AntDesign',\n                            name: 'arrowright',\n                            fontSize: 26\n                        }}\n                    />\n                </Footer>\n            </Container>\n\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    statusbar: {\n        flex: 1,\n        display: 'flex',\n        backgroundColor: Platform.OS === 'ios' ? 'black' : COLORS.CYAN,\n    },\n    container: {\n        backgroundColor: COLORS.BEIGE,\n        flexDirection: \"column\",\n        display: 'flex',\n    },\n    header: {\n        backgroundColor: COLORS.CYAN\n    },\n    headerBody: {\n        flex: 4,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    headerTitle: {\n        color: '#fff',\n        fontFamily: 'nunito-regular',\n        fontSize: 24\n    },\n    title: {\n        paddingTop: 20,\n        paddingLeft: 10,\n        textTransform: 'uppercase',\n        fontFamily: 'nunito-bold',\n        fontSize: 16,\n        color: COLORS.CYAN\n    },\n    content: {\n        backgroundColor: COLORS.BEIGE\n    },\n    footer: {\n        backgroundColor: COLORS.BEIGE\n    },\n});\n\nconst buttonStyle = StyleSheet.create({\n    inner: {\n        backgroundColor: '#AFAEAE'\n    }\n});\n\nconst ListStyles = StyleSheet.create({\n    container: {\n        borderTopRightRadius: 20,\n        backgroundColor: '#fff',\n        shadowOffset: { width: 0, height: 2 },\n        shadowColor: '#000000',\n        shadowRadius: 2,\n        shadowOpacity: .2,\n        display: 'flex',\n        elevation: 2,\n        marginBottom: 10,\n    },\n    cardTitle: {\n        ...hygoStyles.h1,\n        flex: 1,\n        padding: 10,\n        paddingLeft: 20\n    },\n    hidden: {\n        color: '#DDD'\n    }\n})\n\nconst mapStateToProps = (state) => ({\n\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectParcelsScreen);"]},"metadata":{},"sourceType":"module"}