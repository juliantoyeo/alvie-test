{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/v2/HygoButton.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from 'react-native-elements';\nimport { Icon } from 'native-base';\nimport COLORS from \"../../colors\";\n\nvar HygoButton = function HygoButton(_ref) {\n  var label = _ref.label,\n      onPress = _ref.onPress,\n      icon = _ref.icon,\n      enabled = _ref.enabled;\n  return React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: onPress,\n    disabled: !enabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [styles.inner, {\n      backgroundColor: enabled ? COLORS.DARK_BLUE : '#AFAEAE'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, icon && React.createElement(Icon, {\n    type: icon.type,\n    name: icon.name,\n    style: [styles.icon, _objectSpread({}, {\n      fontSize: icon.fontSize || 32\n    })],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, label))));\n};\n\nHygoButton.defaultProps = {\n  enabled: true,\n  icon: undefined\n};\nvar styles = StyleSheet.create({\n  button: {\n    display: 'flex',\n    height: 60,\n    width: Dimensions.get('window').width\n  },\n  inner: {\n    flex: 1,\n    display: 'flex',\n    height: 60,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderTopRightRadius: 40,\n    borderTopLeftRadius: 40\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  icon: {\n    fontSize: 32,\n    color: '#fff'\n  },\n  text: {\n    color: '#fff',\n    fontSize: 16,\n    fontFamily: 'nunito-bold'\n  }\n});\nexport default HygoButton;","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/v2/HygoButton.tsx"],"names":["React","Text","Icon","COLORS","HygoButton","label","onPress","icon","enabled","styles","button","inner","backgroundColor","DARK_BLUE","content","type","name","fontSize","text","defaultProps","undefined","StyleSheet","create","display","height","width","Dimensions","get","flex","flexDirection","alignItems","justifyContent","borderTopRightRadius","borderTopLeftRadius","color","fontFamily"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAGA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,IAAT,QAAqB,aAArB;AAEA,OAAOC,MAAP;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAuC;AAAA,MAApCC,KAAoC,QAApCA,KAAoC;AAAA,MAA7BC,OAA6B,QAA7BA,OAA6B;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACxD,SACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEC,MAAM,CAACC,MADhB;AAEE,IAAA,OAAO,EAAEJ,OAFX;AAGE,IAAA,QAAQ,EAAE,CAACE,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACC,MAAM,CAACE,KAAR,EAAe;AAACC,MAAAA,eAAe,EAAEJ,OAAO,GAAGL,MAAM,CAACU,SAAV,GAAsB;AAA/C,KAAf,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIP,IAAI,IACJ,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAI,CAACQ,IAAjB;AAAuB,IAAA,IAAI,EAAER,IAAI,CAACS,IAAlC;AAAwC,IAAA,KAAK,EAAE,CAACP,MAAM,CAACF,IAAR,oBAAkB;AAACU,MAAAA,QAAQ,EAAEV,IAAI,CAACU,QAAL,IAAiB;AAA5B,KAAlB,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2Bb,KAA3B,CAJF,CADF,CALF,CADF;AAgBD,CAjBD;;AAkBAD,UAAU,CAACe,YAAX,GAAyB;AACvBX,EAAAA,OAAO,EAAE,IADc;AAEvBD,EAAAA,IAAI,EAAEa;AAFiB,CAAzB;AAKA,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC/BZ,EAAAA,MAAM,EAAE;AACNa,IAAAA,OAAO,EAAE,MADH;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF;AAH1B,GADuB;AAM/Bd,EAAAA,KAAK,EAAE;AACLiB,IAAAA,IAAI,EAAE,CADD;AAELL,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,MAAM,EAAE,EAHH;AAILK,IAAAA,aAAa,EAAE,KAJV;AAKLC,IAAAA,UAAU,EAAE,QALP;AAMLC,IAAAA,cAAc,EAAE,QANX;AAOLC,IAAAA,oBAAoB,EAAE,EAPjB;AAQLC,IAAAA,mBAAmB,EAAE;AARhB,GANwB;AAgB/BnB,EAAAA,OAAO,EAAE;AACPS,IAAAA,OAAO,EAAE,MADF;AAEPM,IAAAA,aAAa,EAAE,KAFR;AAGPC,IAAAA,UAAU,EAAE;AAHL,GAhBsB;AAqB/BvB,EAAAA,IAAI,EAAE;AACJU,IAAAA,QAAQ,EAAE,EADN;AAEJiB,IAAAA,KAAK,EAAE;AAFH,GArByB;AAyB/BhB,EAAAA,IAAI,EAAE;AACJgB,IAAAA,KAAK,EAAE,MADH;AAEJjB,IAAAA,QAAQ,EAAE,EAFN;AAGJkB,IAAAA,UAAU,EAAE;AAHR;AAzByB,CAAlB,CAAf;AAgCA,eAAe/B,UAAf","sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\nimport { StyleSheet, Dimensions, TouchableOpacity } from 'react-native';\nimport { Text } from 'react-native-elements';\nimport { Icon } from 'native-base';\n\nimport COLORS from '../../colors'\n\nconst HygoButton = ({ label, onPress, icon, enabled }) => {\n  return (\n    <TouchableOpacity \n      style={styles.button}\n      onPress={onPress}\n      disabled={!enabled}\n      >\n      <View style={[styles.inner, {backgroundColor: enabled ? COLORS.DARK_BLUE : '#AFAEAE' }]}>\n        <View style={styles.content}>\n          { icon && (\n            <Icon type={icon.type} name={icon.name} style={[styles.icon, {...{fontSize: icon.fontSize || 32}}]} />\n          )}\n          <Text style={styles.text}>{label}</Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  )\n}\nHygoButton.defaultProps= {\n  enabled: true,\n  icon: undefined\n}\n\nconst styles = StyleSheet.create({    \n  button: { \n    display: 'flex', \n    height: 60, \n    width: Dimensions.get('window').width \n  },\n  inner: {\n    flex: 1,\n    display: 'flex',\n    height: 60,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderTopRightRadius: 40,\n    borderTopLeftRadius: 40,\n  },\n  content: { \n    display: 'flex', \n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  icon: {\n    fontSize: 32, \n    color: '#fff'\n  },\n  text: {\n    color: '#fff',\n    fontSize: 16,\n    fontFamily: 'nunito-bold',\n  }\n});\n\nexport default HygoButton"]},"metadata":{},"sourceType":"module"}