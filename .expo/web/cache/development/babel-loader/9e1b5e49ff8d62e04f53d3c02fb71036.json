{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/testScreens/FinderList.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Icon, Text } from 'native-base';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport COLORS from \"../../colors\";\nimport hygoStyles from \"../../styles\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nvar Item = function Item(_ref) {\n  var item = _ref.item,\n      _onPress = _ref.onPress;\n  return React.createElement(View, {\n    style: styles.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, item.selected ? React.createElement(View, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    type: \"AntDesign\",\n    name: 'check',\n    style: {\n      fontSize: 14,\n      color: COLORS.DARK_BLUE,\n      paddingTop: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: [hygoStyles.text, {\n      flex: 1,\n      paddingLeft: 10\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, item.name)) : React.createElement(TouchableOpacity, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    onPress: function onPress() {\n      return _onPress(item);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    type: \"AntDesign\",\n    name: 'pluscircleo',\n    style: {\n      fontSize: 14,\n      color: COLORS.DARK_BLUE,\n      paddingTop: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: [hygoStyles.text, {\n      flex: 1,\n      paddingLeft: 10\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, item.name)));\n};\n\nexport var FinderList = function FinderList(_ref2) {\n  var title = _ref2.title,\n      items = _ref2.items,\n      onPress = _ref2.onPress;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      opened = _useState2[0],\n      setOpened = _useState2[1];\n\n  var onAdd = function onAdd(item) {\n    onPress(item);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setOpened(!opened);\n    },\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      borderBottomWidth: 1,\n      borderColor: '#D1CFCF'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, title), React.createElement(Icon, {\n    type: \"AntDesign\",\n    name: opened ? 'down' : 'right',\n    style: {\n      fontSize: 16,\n      color: COLORS.DARK_BLUE,\n      padding: 10,\n      paddingRight: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  })), opened && items.map(function (item, k) {\n    return React.createElement(Item, {\n      key: k,\n      item: item,\n      onPress: onAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    });\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    borderTopRightRadius: 20,\n    backgroundColor: '#fff',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowColor: '#000000',\n    shadowRadius: 2,\n    shadowOpacity: .2,\n    display: 'flex',\n    elevation: 2,\n    marginBottom: 10\n  },\n  cardTitle: _objectSpread({}, hygoStyles.h1, {\n    flex: 1,\n    padding: 10,\n    paddingLeft: 20\n  }),\n  item: {\n    marginTop: 10,\n    paddingLeft: 20,\n    paddingRight: 20\n  }\n});","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/testScreens/FinderList.tsx"],"names":["React","useState","Icon","Text","COLORS","hygoStyles","TouchableOpacity","Item","item","onPress","styles","selected","display","flexDirection","fontSize","color","DARK_BLUE","paddingTop","text","flex","paddingLeft","name","FinderList","title","items","opened","setOpened","onAdd","container","justifyContent","borderBottomWidth","borderColor","cardTitle","padding","paddingRight","map","k","StyleSheet","create","borderTopRightRadius","backgroundColor","shadowOffset","width","height","shadowColor","shadowRadius","shadowOpacity","elevation","marginBottom","h1","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Container, Header, Left, Body, Title, Right, Button, Content, Icon, Text, Fab } from 'native-base';\nimport { View, StyleSheet } from 'react-native'\nimport COLORS from '../../colors'\nimport hygoStyles from '../../styles';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport HygoInputModal from './HygoInputModal';\nimport { activeProductType } from '../../types/activeproduct.types';\nimport HygoButton from '../../components/v2/HygoButton';\n\ntype productType={\n    type:string,\n    name:string,\n    selected: boolean,\n    id: number\n}\ntype finderListProps = {\n    title: string,\n    items: Array<activeProductType>,\n    onPress: any\n}\ntype itemProps = {\n    item: activeProductType,\n    onPress: any\n}\n\nconst Item = ({ item, onPress}: itemProps) => {\n    return (\n        <View style={styles.item}>\n            {item.selected ? (\n            <View style={{display: 'flex', flexDirection:'row'}}>\n                <Icon type='AntDesign' name={'check'} style={{fontSize: 14, color: COLORS.DARK_BLUE, paddingTop: 2}} />\n                <Text style={[hygoStyles.text, {flex:1, paddingLeft:10}]}>{item.name}</Text>\n                {/* <Text style={hygoStyles.text}>{item.dose && item.dose.toString() + 'L/ha'}</Text> */}\n            </View>\n            ): (\n            <TouchableOpacity\n            style={{display: 'flex', flexDirection:'row'}} \n                onPress={()=>onPress(item)}\n            >\n                <Icon type='AntDesign' name={'pluscircleo'} style={{fontSize: 14, color: COLORS.DARK_BLUE, paddingTop: 2}} />\n                <Text style={[hygoStyles.text, {flex:1, paddingLeft:10}]}>{item.name}</Text>\n            </TouchableOpacity>\n            )}\n        </View>\n    )\n}\n\n\n\nexport const FinderList = ({title, items, onPress}: finderListProps) => {\n    const [opened, setOpened] = useState(true)\n    const onAdd = (item) => {\n        onPress(item)\n    }\n    return ( \n        <View style={styles.container}>\n            \n            <View style={{  display: 'flex', flexDirection: 'column', justifyContent: 'flex-start' }}>\n                {/* <View style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', borderBottomWidth: 1, borderColor: '#D1CFCF'}}> */}\n                    <TouchableOpacity \n                        onPress={()=>setOpened(!opened)}\n                        style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', borderBottomWidth: 1, borderColor: '#D1CFCF'}}\n                    >\n                        <Text style={styles.cardTitle}>{title}</Text>\n                        <Icon \n                            type='AntDesign' \n                            name={opened ? 'down' : 'right'} \n                            style={{fontSize: 16, color: COLORS.DARK_BLUE, padding: 10, paddingRight: 20}} />\n                    </TouchableOpacity>\n\n                {opened && items.map((item,k) => {\n\n                    return (<Item key={k} item={item} onPress={onAdd}/>\n                    )\n                })}\n                {/* </View> */}\n            </View>\n        </View>\n       \n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        borderTopRightRadius: 20,\n        backgroundColor: '#fff',\n        shadowOffset: { width: 0, height: 2},\n        shadowColor: '#000000',\n        shadowRadius: 2,\n        shadowOpacity: .2,\n        display: 'flex',\n        elevation: 2,\n        marginBottom: 10,\n      },\n    // cardTitle: {\n    //   textTransform: 'uppercase',\n    //   fontFamily: 'nunito-bold',\n    //   fontSize: 14,\n    //   flex: 1,\n    //   color: COLORS.DARK_BLUE\n    // },\n    cardTitle: {\n        ...hygoStyles.h1,\n      flex: 1,\n      padding: 10,\n      paddingLeft: 20\n    },\n    item: {\n        // display: 'flex', \n        // flexDirection: 'row', \n        // justifyContent:'space-between', \n        marginTop: 10, \n        paddingLeft:20, \n        paddingRight: 20 }\n  })"]},"metadata":{},"sourceType":"module"}