{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/context/snackbar.context.tsx\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Snackbar } from 'react-native-paper';\nimport COLORS from \"../colors\";\nexport var SnackbarContext = React.createContext({});\nexport var SnackbarProvider = function SnackbarProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      snackIsVisible = _useState2[0],\n      setSnackIsVisible = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      snackText = _useState4[0],\n      setSnackText = _useState4[1];\n\n  var _useState5 = useState('DEFAULT'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      snackType = _useState6[0],\n      setSnackType = _useState6[1];\n\n  var showSnackbar = function showSnackbar(text, type) {\n    setSnackIsVisible(false);\n    setSnackText(text);\n    setSnackType(snackStyle[type] ? type : 'DEFAULT');\n    setSnackIsVisible(true);\n  };\n\n  return React.createElement(SnackbarContext.Provider, {\n    value: {\n      showSnackbar: showSnackbar\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, children, React.createElement(Snackbar, {\n    theme: {\n      colors: accentStyle[snackType]\n    },\n    style: [styles.snackbar, snackStyle[snackType]],\n    visible: snackIsVisible,\n    onDismiss: function onDismiss() {\n      return setSnackIsVisible(false);\n    },\n    action: {\n      label: 'OK',\n      onPress: function onPress() {}\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: [styles.snackText, textStyle[snackType]],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, snackText)));\n};\nvar snackStyle = {\n  'OK': {\n    backgroundColor: COLORS['EXCELLENT']\n  },\n  'WARNING': {\n    backgroundColor: COLORS['CORRECT']\n  },\n  'ALERT': {\n    backgroundColor: COLORS['BAD']\n  },\n  'DEFAULT': {\n    backgroundColor: COLORS['CYAN']\n  }\n};\nvar accentStyle = {\n  'OK': {\n    accent: 'white'\n  },\n  'WARNING': {\n    accent: 'white'\n  },\n  'ALERT': {\n    accent: 'black'\n  },\n  'DEFAULT': {\n    accent: 'white'\n  }\n};\nvar textStyle = {\n  'OK': {\n    color: 'white'\n  },\n  'WARNING': {\n    color: 'white'\n  },\n  'ALERT': {\n    color: 'black'\n  },\n  'DEFAULT': {\n    color: 'white'\n  }\n};\nvar styles = StyleSheet.create({\n  snackbar: {\n    backgroundColor: 'red',\n    elevation: 5,\n    borderRadius: 10\n  },\n  snackText: {\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/context/snackbar.context.tsx"],"names":["React","useState","Snackbar","COLORS","SnackbarContext","createContext","SnackbarProvider","children","snackIsVisible","setSnackIsVisible","snackText","setSnackText","snackType","setSnackType","showSnackbar","text","type","snackStyle","colors","accentStyle","styles","snackbar","label","onPress","textStyle","backgroundColor","accent","color","StyleSheet","create","elevation","borderRadius"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,QAAT,QAAkE,oBAAlE;AACA,OAAOC,MAAP;AAOA,OAAO,IAAMC,eAAe,GAAGJ,KAAK,CAACK,aAAN,CAA0C,EAA1C,CAAxB;AAEP,OAAO,IAAMC,gBAAyC,GAAG,SAA5CA,gBAA4C,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBAE3BN,QAAQ,CAAU,KAAV,CAFmB;AAAA;AAAA,MAEhEO,cAFgE;AAAA,MAEhDC,iBAFgD;;AAAA,mBAGrCR,QAAQ,CAAS,EAAT,CAH6B;AAAA;AAAA,MAGhES,SAHgE;AAAA,MAGrDC,YAHqD;;AAAA,mBAIrCV,QAAQ,CAAY,SAAZ,CAJ6B;AAAA;AAAA,MAIhEW,SAJgE;AAAA,MAIrDC,YAJqD;;AAKvE,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAeC,IAAf,EAAmC;AACpDP,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAE,IAAAA,YAAY,CAACI,IAAD,CAAZ;AACAF,IAAAA,YAAY,CAACI,UAAU,CAACD,IAAD,CAAV,GAAmBA,IAAnB,GAA0B,SAA3B,CAAZ;AACAP,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GALD;;AAMA,SACI,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEK,MAAAA,YAAY,EAAZA;AAAF,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,QADL,EAEI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAE;AAAEW,MAAAA,MAAM,EAAEC,WAAW,CAACP,SAAD;AAArB,KADX;AAEI,IAAA,KAAK,EAAG,CAACQ,MAAM,CAACC,QAAR,EAAkBJ,UAAU,CAACL,SAAD,CAA5B,CAFZ;AAGI,IAAA,OAAO,EAAEJ,cAHb;AAII,IAAA,SAAS,EAAE;AAAA,aAAMC,iBAAiB,CAAC,KAAD,CAAvB;AAAA,KAJf;AAKI,IAAA,MAAM,EAAE;AACJa,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,OAAO,EAAE,mBAAM,CAEd;AAJG,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACH,MAAM,CAACV,SAAR,EAAmBc,SAAS,CAACZ,SAAD,CAA5B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwDF,SAAxD,CAZJ,CAFJ,CADJ;AAmBH,CA9BM;AAoCP,IAAMO,UAAkD,GAAG;AACvD,QAAO;AAAEQ,IAAAA,eAAe,EAAEtB,MAAM,CAAC,WAAD;AAAzB,GADgD;AAEvD,aAAW;AAAEsB,IAAAA,eAAe,EAAEtB,MAAM,CAAC,SAAD;AAAzB,GAF4C;AAGvD,WAAS;AAAEsB,IAAAA,eAAe,EAAEtB,MAAM,CAAC,KAAD;AAAzB,GAH8C;AAIvD,aAAW;AAAEsB,IAAAA,eAAe,EAAEtB,MAAM,CAAC,MAAD;AAAzB;AAJ4C,CAA3D;AAMA,IAAMgB,WAAoE,GAAE;AACxE,QAAO;AAAEO,IAAAA,MAAM,EAAE;AAAV,GADiE;AAExE,aAAW;AAAEA,IAAAA,MAAM,EAAE;AAAV,GAF6D;AAGxE,WAAS;AAAEA,IAAAA,MAAM,EAAE;AAAV,GAH+D;AAIxE,aAAW;AAAEA,IAAAA,MAAM,EAAE;AAAV;AAJ6D,CAA5E;AAOA,IAAMF,SAAiD,GAAG;AACtD,QAAO;AAAEG,IAAAA,KAAK,EAAE;AAAT,GAD+C;AAEtD,aAAW;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAF2C;AAGtD,WAAS;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAH6C;AAItD,aAAW;AAAEA,IAAAA,KAAK,EAAE;AAAT;AAJ2C,CAA1D;AAOA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,QAAQ,EAAE;AACNI,IAAAA,eAAe,EAAE,KADX;AAENK,IAAAA,SAAS,EAAE,CAFL;AAGNC,IAAAA,YAAY,EAAE;AAHR,GADmB;AAM7BrB,EAAAA,SAAS,EAAE;AAGPiB,IAAAA,KAAK,EAAE;AAHA;AANkB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, StyleProp, ViewStyle, TextStyle } from 'react-native';\nimport { Snackbar, DefaultTheme, Provider as PaperProvider } from 'react-native-paper';\nimport COLORS from '../colors'\n\nexport interface SnackbarContextProps {\n    showSnackbar?: any\n}\nexport type SnackType = 'DEFAULT' | 'OK' | 'WARNING' | 'ALERT'\n\nexport const SnackbarContext = React.createContext<SnackbarContextProps>({});\n\nexport const SnackbarProvider: React.FunctionComponent = ({ children }) => {\n\n    const [snackIsVisible, setSnackIsVisible] = useState<boolean>(false)\n    const [snackText, setSnackText] = useState<string>('')\n    const [snackType, setSnackType] = useState<SnackType>('DEFAULT')\n    const showSnackbar = (text: string, type: SnackType) => {\n        setSnackIsVisible(false)\n        setSnackText(text)\n        setSnackType(snackStyle[type] ? type : 'DEFAULT')\n        setSnackIsVisible(true)\n    } \n    return (\n        <SnackbarContext.Provider value={{ showSnackbar }}>\n            {children}\n            <Snackbar\n                theme={{ colors: accentStyle[snackType]} /*Styling the action button*/}\n                style= {[styles.snackbar, snackStyle[snackType]]}\n                visible={snackIsVisible}\n                onDismiss={() => setSnackIsVisible(false)}\n                action={{\n                    label: 'OK',\n                    onPress: () => {\n                    // Do something\n                    },\n                }}\n                >\n                <Text style={[styles.snackText, textStyle[snackType]]}>{snackText}</Text>\n            </Snackbar>\n        </SnackbarContext.Provider>\n    );\n};\n\n\n// Theming snackbar : \n// https://callstack.github.io/react-native-paper/theming.html\n\nconst snackStyle: { [id: string]: StyleProp<ViewStyle> } = {\n    'OK' : { backgroundColor: COLORS['EXCELLENT']},\n    'WARNING': { backgroundColor: COLORS['CORRECT']},\n    'ALERT': { backgroundColor: COLORS['BAD']},\n    'DEFAULT': { backgroundColor: COLORS['CYAN']}\n}\nconst accentStyle: { [id: string]: Partial<ReactNativePaper.ThemeColors> }= {\n    'OK' : { accent: 'white'},\n    'WARNING': { accent: 'white'},\n    'ALERT': { accent: 'black'},\n    'DEFAULT': { accent: 'white'}\n}\n\nconst textStyle: { [id: string]: StyleProp<TextStyle> } = {\n    'OK' : { color: 'white'},\n    'WARNING': { color: 'white'},\n    'ALERT': { color: 'black'},\n    'DEFAULT': { color: 'white'}\n}\n\nconst styles = StyleSheet.create({\n    snackbar: {\n        backgroundColor: 'red',\n        elevation: 5,\n        borderRadius: 10\n    },\n    snackText: {\n        // fontFamily: 'nunito-bold',\n        // fontSize: 32,\n        color: 'white',\n    }\n})\n"]},"metadata":{},"sourceType":"module"}