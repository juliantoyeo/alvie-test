{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/MeteoScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Container, Header, Left, Body, Right, Button, Icon, Title, Tabs, Tab } from 'native-base';\nimport i18n from 'i18n-js';\nimport MeteoBriefScreen from \"./MeteoBriefScreen\";\nimport MeteoRadar from \"./MeteoRadar\";\nimport MeteoDetailed from \"./MeteoDetailed\";\nimport * as Localization from 'expo-localization';\nimport { Amplitude, AMPLITUDE_EVENTS } from \"../amplitude\";\nimport { now } from 'lodash';\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\n\nvar MeteoScreen = function MeteoScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentTab = _useState2[0],\n      setCurrentTab = _useState2[1];\n\n  var tabs = [\"meteoBriefScreen\", \"meteoDetailedScreen\", \"meteoRadarScreen\"];\n\n  var switchTab = function switchTab(i) {\n    setCurrentTab(i);\n  };\n\n  useEffect(function () {\n    var unsubscribe = navigation.addListener('didFocus', function () {\n      setCurrentTab(0);\n    });\n    return function () {\n      return unsubscribe.remove();\n    };\n  }, []);\n  useEffect(function () {\n    Amplitude.logEventWithProperties(AMPLITUDE_EVENTS[tabs[currentTab]].render, {\n      timestamp: Date.now()\n    });\n  }, [currentTab]);\n  return React.createElement(SafeAreaView, {\n    style: [styles.statusbar, {\n      backgroundColor: 'black'\n    }],\n    forceInset: {\n      top: 'always'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    translucent: true,\n    backgroundColor: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), React.createElement(ImageBackground, {\n    source: require(\"../../assets/meteo_back.png\"),\n    imageStyle: {\n      resizeMode: 'cover',\n      flex: 1\n    },\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(Container, {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    style: styles.header,\n    androidStatusBarColor: \"transparent\",\n    hasTabs: true,\n    transparent: true,\n    iosBarStyle: \"light-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, React.createElement(Left, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return navigation.toggleDrawer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, React.createElement(Icon, {\n    name: \"menu\",\n    style: {\n      color: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }))), React.createElement(Body, {\n    style: styles.headerBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, React.createElement(Title, {\n    style: styles.headerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, i18n.t('meteo.header'))), React.createElement(Right, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), React.createElement(Tabs, {\n    locked: true,\n    initialPage: 0,\n    page: currentTab,\n    tabContainerStyle: styles.tabBar,\n    tabBarUnderlineStyle: {\n      backgroundColor: '#fff'\n    },\n    onChangeTab: function onChangeTab(_ref2) {\n      var i = _ref2.i;\n      return switchTab(i);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, React.createElement(Tab, {\n    style: [styles.tabBar],\n    textStyle: styles.textStyle,\n    activeTextStyle: styles.textStyle,\n    activeTabStyle: [styles.tabStyle],\n    tabStyle: styles.tabStyle,\n    heading: i18n.t('meteo.brief'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, React.createElement(MeteoBriefScreen, {\n    style: styles.tabBar,\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  })), React.createElement(Tab, {\n    style: [styles.tabBar],\n    textStyle: styles.textStyle,\n    activeTextStyle: styles.textStyle,\n    activeTabStyle: [styles.tabStyle],\n    tabStyle: styles.tabStyle,\n    heading: i18n.t('meteo.detailed'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(MeteoDetailed, {\n    navigation: navigation,\n    style: styles.tabBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  })), Localization.locale.indexOf('cs') === -1 && React.createElement(Tab, {\n    style: [styles.tabBar],\n    textStyle: styles.textStyle,\n    activeTextStyle: styles.textStyle,\n    activeTabStyle: [styles.tabStyle],\n    tabStyle: styles.tabStyle,\n    heading: i18n.t('meteo.radar'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, React.createElement(MeteoRadar, {\n    style: styles.tabBar,\n    navigation: navigation,\n    active: currentTab === 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nvar styles = StyleSheet.create({\n  statusbar: {\n    flex: 1,\n    display: 'flex'\n  },\n  container: {\n    flex: 1,\n    display: 'flex'\n  },\n  header: {\n    backgroundColor: 'transparent'\n  },\n  headerBody: {\n    textAlign: 'center',\n    display: 'flex',\n    alignItems: 'center',\n    flex: 1\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 24\n  },\n  content: {\n    flex: 1,\n    backgroundColor: Colors.BEIGE\n  },\n  tabBar: {\n    backgroundColor: 'transparent',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    elevation: 0,\n    borderBottomWidth: 0\n  },\n  tabStyle: {\n    backgroundColor: 'transparent',\n    borderBottomWidth: 0\n  },\n  textStyle: {\n    textTransform: 'uppercase',\n    color: '#fff',\n    fontSize: 14,\n    fontFamily: 'nunito-bold'\n  }\n});\nexport default MeteoScreen;","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/MeteoScreen.js"],"names":["React","useState","useEffect","Container","Header","Left","Body","Right","Button","Icon","Title","Tabs","Tab","i18n","MeteoBriefScreen","MeteoRadar","MeteoDetailed","Localization","Amplitude","AMPLITUDE_EVENTS","now","Colors","MeteoScreen","navigation","currentTab","setCurrentTab","tabs","switchTab","i","unsubscribe","addListener","remove","logEventWithProperties","render","timestamp","Date","styles","statusbar","backgroundColor","top","require","resizeMode","flex","container","content","header","toggleDrawer","color","headerBody","headerTitle","t","tabBar","textStyle","tabStyle","locale","indexOf","StyleSheet","create","display","textAlign","alignItems","fontFamily","fontSize","BEIGE","shadowOffset","width","height","elevation","borderBottomWidth","textTransform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { StatusBar, StyleSheet, SafeAreaView, View, ImageBackground } from 'react-native'\nimport { Container, Header, Left, Body, Right, Button, Icon, Title, Tabs, Tab } from 'native-base';\n\nimport i18n from 'i18n-js'\n\nimport MeteoBriefScreen from './MeteoBriefScreen'\nimport MeteoRadar from './MeteoRadar'\nimport MeteoDetailed from './MeteoDetailed'\n\nimport * as Localization from 'expo-localization';\n\nimport {Amplitude, AMPLITUDE_EVENTS} from '../amplitude'\nimport { now } from 'lodash';\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\n\nconst MeteoScreen = ({ navigation }) => {\n  const [currentTab, setCurrentTab] = useState(0)\n  const tabs = [\"meteoBriefScreen\", \"meteoDetailedScreen\", \"meteoRadarScreen\"]\n  const switchTab = (i) => {\n    setCurrentTab(i);\n  }\n  useEffect( () => {\n    const unsubscribe = navigation.addListener('didFocus', () => {\n      setCurrentTab(0)\n    })\n    return () => unsubscribe.remove()\n  }, [])\n\n  useEffect( () => {\n    // console.log(\"Amplitude : \", AMPLITUDE_EVENTS[tabs[currentTab]].render)\n    Amplitude.logEventWithProperties(AMPLITUDE_EVENTS[tabs[currentTab]].render, {\n      timestamp: Date.now()\n    })\n  }, [currentTab])\n\n  return (\n    <SafeAreaView style={[styles.statusbar, { backgroundColor: 'black' }]} forceInset={{top:'always'}}>\n      <StatusBar translucent backgroundColor=\"transparent\" />\n      <ImageBackground source={require('../../assets/meteo_back.png')} imageStyle={{  resizeMode: 'cover', flex: 1 }} style={styles.container}>\n        <Container style={styles.content}>\n          <Header style={styles.header} androidStatusBarColor=\"transparent\" hasTabs transparent iosBarStyle=\"light-content\">\n            <Left style={{ flex: 1 }}>\n              <Button transparent onPress={() => navigation.toggleDrawer() }>\n                <Icon name='menu' style={{ color: '#fff' }} />\n              </Button>\n            </Left>\n            <Body style={styles.headerBody}>\n              <Title style={styles.headerTitle}>{i18n.t('meteo.header')}</Title>\n            </Body>\n            <Right style={{ flex: 1 }}></Right>\n          </Header>\n          <Tabs locked={true} initialPage={0} page={currentTab} tabContainerStyle={styles.tabBar} tabBarUnderlineStyle={{ backgroundColor: '#fff' }} onChangeTab={({i}) => switchTab(i)  }>\n            <Tab style={[styles.tabBar]} textStyle={styles.textStyle} activeTextStyle={styles.textStyle} activeTabStyle={[styles.tabStyle]} tabStyle={styles.tabStyle} heading={i18n.t('meteo.brief')}>\n              <MeteoBriefScreen style={styles.tabBar} navigation={navigation} />\n            </Tab>\n            <Tab style={[styles.tabBar]} textStyle={styles.textStyle} activeTextStyle={styles.textStyle} activeTabStyle={[styles.tabStyle]} tabStyle={styles.tabStyle} heading={i18n.t('meteo.detailed')}>\n              <MeteoDetailed navigation={navigation} style={styles.tabBar} />\n            </Tab>\n            { Localization.locale.indexOf('cs') === -1 && (\n              <Tab style={[styles.tabBar]} textStyle={styles.textStyle} activeTextStyle={styles.textStyle} activeTabStyle={[styles.tabStyle]} tabStyle={styles.tabStyle} heading={i18n.t('meteo.radar')}>\n                <MeteoRadar style={styles.tabBar} navigation={navigation} active={currentTab === 2} />\n              </Tab>\n            )}\n          </Tabs>\n        </Container>\n      </ImageBackground>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  statusbar: { \n    flex: 1, \n    display: 'flex',\n  },\n  container: { \n    flex: 1, \n    display: 'flex', \n  },\n  header: {\n    backgroundColor: 'transparent',\n  },\n  headerBody: {\n    textAlign: 'center',\n    display: 'flex',\n    alignItems: 'center',\n    flex: 1,\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 24\n  },  \n  content: {\n    flex: 1,\n    backgroundColor: Colors.BEIGE\n  },\n  tabBar: { \n    backgroundColor: 'transparent', \n    shadowOffset: { width: 0, height: 0}, \n    elevation: 0,\n    borderBottomWidth: 0\n  },\n  tabStyle: {\n    backgroundColor: 'transparent',\n    borderBottomWidth: 0\n  },\n  textStyle: {\n    textTransform: 'uppercase',\n    color: '#fff',\n    fontSize: 14,\n    fontFamily: 'nunito-bold',\n  }\n})\n\nexport default MeteoScreen"]},"metadata":{},"sourceType":"module"}