{"ast":null,"code":"var _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/realtime/HygoGauge.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { AnimatedCircularProgress } from 'react-native-circular-progress';\n\nvar HygoGauge = function HygoGauge(_ref) {\n  var value = _ref.value,\n      min = _ref.min,\n      max = _ref.max,\n      color = _ref.color,\n      img = _ref.img,\n      unit = _ref.unit;\n  return React.createElement(View, {\n    style: styles.gaugeElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(AnimatedCircularProgress, {\n    size: 90,\n    width: 8,\n    fill: value !== null ? (value - min) / parseFloat(max - min) * 100 : 0,\n    rotation: 0,\n    tintColor: color,\n    backgroundColor: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, function () {\n    return React.createElement(Image, {\n      source: img,\n      style: styles.gaugeIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    });\n  }), value !== null && React.createElement(Text, {\n    style: styles.gaugeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"\" + value + unit));\n};\n\nvar styles = StyleSheet.create({\n  gaugeElement: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  gaugeIcon: {\n    width: 30,\n    height: 60,\n    resizeMode: 'contain',\n    tintColor: '#aaa'\n  },\n  gaugeText: {\n    marginTop: 10,\n    fontFamily: 'nunito-regular',\n    fontSize: 24,\n    color: '#aaa'\n  }\n});\nexport default HygoGauge;","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/realtime/HygoGauge.js"],"names":["React","AnimatedCircularProgress","HygoGauge","value","min","max","color","img","unit","styles","gaugeElement","parseFloat","gaugeIcon","gaugeText","StyleSheet","create","display","alignItems","width","height","resizeMode","tintColor","marginTop","fontFamily","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAIA,SAASC,wBAAT,QAAyC,gCAAzC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA2C;AAAA,MAAxCC,KAAwC,QAAxCA,KAAwC;AAAA,MAAjCC,GAAiC,QAAjCA,GAAiC;AAAA,MAA5BC,GAA4B,QAA5BA,GAA4B;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,GAAgB,QAAhBA,GAAgB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC3D,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,wBAAD;AACE,IAAA,IAAI,EAAE,EADR;AAEE,IAAA,KAAK,EAAE,CAFT;AAGE,IAAA,IAAI,EAAEP,KAAK,KAAK,IAAV,GAAiB,CAACA,KAAK,GAAGC,GAAT,IAAcO,UAAU,CAACN,GAAG,GAAGD,GAAP,CAAxB,GAAsC,GAAvD,GAA6D,CAHrE;AAIE,IAAA,QAAQ,EAAE,CAJZ;AAKE,IAAA,SAAS,EAAEE,KALb;AAME,IAAA,eAAe,EAAC,MANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAM0B;AAAA,WACtB,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEC,GAAf;AAAoB,MAAA,KAAK,EAAEE,MAAM,CAACG,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADsB;AAAA,GAN1B,CADF,EAUIT,KAAK,KAAK,IAAV,IACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACI,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAmCV,KAAnC,GAA2CK,IAA3C,CAXJ,CADF;AAgBD,CAjBD;;AAmBA,IAAMC,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,YAAY,EAAE;AACZM,IAAAA,OAAO,EAAE,MADG;AAEZC,IAAAA,UAAU,EAAE;AAFA,GADiB;AAK/BL,EAAAA,SAAS,EAAE;AAAEM,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,MAAM,EAAE,EAArB;AAAyBC,IAAAA,UAAU,EAAE,SAArC;AAAgDC,IAAAA,SAAS,EAAE;AAA3D,GALoB;AAM/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,SAAS,EAAE,EADF;AAETC,IAAAA,UAAU,EAAE,gBAFH;AAGTC,IAAAA,QAAQ,EAAE,EAHD;AAITlB,IAAAA,KAAK,EAAE;AAJE;AANoB,CAAlB,CAAf;AAcA,eAAeJ,SAAf","sourcesContent":["import React from 'react'\n\nimport { StyleSheet, View, Text, Image } from 'react-native'\n\nimport { AnimatedCircularProgress } from 'react-native-circular-progress';\n\nconst HygoGauge = ({ value, min, max, color, img, unit }) => {\n  return (\n    <View style={styles.gaugeElement}>\n      <AnimatedCircularProgress\n        size={90}\n        width={8}\n        fill={value !== null ? (value - min)/parseFloat(max - min) * 100 : 0}\n        rotation={0}\n        tintColor={color}\n        backgroundColor=\"#fff\">{() => (\n          <Image source={img} style={styles.gaugeIcon}/>\n        )}</AnimatedCircularProgress>\n      { value !== null && (\n        <Text style={styles.gaugeText}>{`${value}${unit}`}</Text>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  gaugeElement: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  gaugeIcon: { width: 30, height: 60, resizeMode: 'contain', tintColor: '#aaa' },\n  gaugeText: {\n    marginTop: 10,\n    fontFamily: 'nunito-regular',\n    fontSize: 24,\n    color: '#aaa',\n  },\n})\n\nexport default HygoGauge"]},"metadata":{},"sourceType":"module"}