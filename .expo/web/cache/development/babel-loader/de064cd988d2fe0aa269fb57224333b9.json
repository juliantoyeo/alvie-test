{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/InterventionsScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from 'react-redux';\nimport { Container, Header, Left, Body, Title, Right, Button, Content, Icon, Text } from 'native-base';\nimport HygoInterventionCard from \"../components/HygoInterventionCard\";\nimport { getInterventions } from \"../api/hygoApi\";\nimport { updateInterv as _updateInterv } from \"../store/actions/intervActions\";\nimport LogoLoading from \"../components/LogoLoading\";\nimport i18n from 'i18n-js';\nimport COLORS from \"../colors\";\nimport { Amplitude, AMPLITUDE_EVENTS } from \"../amplitude\";\nvar ampEvent = AMPLITUDE_EVENTS.interventionScreen;\n\nvar InterventionScreen = function InterventionScreen(_ref) {\n  var navigation = _ref.navigation,\n      interventionValues = _ref.interventionValues,\n      updateInterv = _ref.updateInterv;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRefreshing = _useState4[0],\n      setIsRefreshing = _useState4[1];\n\n  useEffect(function () {\n    loadInterventions();\n    var unsubscribe = navigation.addListener('didFocus', function () {\n      loadInterventions();\n    });\n    return function () {\n      return unsubscribe.remove();\n    };\n  }, []);\n  useEffect(function () {\n    Amplitude.logEventWithProperties(ampEvent.render, {\n      timestamp: Date.now()\n    });\n    var unsubscribe = navigation.addListener('didFocus', function () {\n      Amplitude.logEventWithProperties(ampEvent.render, {\n        timestamp: Date.now()\n      });\n    });\n    return function () {\n      return unsubscribe.remove();\n    };\n  }, []);\n\n  var loadInterventions = function loadInterventions() {\n    var _await$getInterventio, interventionValues;\n\n    return _regeneratorRuntime.async(function loadInterventions$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getInterventions());\n\n          case 2:\n            _await$getInterventio = _context.sent;\n            interventionValues = _await$getInterventio.interventionValues;\n\n            if (interventionValues) {\n              updateInterv(interventionValues);\n            }\n\n            setLoading(false);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onRefresh = function onRefresh() {\n    return _regeneratorRuntime.async(function onRefresh$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setIsRefreshing(true);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(loadInterventions());\n\n          case 3:\n            setIsRefreshing(false);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.statusbar,\n    forceInset: {\n      top: 'always'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    translucent: true,\n    backgroundColor: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(Container, {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(Header, {\n    style: styles.header,\n    hasTabs: true,\n    androidStatusBarColor: \"transparent\",\n    iosBarStyle: \"light-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(Left, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return navigation.toggleDrawer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"menu\",\n    style: {\n      color: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }))), React.createElement(Body, {\n    style: styles.headerBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, React.createElement(Title, {\n    style: styles.headerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, i18n.t('intervention.header'))), React.createElement(Right, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), loading && React.createElement(View, {\n    style: [StyleSheet.absoluteFill, {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, React.createElement(LogoLoading, {\n    color: COLORS.CYAN,\n    duration: 1000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), !loading && React.createElement(Content, {\n    contentContainerStyle: {\n      flexGrow: 1,\n      backgroundColor: COLORS.BEIGE,\n      padding: 10,\n      paddingLeft: 0,\n      paddingRight: 15,\n      disableKBDismissScroll: true\n    },\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: isRefreshing,\n      onRefresh: onRefresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 31\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, interventionValues.length >= 1 && React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, interventionValues.map(function (intervention) {\n    return React.createElement(HygoInterventionCard, {\n      key: intervention.id,\n      navigation: navigation,\n      intervention: intervention,\n      onPress: function onPress(interv) {\n        return navigation.navigate('InterventionMapScreen', {\n          intervention: interv\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 23\n      }\n    });\n  }), React.createElement(View, {\n    style: {\n      height: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  })), interventionValues.length < 1 && React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      flex: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }), React.createElement(Text, {\n    textAlign: \"center\",\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, i18n.t('intervention.no_data')), React.createElement(View, {\n    style: {\n      flex: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  content: {\n    flex: 1,\n    backgroundColor: COLORS.BEIGE\n  },\n  statusbar: {\n    flex: 1,\n    display: 'flex',\n    backgroundColor: Platform.OS === 'ios' ? 'black' : COLORS.CYAN\n  },\n  container: {\n    flex: 1,\n    display: 'flex'\n  },\n  header: {\n    backgroundColor: COLORS.CYAN\n  },\n  headerBody: {\n    flex: 3,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 24\n  },\n  scrollContainer: {\n    padding: 10,\n    display: 'flex',\n    flex: 1,\n    paddingLeft: 0,\n    paddingRight: 15,\n    backgroundColor: COLORS.BEIGE,\n    flexGrow: 1\n  },\n  text: {\n    color: COLORS.DARK_GREEN,\n    textAlign: 'center',\n    fontSize: 18,\n    flex: 1,\n    fontFamily: 'nunito-regular'\n  },\n  message: {\n    justifyContent: 'center',\n    flex: 1,\n    display: 'flex',\n    paddingLeft: 38,\n    paddingRight: 38,\n    alignItems: 'center'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    interventionValues: state.interv.interventions\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    updateInterv: function updateInterv(interventionValues) {\n      return dispatch(_updateInterv(interventionValues));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InterventionScreen);","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/InterventionsScreen.js"],"names":["React","useEffect","useState","SafeAreaView","connect","Container","Header","Left","Body","Title","Right","Button","Content","Icon","Text","HygoInterventionCard","getInterventions","updateInterv","LogoLoading","i18n","COLORS","Amplitude","AMPLITUDE_EVENTS","ampEvent","interventionScreen","InterventionScreen","navigation","interventionValues","loading","setLoading","isRefreshing","setIsRefreshing","loadInterventions","unsubscribe","addListener","remove","logEventWithProperties","render","timestamp","Date","now","onRefresh","styles","statusbar","top","content","header","flex","toggleDrawer","color","headerBody","headerTitle","t","StyleSheet","absoluteFill","display","alignItems","justifyContent","CYAN","flexGrow","backgroundColor","BEIGE","padding","paddingLeft","paddingRight","disableKBDismissScroll","length","map","intervention","id","interv","navigate","height","text","create","Platform","OS","container","fontFamily","fontSize","scrollContainer","DARK_GREEN","textAlign","message","mapStateToProps","state","interventions","mapDispatchToProps","dispatch","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport { StyleSheet, RefreshControl, StatusBar, View } from 'react-native';\nimport { connect } from 'react-redux';\nimport { Container, Header, Left, Body, Title, Right, Button, Content, Icon, Text } from 'native-base';\nimport HygoInterventionCard from '../components/HygoInterventionCard';\nimport { getInterventions } from '../api/hygoApi';\nimport { updateInterv } from '../store/actions/intervActions';\n\nimport LogoLoading from '../components/LogoLoading'\n\nimport i18n from 'i18n-js'\n\nimport COLORS from '../colors'\n\nimport {Amplitude, AMPLITUDE_EVENTS} from '../amplitude'\nconst {interventionScreen: ampEvent} = AMPLITUDE_EVENTS\n\nconst InterventionScreen = ({ navigation, interventionValues, updateInterv }) => {\n  const [loading, setLoading] = useState(true)\n  const [isRefreshing, setIsRefreshing] = useState(false)\n\n  useEffect(() => {\n    loadInterventions()\n    const unsubscribe = navigation.addListener('didFocus', () => {\n      loadInterventions()\n    });\n    return (() => unsubscribe.remove())\n  }, [])\n\n  useEffect( () => {\n    // console.log(\"Amplitude : \", ampEvent.render)\n    Amplitude.logEventWithProperties(ampEvent.render, {\n      timestamp: Date.now()\n    })\n    const unsubscribe = navigation.addListener('didFocus', () => {\n      // console.log(\"Amplitude : \", ampEvent.render)\n      Amplitude.logEventWithProperties(ampEvent.render, {\n        timestamp: Date.now()\n      })\n    })\n    return () => unsubscribe.remove()\n  }, [])\n\n  const loadInterventions = async () => {\n    let {interventionValues} = await getInterventions()\n    if (interventionValues) {\n      updateInterv(interventionValues);\n    }\n\n    setLoading(false)\n  }\n\n  const onRefresh = async () => {\n    setIsRefreshing(true)\n    await loadInterventions()\n    setIsRefreshing(false)\n  }\n\n  return (\n    <SafeAreaView style={styles.statusbar} forceInset={{top:'always'}}>\n      <StatusBar translucent backgroundColor=\"transparent\" />\n      <Container style={styles.content}>\n        <Header style={styles.header} hasTabs androidStatusBarColor=\"transparent\" iosBarStyle=\"light-content\">\n          <Left style={{ flex: 1 }}>\n            <Button transparent onPress={() => navigation.toggleDrawer() }>\n              <Icon name='menu' style={{ color: '#fff' }} />\n            </Button>\n          </Left>\n          <Body style={styles.headerBody}>\n            <Title style={styles.headerTitle}>{i18n.t('intervention.header')}</Title>\n          </Body>\n          <Right style={{ flex: 1 }}></Right>\n        </Header>\n\n        { loading && (\n          <View style={[StyleSheet.absoluteFill, {display: 'flex', alignItems: 'center', justifyContent: 'center'}]}>\n            <LogoLoading color={COLORS.CYAN} duration={1000} />\n          </View>\n        )}\n\n        { !loading && (\n            <Content contentContainerStyle={{ flexGrow: 1, backgroundColor: COLORS.BEIGE, padding: 10, paddingLeft: 0, paddingRight: 15, disableKBDismissScroll: true }} \n              refreshControl={<RefreshControl refreshing={isRefreshing} onRefresh={onRefresh} />}>\n              { interventionValues.length >= 1 && (\n                <View>\n                  { interventionValues.map((intervention) => {\n                    return (\n                      <HygoInterventionCard \n                        key={intervention.id}\n                        navigation={navigation}\n                        intervention={intervention}\n                        onPress={(interv) => navigation.navigate('InterventionMapScreen', { intervention: interv })}\n                      />\n                    );\n                  })}\n\n                  <View style={{ height: 50 }}></View>\n                </View>\n              )}\n          \n              { interventionValues.length < 1 && (\n                <>\n                  <View style={{ flex: 2 }} />\n                  <Text textAlign=\"center\" style={styles.text}>{i18n.t('intervention.no_data')}</Text>\n                  <View style={{ flex: 2 }} />\n                </>\n              )}\n            </Content> \n        )}\n      </Container>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flex: 1,\n    backgroundColor: COLORS.BEIGE\n  },\n  statusbar: { \n    flex: 1, \n    display: 'flex',\n    backgroundColor: Platform.OS === 'ios' ? 'black' : COLORS.CYAN,\n  },\n  container: { \n    flex: 1, \n    display: 'flex', \n  },\n  header: {\n    backgroundColor: COLORS.CYAN\n  },\n  headerBody: {\n    flex: 3,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 24\n  },  \n  scrollContainer: { \n    padding: 10,\n    display: 'flex',\n    flex: 1,\n    paddingLeft: 0,\n    paddingRight: 15,\n    backgroundColor: COLORS.BEIGE,\n    flexGrow: 1,\n  },\n  text: {\n    color: COLORS.DARK_GREEN,\n    textAlign: 'center',\n    fontSize: 18,\n    flex: 1,\n    fontFamily: 'nunito-regular'\n  },\n  message: {\n    justifyContent: 'center', \n    flex: 1, \n    display: 'flex', \n    paddingLeft: 38, \n    paddingRight: 38, \n    alignItems: 'center'\n  }\n});\n\nconst mapStateToProps = (state) => ({\n  interventionValues: state.interv.interventions\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  updateInterv: (interventionValues)=>dispatch(updateInterv(interventionValues)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InterventionScreen);\n\n\n\n"]},"metadata":{},"sourceType":"module"}