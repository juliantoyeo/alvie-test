{"ast":null,"code":"var _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/testScreens/ReportScreen.tsx\";\nimport React from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { connect } from 'react-redux';\nimport { Container, Header, Left, Body, Title, Right, Button, Content, Icon, Text, Footer, Grid, Col, Row } from 'native-base';\nimport HygoButton from \"../../components/HygoButton\";\nimport { ModulationContext } from \"../../context/modulation.context\";\nimport { HygoCard, HygoCardSmall } from \"../../components/v2/HygoCards\";\nimport hygoStyles from \"../../styles\";\nimport COLORS from \"../../colors\";\nimport Metrics from \"../../components/pulverisation-detailed/Metrics\";\nimport ExtraMetrics from \"../../components/pulverisation-detailed/ExtraMetrics\";\n\nvar hasRacinaire = function hasRacinaire() {\n  return false;\n};\n\nvar ReportScreen = function ReportScreen(_ref) {\n  var navigation = _ref.navigation;\n  var context = React.useContext(ModulationContext);\n  var totalArea = context.selectedFields.reduce(function (r, f) {\n    return r + f.area;\n  }, 0);\n  var volume = totalArea / 10000 * context.debit;\n  var totalPhyto = totalArea / 10000 * context.selectedProducts.reduce(function (r, p) {\n    return r + p.dose;\n  }, 0);\n  var water = volume - totalPhyto;\n  var modAvg = context.mod.length > 0 ? context.mod.reduce(function (sum, m) {\n    return sum + m.mod;\n  }, 0) / context.mod.length : 0;\n  return React.createElement(SafeAreaView, {\n    style: styles.statusbar,\n    forceInset: {\n      top: 'always'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    translucent: true,\n    backgroundColor: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), React.createElement(Container, {\n    contentContainerStyle: [styles.container, StyleSheet.absoluteFill],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, React.createElement(Header, {\n    style: styles.header,\n    androidStatusBarColor: COLORS.CYAN,\n    iosBarStyle: \"light-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, React.createElement(Left, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, React.createElement(Icon, {\n    type: \"AntDesign\",\n    name: \"arrowleft\",\n    style: {\n      color: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }))), React.createElement(Body, {\n    style: styles.headerBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, React.createElement(Title, {\n    style: styles.headerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"Pulv\\xE9risation\"), React.createElement(Title, {\n    style: styles.headerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"R\\xE9capitulatif\")), React.createElement(Right, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  })), React.createElement(Content, {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: COLORS.DARK_BLUE\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, React.createElement(Title, {\n    style: styles.hourTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, context.selectedSlot.min, \"h - \", context.selectedSlot.max + 1, \"h\"), React.createElement(View, {\n    style: {\n      paddingBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, React.createElement(Metrics, {\n    currentHourMetrics: context.metrics,\n    hasRacinaire: hasRacinaire(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  })), React.createElement(ExtraMetrics, {\n    currentHourMetrics: context.metrics,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: hygoStyles.h0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"Rapport de pulv\\xE9risation\"), React.createElement(HygoCard, {\n    title: \"Remplissage de cuve\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, React.createElement(HygoCardSmall, {\n    title: \"Produits\",\n    cardStyle: {\n      borderWidth: 1,\n      borderColor: '#B4B1B1'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, React.createElement(Grid, {\n    style: {\n      paddingTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  }, context.selectedProducts.map(function (p) {\n    var mod = context.mod.filter(function (m) {\n      return m.product.id == p.phytoproduct.id;\n    });\n    console.log(mod);\n    return mod.length > 0 && React.createElement(Row, {\n      key: p.id,\n      style: {\n        paddingLeft: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 45\n      }\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 49\n      }\n    }, React.createElement(Text, {\n      style: [hygoStyles.text, {\n        color: COLORS.DARK_BLUE\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 54\n      }\n    }, p.name)), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 49\n      }\n    }, React.createElement(Text, {\n      style: [hygoStyles.text, {\n        color: COLORS.DARK_BLUE,\n        textAlign: 'right'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 54\n      }\n    }, (p.dose * (100 - mod[0].mod) / 100).toFixed(3), \" L/ha\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 49\n      }\n    }, React.createElement(Text, {\n      style: [hygoStyles.text, {\n        color: COLORS.DARK_BLUE,\n        textAlign: 'right'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 54\n      }\n    }, (p.dose * totalArea / 10000 * (100 - mod[0].mod) / 100).toFixed(1), \" L\")));\n  }))), React.createElement(Grid, {\n    style: {\n      paddingTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: hygoStyles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 42\n    }\n  }, \"Volume de bouillie\")), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: [hygoStyles.text, {\n      textAlign: 'right'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 42\n    }\n  }, volume.toFixed(1), \" L\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: hygoStyles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 42\n    }\n  }, \"Eau\")), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: [hygoStyles.text, {\n      textAlign: 'right'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 42\n    }\n  }, water.toFixed(1), \" L\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: hygoStyles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 42\n    }\n  }, \"Surface totale\")), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: [hygoStyles.text, {\n      textAlign: 'right'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 42\n    }\n  }, (totalArea / 10000).toFixed(1), \" ha\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: hygoStyles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 42\n    }\n  }, \"D\\xE9bit\")), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: [hygoStyles.text, {\n      textAlign: 'right'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 42\n    }\n  }, context.debit.toFixed(1), \" L/ha\")))), React.createElement(View, {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: [hygoStyles.h0, {\n      padding: 0,\n      paddingBottom: 0,\n      fontSize: 16,\n      paddingTop: 5\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, \"Total \\xE9conomis\\xE9\"), React.createElement(Text, {\n    style: [hygoStyles.h0, {\n      padding: 0,\n      paddingBottom: 0,\n      fontSize: 24\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, (totalPhyto * modAvg / 100).toFixed(1) + \"L (\" + modAvg.toFixed(0) + \"%)\"))))), React.createElement(Footer, {\n    style: styles.footer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, React.createElement(HygoButton, {\n    label: \"EXPORTER\",\n    onPress: function onPress() {},\n    icon: {\n      type: 'AntDesign',\n      name: 'arrowright',\n      fontSize: 26\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  statusbar: {\n    flex: 1,\n    display: 'flex',\n    backgroundColor: Platform.OS === 'ios' ? 'black' : COLORS.CYAN\n  },\n  container: {\n    backgroundColor: COLORS.BEIGE,\n    flexDirection: \"column\",\n    display: 'flex'\n  },\n  header: {\n    backgroundColor: COLORS.CYAN\n  },\n  headerBody: {\n    flex: 4,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 24\n  },\n  title: {\n    paddingTop: 20,\n    paddingLeft: 10,\n    textTransform: 'uppercase',\n    fontFamily: 'nunito-bold',\n    fontSize: 16,\n    color: COLORS.CYAN\n  },\n  content: {\n    backgroundColor: COLORS.BEIGE\n  },\n  footer: {\n    backgroundColor: COLORS.BEIGE\n  },\n  sliderContainer: {\n    marginTop: 40,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  hourTitle: {\n    color: '#FFF',\n    textTransform: 'uppercase',\n    fontFamily: 'nunito-bold',\n    fontSize: 26,\n    paddingTop: 20\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportScreen);","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/testScreens/ReportScreen.tsx"],"names":["React","SafeAreaView","connect","Container","Header","Left","Body","Title","Right","Button","Content","Icon","Text","Footer","Grid","Col","Row","HygoButton","ModulationContext","HygoCard","HygoCardSmall","hygoStyles","COLORS","Metrics","ExtraMetrics","hasRacinaire","ReportScreen","navigation","context","useContext","totalArea","selectedFields","reduce","r","f","area","volume","debit","totalPhyto","selectedProducts","p","dose","water","modAvg","mod","length","sum","m","styles","statusbar","top","container","StyleSheet","absoluteFill","header","CYAN","flex","goBack","color","headerBody","headerTitle","content","backgroundColor","DARK_BLUE","hourTitle","selectedSlot","min","max","paddingBottom","metrics","h0","borderWidth","borderColor","paddingTop","map","filter","product","id","phytoproduct","console","log","paddingLeft","text","name","textAlign","toFixed","display","justifyContent","flexDirection","alignItems","padding","fontSize","footer","type","create","Platform","OS","BEIGE","fontFamily","title","textTransform","sliderContainer","marginTop","mapStateToProps","state","mapDispatchToProps","dispatch","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport { StyleSheet, RefreshControl, StatusBar, View, Platform, Image, Dimensions } from 'react-native';\nimport { connect } from 'react-redux';\nimport { Container, Header, Left, Body, Title, Right, Button, Content, Icon, Text, Footer, Grid, Col, Row } from 'native-base';\nimport { ProductList } from './ProductList';\nimport HygoButton from '../../components/HygoButton';\nimport { getInterventions } from '../../api/hygoApi';\nimport { ModulationContext } from '../../context/modulation.context';\nimport { HygoCard, HygoCardSmall } from '../../components/v2/HygoCards';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport i18n from 'i18n-js';\nimport hygoStyles from '../../styles';\nimport COLORS from '../../colors';\nimport Metrics from '../../components/pulverisation-detailed/Metrics';\nimport HourScale from '../../components/pulverisation-detailed/HourScale';\nimport ExtraMetrics from '../../components/pulverisation-detailed/ExtraMetrics';\nimport Modulation from '../../components/pulverisation-detailed/Modulation';\nimport HygoParcelleIntervention from '../../components/HygoParcelleIntervention';\n\nconst hasRacinaire = () => false\n\nconst ReportScreen = ({ navigation }) => {\n    const context = React.useContext(ModulationContext)\n    const totalArea = context.selectedFields.reduce((r, f) => r + f.area, 0)\n    const volume = totalArea/10000 * context.debit\n    const totalPhyto = totalArea/10000 * context.selectedProducts.reduce((r, p) => r + p.dose, 0)\n    const water = volume - totalPhyto\n\n    const modAvg = context.mod.length > 0 ? context.mod.reduce((sum, m) => sum + m.mod, 0) / context.mod.length : 0\n\n    return (\n        <SafeAreaView style={styles.statusbar} forceInset={{ top: 'always' }}>\n            <StatusBar translucent backgroundColor=\"transparent\" />\n            <Container contentContainerStyle={[styles.container, StyleSheet.absoluteFill]}>\n                <Header style={styles.header} androidStatusBarColor={COLORS.CYAN} iosBarStyle=\"light-content\">\n                    <Left style={{ flex: 1 }}>\n                        <Button transparent onPress={() => navigation.goBack()}>\n                            <Icon type='AntDesign' name='arrowleft' style={{ color: '#fff' }} />\n                        </Button>\n                    </Left>\n                    <Body style={styles.headerBody}>\n                        <Title style={styles.headerTitle}>Pulvérisation</Title>\n                        <Title style={styles.headerTitle}>Récapitulatif</Title>\n                    </Body>\n                    <Right style={{ flex: 1 }}></Right>\n                </Header>\n                <Content style={styles.content}>\n                    {/*=============== Metrics ===============*/}\n                    <View style={{ backgroundColor: COLORS.DARK_BLUE }}>\n                        <Title style={styles.hourTitle}>{context.selectedSlot.min}h - {context.selectedSlot.max + 1}h</Title>\n                        <View style={{ paddingBottom: 20 }}>\n                            <Metrics currentHourMetrics={context.metrics} hasRacinaire={hasRacinaire()} />\n                        </View>\n                        <ExtraMetrics currentHourMetrics={context.metrics} />\n                    </View>\n                    {/*=============== Quantities ==============*/}\n                    <View>\n                        <Text style={hygoStyles.h0}>Rapport de pulvérisation</Text>\n                        <HygoCard title='Remplissage de cuve'>\n                            <HygoCardSmall title='Produits' cardStyle={{ borderWidth: 1, borderColor: '#B4B1B1' }}>\n                                <Grid style={{ paddingTop: 10 }}>\n                                    {context.selectedProducts.map((p) => {\n                                        const mod = context.mod.filter((m) => m.product.id == p.phytoproduct.id)\n                                        console.log(mod)\n                                        return (\n                                            (mod.length > 0) && (\n                                            <Row key={p.id} style={{ paddingLeft: 20 }}>\n                                                <Col><Text style={[hygoStyles.text, { color: COLORS.DARK_BLUE }]}>{p.name}</Text></Col>\n                                                <Col><Text style={[hygoStyles.text, { color: COLORS.DARK_BLUE, textAlign: 'right' }]}>\n                                                    {(p.dose * (100 - mod[0].mod) / 100).toFixed(3)} L/ha\n                                                </Text></Col>\n                                                <Col><Text style={[hygoStyles.text, { color: COLORS.DARK_BLUE, textAlign: 'right' }]}>\n                                                    {(p.dose * totalArea/10000 * (100 - mod[0].mod) / 100).toFixed(1)} L\n                                                </Text></Col>\n                                            </Row>\n                                            )\n                                        )\n                                    })}\n                                </Grid>\n                            </HygoCardSmall>\n                            <Grid style={{ paddingTop: 10 }}>\n                                <Row>\n                                    <Col><Text style={hygoStyles.text}>Volume de bouillie</Text></Col>\n                                    <Col><Text style={[hygoStyles.text, { textAlign: 'right' }]}>{volume.toFixed(1)} L</Text></Col>\n                                </Row>\n                                <Row>\n                                    <Col><Text style={hygoStyles.text}>Eau</Text></Col>\n                                    <Col><Text style={[hygoStyles.text, { textAlign: 'right' }]}>{water.toFixed(1)} L</Text></Col>\n                                </Row>\n                                <Row>\n                                    <Col><Text style={hygoStyles.text}>Surface totale</Text></Col>\n                                    <Col><Text style={[hygoStyles.text, { textAlign: 'right' }]}>{(totalArea/10000).toFixed(1)} ha</Text></Col>\n                                </Row>\n                                <Row>\n                                    <Col><Text style={hygoStyles.text}>Débit</Text></Col>\n                                    <Col><Text style={[hygoStyles.text, { textAlign: 'right' }]}>{context.debit.toFixed(1)} L/ha</Text></Col>\n                                </Row>\n\n                            </Grid>\n                            <View style={{ display: 'flex', justifyContent: 'space-between', flexDirection: 'row', alignItems: 'center', paddingTop: 10 }}>\n                                <Text style={[hygoStyles.h0, { padding: 0, paddingBottom: 0, fontSize: 16, paddingTop: 5 }]}>Total économisé</Text>\n                                <Text style={[hygoStyles.h0, { padding: 0, paddingBottom: 0, fontSize: 24 }]}>{`${(totalPhyto * modAvg / 100).toFixed(1)}L (${modAvg.toFixed(0)}%)`}</Text>\n                            </View>\n                        </HygoCard>\n                    </View>\n                </Content>\n                <Footer style={styles.footer}>\n                    <HygoButton\n                        label=\"EXPORTER\"\n                        onPress={() => {\n                        }}\n                        icon={{\n                            type: 'AntDesign',\n                            name: 'arrowright',\n                            fontSize: 26,\n                        }} />\n                </Footer>\n            </Container>\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    statusbar: {\n        flex: 1,\n        display: 'flex',\n        backgroundColor: Platform.OS === 'ios' ? 'black' : COLORS.CYAN,\n    },\n    container: {\n        backgroundColor: COLORS.BEIGE,\n        flexDirection: \"column\",\n        display: 'flex',\n    },\n    header: {\n        backgroundColor: COLORS.CYAN\n    },\n    headerBody: {\n        flex: 4,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    headerTitle: {\n        color: '#fff',\n        fontFamily: 'nunito-regular',\n        fontSize: 24\n    },\n    title: {\n        paddingTop: 20,\n        paddingLeft: 10,\n        textTransform: 'uppercase',\n        fontFamily: 'nunito-bold',\n        fontSize: 16,\n        color: COLORS.CYAN\n    },\n    content: {\n        backgroundColor: COLORS.BEIGE\n    },\n    footer: {\n        backgroundColor: COLORS.BEIGE\n    },\n    sliderContainer: {\n        marginTop: 40,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    hourTitle: {\n        color: '#FFF',\n        textTransform: 'uppercase',\n        fontFamily: 'nunito-bold',\n        fontSize: 26,\n        paddingTop: 20\n    }\n})\n\nconst mapStateToProps = (state) => ({\n\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportScreen);"]},"metadata":{},"sourceType":"module"}