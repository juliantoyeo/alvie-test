{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/MeteoDetailed.js\";\nimport React, { useState, useEffect } from 'react';\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Spinner, Text, Content } from 'native-base';\nimport i18n from 'i18n-js';\nimport { getMeteoDetailed } from \"../api/hygoApi\";\nimport { meteoSynced as _meteoSynced } from \"../store/actions/metaActions\";\nimport { connect } from 'react-redux';\nimport COLORS from \"../colors\";\nimport { Amplitude, AMPLITUDE_EVENTS } from \"../amplitude\";\nvar meteoDetailedScreen = AMPLITUDE_EVENTS.meteoDetailedScreen;\nvar PICTO_MAP = {\n  'SUN': require(\"../../assets/sunny.png\"),\n  'CLOUD': require(\"../../assets/cloudy.png\"),\n  'STORM': require(\"../../assets/stormy.png\"),\n  'RAIN': require(\"../../assets/rainy.png\"),\n  'SNOW': require(\"../../assets/snowy.png\")\n};\n\nvar MeteoDetailed = function MeteoDetailed(_ref) {\n  var navigation = _ref.navigation,\n      lastMeteoLoad = _ref.lastMeteoLoad,\n      meteoSynced = _ref.meteoSynced;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRefreshing = _useState4[0],\n      setIsRefreshing = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      detailed = _useState6[0],\n      setDetailed = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentDay = _useState8[0],\n      setCurrentDay = _useState8[1];\n\n  var _useState9 = useState(-1),\n      _useState10 = _slicedToArray(_useState9, 2),\n      lastLoad = _useState10[0],\n      setLastLoad = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      counter = _useState12[0],\n      setCounter = _useState12[1];\n\n  useEffect(function () {\n    var interval;\n    var u1 = navigation.addListener('didFocus', function () {\n      interval = setInterval(function () {\n        setCounter(new Date().getTime());\n      }, 30000);\n      setCounter(new Date().getTime());\n    });\n    var u2 = navigation.addListener('willBlur', function () {\n      clearInterval(interval);\n    });\n    interval = setInterval(function () {\n      setCounter(new Date().getTime());\n    }, 30000);\n    setCounter(new Date().getTime());\n    return function () {\n      u1.remove();\n      u2.remove();\n    };\n  }, []);\n  useEffect(function () {\n    if (counter - lastLoad >= 300000) {\n      loadMeteoDetailed();\n    }\n  }, [counter]);\n\n  var loadMeteoDetailed = function loadMeteoDetailed() {\n    var result;\n    return _regeneratorRuntime.async(function loadMeteoDetailed$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!loading) {\n              setIsRefreshing(true);\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getMeteoDetailed({\n              day: null,\n              product: null\n            }));\n\n          case 3:\n            result = _context.sent;\n            setDetailed(result);\n            setCurrentDay(function (prev) {\n              if (prev === null) {\n                return result.days[0];\n              }\n\n              return prev;\n            });\n            meteoSynced(new Date().getTime());\n            setLoading(false);\n            setIsRefreshing(false);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onRefresh = function onRefresh() {\n    return _regeneratorRuntime.async(function onRefresh$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setIsRefreshing(true);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(loadMeteoDetailed(true));\n\n          case 3:\n            setIsRefreshing(false);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var goToDetails = function goToDetails(_ref2) {\n    var day = _ref2.day,\n        product = _ref2.product;\n    Amplitude.logEventWithProperties(meteoDetailedScreen.click_goToPulvDetails, {\n      timestamp: Date.now()\n    });\n    navigation.navigate('LoadingScreen', {\n      next: 'MeteoDetailedDetails',\n      params: {\n        day: day,\n        product: product\n      },\n      action: getMeteoDetailed\n    });\n  };\n\n  return React.createElement(Content, {\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: isRefreshing,\n      onRefresh: onRefresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 30\n      }\n    }),\n    contentContainerStyle: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, loading && React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(Spinner, {\n    size: 16,\n    color: COLORS.CYAN,\n    style: {\n      height: 48,\n      marginTop: 48\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  })), !loading && !!detailed.data && !!detailed.data[currentDay] && !!detailed.days && React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.tabBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, detailed.days.slice(0, 5).map(function (d) {\n    var data = detailed.data[d].data;\n    return React.createElement(TouchableOpacity, {\n      key: d,\n      style: [styles.tabHeading, {\n        backgroundColor: currentDay === d ? '#fff' : COLORS.DARK_BLUE\n      }],\n      onPress: function onPress() {\n        return setCurrentDay(d);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: [styles.tabText, {\n        color: currentDay === d ? COLORS.DARK_BLUE : '#fff'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, i18n.t(\"meteo_detailed.days_\" + detailed.data[d].meta.dow)), React.createElement(View, {\n      style: styles.weatherContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, React.createElement(Image, {\n      source: PICTO_MAP[data.pictocode],\n      style: styles.weatherImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    })));\n  })), React.createElement(View, {\n    style: styles.dayContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.dayWeather,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.dayWeatherItemContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/ICN-Wind.png\"),\n    style: styles.dayWeatherItemImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.dayWeatherItemText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, Math.round(detailed.data[currentDay].data.wind) + \" km/h\"), React.createElement(Text, {\n    style: styles.dayWeatherItemText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, Math.round(detailed.data[currentDay].data.gust) + \" km/h\")), React.createElement(View, {\n    style: styles.dayWeatherItemContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/ICN-Rain.png\"),\n    style: styles.dayWeatherItemImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.dayWeatherItemText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, Math.round(parseFloat(detailed.data[currentDay].data.precipitation)) + \" mm\"), React.createElement(Text, {\n    style: styles.dayWeatherItemText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, Math.round(parseFloat(detailed.data[currentDay].data.probability)) + \"%\")), React.createElement(View, {\n    style: styles.dayWeatherItemContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/ICN-Temperature.png\"),\n    style: styles.dayWeatherItemImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.dayWeatherItemText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, Math.round(parseFloat(detailed.data[currentDay].data.mintemp)) + \"\\xB0C\"), React.createElement(Text, {\n    style: styles.dayWeatherItemText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, Math.round(parseFloat(detailed.data[currentDay].data.maxtemp)) + \"\\xB0C\")), React.createElement(View, {\n    style: styles.dayWeatherItemContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/ICN-Hygro.png\"),\n    style: styles.dayWeatherItemImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.dayWeatherItemText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, Math.round(parseFloat(detailed.data[currentDay].data.minhumi)) + \"%\"), React.createElement(Text, {\n    style: styles.dayWeatherItemText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, Math.round(parseFloat(detailed.data[currentDay].data.maxhumi)) + \"%\"))), React.createElement(View, {\n    style: styles.hour4Weather,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, ['00', '04', '08', '12', '16', '20'].map(function (h) {\n    return React.createElement(View, {\n      key: h,\n      style: styles.hour4WeatherContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.hour4WeatherText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, h + \"h\"), React.createElement(Image, {\n      style: styles.hour4WeatherImage,\n      source: PICTO_MAP[detailed.data[currentDay].hours4[\"\" + parseInt(h)].pictocode],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }));\n  }))), React.createElement(View, {\n    style: styles.pulve,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.pulveTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, i18n.t('meteo_detailed.pulve_title', {\n    value: detailed.products.length || ''\n  })), React.createElement(View, {\n    style: styles.pulveContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, detailed.products.map(function (p) {\n    var dayProduct = detailed.data[currentDay].hours1[p.id].data;\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        goToDetails({\n          product: p.id,\n          day: currentDay\n        });\n      },\n      key: p.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.productContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.productName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 23\n      }\n    }, i18n.t(\"products.\" + p.name)), React.createElement(View, {\n      style: styles.productCondition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 23\n      }\n    }, _toConsumableArray(Array(24).keys()).map(function (i) {\n      var padded = (\"\" + i).padStart(2, '0');\n      return React.createElement(View, {\n        key: i,\n        style: [styles.parcelle, {\n          backgroundColor: COLORS[dayProduct[padded].condition]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }\n      }, dayProduct[padded].conflict && React.createElement(Text, {\n        style: styles.parcelleExclamation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 33\n        }\n      }, \"!\"));\n    })), React.createElement(View, {\n      style: styles.hoursContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 23\n      }\n    }, React.createElement(Text, {\n      style: styles.hours,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }\n    }, \"00H\"), React.createElement(Text, {\n      style: styles.hours,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, \"06H\"), React.createElement(Text, {\n      style: styles.hours,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }, \"12H\"), React.createElement(Text, {\n      style: styles.hours,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }, \"18H\"), React.createElement(Text, {\n      style: styles.hours,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }, \"24H\"))));\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n    paddingBottom: 80,\n    paddingTop: 20\n  },\n  hoursContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  hours: {\n    color: '#aaa',\n    fontSize: 12,\n    fontFamily: 'nunito-regular'\n  },\n  tabBar: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  tabHeading: {\n    padding: 15,\n    width: Dimensions.get('window').width / 5 - 4,\n    backgroundColor: COLORS.DARK_BLUE,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderTopRightRadius: 20,\n    marginHorizontal: 2\n  },\n  tabText: {\n    fontFamily: 'nunito-heavy',\n    fontSize: 14,\n    color: '#fff'\n  },\n  weatherContainer: {\n    padding: 8,\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: COLORS.BEIGE,\n    marginTop: 5,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  weatherImage: {\n    width: 24,\n    height: 24,\n    tintColor: COLORS.DARK_BLUE\n  },\n  dayContent: {\n    backgroundColor: '#fff',\n    paddingHorizontal: 15,\n    paddingTop: 20,\n    shadowColor: '#000',\n    elevation: 3,\n    shadowOpacity: .2,\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowRadius: 3\n  },\n  dayWeather: {\n    backgroundColor: COLORS.BEIGE,\n    paddingVertical: 10,\n    borderRadius: 35,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-evenly'\n  },\n  dayWeatherItemContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  dayWeatherItemImage: {\n    width: 24,\n    resizeMode: 'contain',\n    tintColor: COLORS.DARK_BLUE\n  },\n  dayWeatherItemText: {\n    fontFamily: 'nunito-bold',\n    fontSize: 14,\n    color: COLORS.DARK_BLUE\n  },\n  hour4Weather: {\n    paddingHorizontal: 8,\n    paddingVertical: 10,\n    paddingBottom: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-evenly'\n  },\n  hour4WeatherContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  hour4WeatherText: {\n    fontSize: 14,\n    fontFamily: 'nunito-regular',\n    color: '#aaa'\n  },\n  hour4WeatherImage: {\n    marginTop: 5,\n    width: 24,\n    height: 24,\n    resizeMode: 'cover',\n    tintColor: COLORS.DARK_BLUE\n  },\n  pulve: {\n    paddingHorizontal: 20,\n    paddingVertical: 18,\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: 10,\n    backgroundColor: '#fff'\n  },\n  pulveTitle: {\n    fontFamily: 'nunito-heavy',\n    fontSize: 14,\n    color: COLORS.DARK_BLUE,\n    textTransform: 'uppercase',\n    marginBottom: 8\n  },\n  productContainer: {\n    marginTop: 10\n  },\n  productName: {\n    fontFamily: 'nunito-regular',\n    fontSize: 14,\n    color: '#aaa'\n  },\n  productCondition: {\n    height: 20,\n    flexDirection: 'row',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  parcelle: {\n    height: 20,\n    zIndex: 5,\n    width: 10,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  parcelleExclamation: {\n    fontFamily: 'nunito-heavy',\n    fontSize: 16,\n    color: '#fff'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    lastMeteoLoad: state.metadata.lastMeteoLoad\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    meteoSynced: function meteoSynced(d) {\n      return dispatch(_meteoSynced(d));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeteoDetailed);","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/MeteoDetailed.js"],"names":["React","useState","useEffect","Spinner","Text","Content","i18n","getMeteoDetailed","meteoSynced","connect","COLORS","Amplitude","AMPLITUDE_EVENTS","meteoDetailedScreen","PICTO_MAP","require","MeteoDetailed","navigation","lastMeteoLoad","loading","setLoading","isRefreshing","setIsRefreshing","detailed","setDetailed","currentDay","setCurrentDay","lastLoad","setLastLoad","counter","setCounter","interval","u1","addListener","setInterval","Date","getTime","u2","clearInterval","remove","loadMeteoDetailed","day","product","result","prev","days","onRefresh","goToDetails","logEventWithProperties","click_goToPulvDetails","timestamp","now","navigate","next","params","action","display","alignItems","justifyContent","styles","container","CYAN","height","marginTop","data","tabBar","slice","map","d","tabHeading","backgroundColor","DARK_BLUE","tabText","color","t","meta","dow","weatherContainer","pictocode","weatherImage","dayContent","dayWeather","dayWeatherItemContainer","dayWeatherItemImage","dayWeatherItemText","Math","round","wind","gust","parseFloat","precipitation","probability","mintemp","maxtemp","minhumi","maxhumi","hour4Weather","h","hour4WeatherContainer","hour4WeatherText","hour4WeatherImage","hours4","parseInt","pulve","pulveTitle","value","products","length","pulveContainer","p","dayProduct","hours1","id","productContainer","productName","name","productCondition","Array","keys","i","padded","padStart","parcelle","condition","conflict","parcelleExclamation","hoursContainer","hours","StyleSheet","create","flex","paddingBottom","paddingTop","flexDirection","fontSize","fontFamily","padding","width","Dimensions","get","borderTopRightRadius","marginHorizontal","borderRadius","BEIGE","tintColor","paddingHorizontal","shadowColor","elevation","shadowOpacity","shadowOffset","shadowRadius","paddingVertical","resizeMode","textTransform","marginBottom","zIndex","mapStateToProps","state","metadata","mapDispatchToProps","dispatch","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { RefreshControl, StyleSheet, View, Dimensions, Image, TouchableOpacity, TouchableWithoutFeedback } from 'react-native'\nimport { Spinner, Text, Content } from 'native-base'\n\nimport i18n from 'i18n-js'\nimport { getMeteoDetailed } from '../api/hygoApi'\nimport { meteoSynced } from '../store/actions/metaActions'\n\nimport { connect } from 'react-redux'\n\nimport COLORS from '../colors'\n\nimport {Amplitude, AMPLITUDE_EVENTS} from '../amplitude'\nconst { meteoDetailedScreen } = AMPLITUDE_EVENTS\n\nconst PICTO_MAP = {\n  'SUN': require('../../assets/sunny.png'),\n  'CLOUD': require('../../assets/cloudy.png'),\n  'STORM': require('../../assets/stormy.png'),\n  'RAIN': require('../../assets/rainy.png'),\n  'SNOW': require('../../assets/snowy.png'),\n}\n\nconst MeteoDetailed = ({ navigation, lastMeteoLoad, meteoSynced }) => {\n  const [loading, setLoading] = useState(true)\n  const [isRefreshing, setIsRefreshing] = useState(false)\n  const [detailed, setDetailed] = useState({})\n  const [currentDay, setCurrentDay] = useState(null)\n\n  const [lastLoad, setLastLoad] = useState(-1)\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    let interval\n\n    const u1 = navigation.addListener('didFocus', () => {\n      interval = setInterval(() => {\n        setCounter(new Date().getTime());\n      }, 30000);\n      setCounter(new Date().getTime());\n    });\n\n    const u2 = navigation.addListener('willBlur', () => {\n      clearInterval(interval);\n    });\n\n    interval = setInterval(() => {\n      setCounter(new Date().getTime());\n    }, 30000);\n    setCounter(new Date().getTime());\n\n    return () => {\n      u1.remove()\n      u2.remove()\n    };\n  }, []);\n\n  useEffect(() => {\n    if (counter - lastLoad >= 300000) {\n      loadMeteoDetailed()\n    }\n  }, [counter])\n\n  const loadMeteoDetailed = async () => {\n    if (!loading) {\n      setIsRefreshing(true)\n    }\n\n    let result = await getMeteoDetailed({\n      day: null,\n      product: null,\n    })\n    setDetailed(result)\n\n    setCurrentDay(prev => {\n      if (prev === null) {\n        return result.days[0]\n      }\n      return prev\n    })\n\n    meteoSynced((new Date()).getTime())\n\n    setLoading(false)\n    setIsRefreshing(false)\n  }\n\n  const onRefresh = async () => {\n    setIsRefreshing(true)\n    await loadMeteoDetailed(true)\n    setIsRefreshing(false)\n  }\n\n  const goToDetails = ({ day, product }) => {\n\n    // console.log(\"Amplitude : \", meteoDetailedScreen.click_goToPulvDetails)\n    Amplitude.logEventWithProperties(meteoDetailedScreen.click_goToPulvDetails, {\n      timestamp: Date.now()\n    })\n\n    navigation.navigate('LoadingScreen', {\n      next: 'MeteoDetailedDetails',\n      params: {\n        day,\n        product\n      },\n      action: getMeteoDetailed\n    })\n  }\n\n  return (\n    <Content refreshControl={<RefreshControl refreshing={isRefreshing} onRefresh={onRefresh} />} contentContainerStyle={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n      { loading && (\n        <View style={styles.container}>\n          <Spinner size={16} color={COLORS.CYAN} style={{ height: 48, marginTop: 48 }} />\n        </View>\n      )}\n\n      { !loading && !!detailed.data && !!detailed.data[currentDay] && !!detailed.days && (\n        <View style={styles.container}>\n          <View style={styles.tabBar}>\n            { detailed.days.slice(0, 5).map(d => {\n              let data = detailed.data[d].data\n              return (\n                <TouchableOpacity key={d} style={[styles.tabHeading, { backgroundColor: currentDay === d ? '#fff' : COLORS.DARK_BLUE }]} onPress={() => setCurrentDay(d)}>\n                  <Text style={[ styles.tabText, { color: currentDay === d ? COLORS.DARK_BLUE : '#fff' } ]}>{i18n.t(`meteo_detailed.days_${detailed.data[d].meta.dow}`)}</Text>\n                  <View style={styles.weatherContainer}>\n                    <Image source={PICTO_MAP[data.pictocode]} style={styles.weatherImage} />\n                  </View>\n                </TouchableOpacity>\n              )\n            })}\n          </View>\n          <View style={styles.dayContent}>\n            <View style={styles.dayWeather}>\n              <View style={styles.dayWeatherItemContainer}>\n                <Image source={require('../../assets/ICN-Wind.png')} style={styles.dayWeatherItemImage} />\n                <Text style={styles.dayWeatherItemText}>{`${Math.round(detailed.data[currentDay].data.wind)} km/h`}</Text>\n                <Text style={styles.dayWeatherItemText}>{`${Math.round(detailed.data[currentDay].data.gust)} km/h`}</Text>\n              </View>\n              <View style={styles.dayWeatherItemContainer}>\n                <Image source={require('../../assets/ICN-Rain.png')} style={styles.dayWeatherItemImage} />\n                <Text style={styles.dayWeatherItemText}>{`${Math.round(parseFloat(detailed.data[currentDay].data.precipitation))} mm`}</Text>\n                <Text style={styles.dayWeatherItemText}>{`${Math.round(parseFloat(detailed.data[currentDay].data.probability))}%`}</Text>\n              </View>\n              <View style={styles.dayWeatherItemContainer}>\n                <Image source={require('../../assets/ICN-Temperature.png')} style={styles.dayWeatherItemImage} />\n                <Text style={styles.dayWeatherItemText}>{`${Math.round(parseFloat(detailed.data[currentDay].data.mintemp))}°C`}</Text>\n                <Text style={styles.dayWeatherItemText}>{`${Math.round(parseFloat(detailed.data[currentDay].data.maxtemp))}°C`}</Text>\n              </View>\n              <View style={styles.dayWeatherItemContainer}>\n                <Image source={require('../../assets/ICN-Hygro.png')} style={styles.dayWeatherItemImage} />\n                <Text style={styles.dayWeatherItemText}>{`${Math.round(parseFloat(detailed.data[currentDay].data.minhumi))}%`}</Text>\n                <Text style={styles.dayWeatherItemText}>{`${Math.round(parseFloat(detailed.data[currentDay].data.maxhumi))}%`}</Text>\n              </View>\n            </View>\n            <View style={styles.hour4Weather}>\n              { ['00', '04', '08', '12', '16', '20' ].map(h => {\n                return (\n                  <View key={h} style={styles.hour4WeatherContainer}>\n                    <Text style={styles.hour4WeatherText}>{`${h}h`}</Text>\n                    <Image style={styles.hour4WeatherImage} source={PICTO_MAP[detailed.data[currentDay].hours4[`${parseInt(h)}`].pictocode]} />\n                  </View>\n                )\n              })}\n            </View>\n          </View>\n          <View style={styles.pulve}>\n            <Text style={styles.pulveTitle}>{i18n.t('meteo_detailed.pulve_title', { value: detailed.products.length || '' })}</Text>\n\n            <View style={styles.pulveContainer}>\n              { detailed.products.map(p => {\n                let dayProduct = detailed.data[currentDay].hours1[p.id].data\n                return (\n                  <TouchableWithoutFeedback onPress={() => {\n                    goToDetails({\n                      product: p.id,\n                      day: currentDay,\n                    })\n                  }} key={p.id}>\n                    <View style={styles.productContainer}>\n                      <Text style={styles.productName}>{i18n.t(`products.${p.name}`)}</Text>\n                      <View style={styles.productCondition}>\n                        { [...Array(24).keys()].map(i => {\n                          let padded = `${i}`.padStart(2, '0')\n                          return (\n                            <View key={i} style={[styles.parcelle, {\n                              backgroundColor: COLORS[dayProduct[padded].condition]\n                            }]}>\n                              { dayProduct[padded].conflict && (\n                                <Text style={styles.parcelleExclamation}>!</Text>\n                              )}\n                            </View>\n                          )\n                        }) }\n                      </View>\n                      <View style={styles.hoursContainer}>\n                        <Text style={styles.hours}>00H</Text>\n                        <Text style={styles.hours}>06H</Text>\n                        <Text style={styles.hours}>12H</Text>\n                        <Text style={styles.hours}>18H</Text>\n                        <Text style={styles.hours}>24H</Text>\n                      </View>\n                    </View>\n                  </TouchableWithoutFeedback>\n                )\n              })}\n            </View>\n          </View>          \n        </View>\n      )}\n    </Content>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: { \n    flex: 1, \n    display: 'flex', \n    paddingBottom: 80,\n    paddingTop: 20,\n  },\n  hoursContainer: { \n    display: 'flex', \n    flexDirection: 'row', \n    alignItems: 'center', \n    justifyContent: 'space-between', \n  },\n  hours: {\n    color: '#aaa',\n    fontSize: 12,\n    fontFamily: 'nunito-regular'\n  },\n  tabBar: {\n    display: 'flex',\n    flexDirection: 'row',\n  },  \n  tabHeading: {\n    padding: 15,\n    width: Dimensions.get('window').width / 5 - 4,\n    backgroundColor: COLORS.DARK_BLUE,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderTopRightRadius: 20,\n    marginHorizontal: 2,\n  },\n  tabText: {\n    fontFamily: 'nunito-heavy',\n    fontSize: 14,\n    color: '#fff',\n  },\n  weatherContainer: {\n    padding: 8,\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: COLORS.BEIGE,\n    marginTop: 5,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  weatherImage: {\n    width: 24,\n    height: 24,\n    tintColor: COLORS.DARK_BLUE\n  },\n  dayContent: {\n    backgroundColor: '#fff',\n    paddingHorizontal: 15,\n    paddingTop: 20,\n    shadowColor: '#000',\n    elevation: 3,\n    shadowOpacity: .2,\n    shadowOffset: {\n      width: 0,\n      height: 3,\n    },\n    shadowRadius: 3,\n  },\n  dayWeather: {\n    backgroundColor: COLORS.BEIGE,\n    paddingVertical: 10,\n    borderRadius: 35,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n  },\n  dayWeatherItemContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  dayWeatherItemImage: {\n    width: 24,\n    resizeMode: 'contain',\n    tintColor: COLORS.DARK_BLUE,\n  },\n  dayWeatherItemText: {\n    fontFamily: 'nunito-bold',\n    fontSize: 14,\n    color: COLORS.DARK_BLUE,\n  },\n  hour4Weather: {\n    paddingHorizontal: 8,\n    paddingVertical: 10,\n    paddingBottom: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n  },\n  hour4WeatherContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  hour4WeatherText: {\n    fontSize: 14,\n    fontFamily: 'nunito-regular',\n    color: '#aaa',\n  },\n  hour4WeatherImage: {\n    marginTop: 5,\n    width: 24,\n    height: 24,\n    resizeMode: 'cover',\n    tintColor: COLORS.DARK_BLUE,\n  },\n  pulve: {\n    paddingHorizontal: 20,\n    paddingVertical: 18,\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: 10,\n    backgroundColor: '#fff',\n  },\n  pulveTitle: {\n    fontFamily: 'nunito-heavy',\n    fontSize: 14,\n    color: COLORS.DARK_BLUE,\n    textTransform: 'uppercase',\n    marginBottom: 8,\n  },\n  productContainer: {\n    marginTop: 10,\n  },\n  productName: {\n    fontFamily: 'nunito-regular',\n    fontSize: 14,\n    color: '#aaa',\n  },\n  productCondition: {\n    height: 20,\n    flexDirection: 'row',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  parcelle: {\n    height: 20,\n    zIndex: 5,\n    width: 10,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  parcelleExclamation: {\n    fontFamily: 'nunito-heavy',\n    fontSize: 16,\n    color: '#fff',\n  }\n})\n\nconst mapStateToProps = (state) => ({\n  lastMeteoLoad: state.metadata.lastMeteoLoad,\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  meteoSynced: (d) => dispatch(meteoSynced(d))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeteoDetailed);"]},"metadata":{},"sourceType":"module"}