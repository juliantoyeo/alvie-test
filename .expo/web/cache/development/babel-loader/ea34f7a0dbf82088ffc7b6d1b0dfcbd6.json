{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/HygoSlider.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport HygoSliderLabel from \"./HygoSliderLabel\";\nimport COLORS from \"../colors\";\nimport _ from 'lodash';\nvar CURSOR_WIDTH = 48;\nvar CURSOR_HEIGHT = 72;\n\nvar HygoSlider = function (_Component) {\n  _inherits(HygoSlider, _Component);\n\n  var _super = _createSuper(HygoSlider);\n\n  function HygoSlider(props) {\n    var _this;\n\n    _classCallCheck(this, HygoSlider);\n\n    _this = _super.call(this, props);\n    _this.panResponder = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {\n        return true;\n      },\n      onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n        return _this.onMove(evt, gestureState);\n      }\n    });\n\n    _this.onMove = function (evt, gestureState) {\n      var xpos = gestureState.x0 + gestureState.dx;\n      var offset = (Dimensions.get('window').width - _this.props.sliderLength) / 2;\n\n      var posInsideBar = parseFloat(xpos - offset) / _this.props.sliderLength * (_this.props.max - _this.props.min) + _this.props.min;\n\n      posInsideBar = Math.min(_this.props.max, posInsideBar);\n      posInsideBar = Math.max(_this.props.min, posInsideBar);\n      var dst = _this.props.max,\n          dstv = null,\n          inc = _this.props.increment || 1;\n\n      for (var i = _this.props.min; i <= _this.props.max; i += inc) {\n        var cd = Math.abs(i - posInsideBar);\n\n        if (cd < dst) {\n          dstv = i;\n          dst = cd;\n        }\n      }\n\n      posInsideBar = dstv;\n\n      _this.setState({\n        left: (posInsideBar - _this.props.min) / parseFloat(_this.props.max - _this.props.min) * _this.props.sliderLength - (_this.props.cursorWidth || CURSOR_WIDTH) / 2\n      });\n\n      _this.props.updateValue(posInsideBar);\n    };\n\n    _this.getItemWidth = function () {\n      var w = _this.props.sliderLength,\n          margin = parseFloat(w) / _this.state.num * 0.14;\n      return {\n        width: parseFloat(w) / _this.state.num - 2 * margin,\n        marginHorizontal: margin\n      };\n    };\n\n    _this.state = {\n      left: (props.value ? (props.value - props.min) / parseFloat(props.max - props.min) * props.sliderLength : 0) - CURSOR_WIDTH / 2\n    };\n    return _this;\n  }\n\n  _createClass(HygoSlider, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var left = this.state.left;\n      return React.createElement(View, {\n        style: [styles.container, {\n          marginTop: 60,\n          width: this.props.sliderLength\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.bar, {\n          width: this.props.sliderLength\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: [styles.barFilled, {\n          width: (this.props.value - this.props.min) / parseFloat(this.props.max - this.props.min) * this.props.sliderLength\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }), [0, 1].map(function (i) {\n        var p = (_this2.props.value - _this2.props.min) / parseFloat(_this2.props.max - _this2.props.min) * _this2.props.sliderLength;\n\n        var w = i * _this2.props.sliderLength;\n        return React.createElement(TouchableWithoutFeedback, {\n          key: i,\n          onPress: function onPress() {\n            _this2.props.updateValue(parseFloat(i * _this2.props.max));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: {\n            left: w - 20,\n            position: 'absolute',\n            width: 40,\n            height: 40\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: [styles.point, {\n            left: 15,\n            top: 15,\n            backgroundColor: p < w ? COLORS.GREY : COLORS.CYAN\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }\n        })));\n      }), React.createElement(View, _extends({\n        style: [styles.cursor, {\n          left: left,\n          width: CURSOR_WIDTH,\n          height: CURSOR_HEIGHT,\n          top: -50\n        }]\n      }, this.panResponder.panHandlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }), React.createElement(HygoSliderLabel, {\n        value: this.props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return HygoSlider;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    paddingVertical: 5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  bar: {\n    height: 4,\n    backgroundColor: COLORS.GREY\n  },\n  cursor: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    zIndex: 10\n  },\n  point: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    backgroundColor: '#fff',\n    position: 'absolute'\n  },\n  selected: {\n    height: 30,\n    width: 14,\n    marginHorizontal: 0,\n    borderWidth: 2,\n    borderColor: '#fff'\n  },\n  selectedNext: {\n    height: 25,\n    width: 12,\n    marginHorizontal: 1\n  },\n  barFilled: {\n    backgroundColor: COLORS.CYAN,\n    height: 4,\n    position: 'absolute',\n    left: 0,\n    zIndex: 999\n  }\n});\nexport default HygoSlider;","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/HygoSlider.js"],"names":["React","Component","HygoSliderLabel","COLORS","_","CURSOR_WIDTH","CURSOR_HEIGHT","HygoSlider","props","panResponder","PanResponder","create","onMoveShouldSetPanResponderCapture","onPanResponderMove","evt","gestureState","onMove","xpos","x0","dx","offset","Dimensions","get","width","sliderLength","posInsideBar","parseFloat","max","min","Math","dst","dstv","inc","increment","i","cd","abs","setState","left","cursorWidth","updateValue","getItemWidth","w","margin","state","num","marginHorizontal","value","styles","container","marginTop","bar","barFilled","map","p","position","height","point","top","backgroundColor","GREY","CYAN","cursor","panHandlers","StyleSheet","display","flexDirection","paddingVertical","justifyContent","alignItems","zIndex","borderRadius","selected","borderWidth","borderColor","selectedNext"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { StyleSheet, View, TouchableWithoutFeedback, PanResponder, Text, Dimensions } from 'react-native'\nimport HygoSliderLabel from './HygoSliderLabel';\n\nimport COLORS from '../colors'\n\nimport _ from 'lodash';\n\nconst CURSOR_WIDTH = 48\nconst CURSOR_HEIGHT = 72\n\nclass HygoSlider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      left: (props.value ? (props.value-props.min)/parseFloat(props.max-props.min)*props.sliderLength : 0) - CURSOR_WIDTH/2,\n    }\n  }\n\n  panResponder = PanResponder.create({\n    onMoveShouldSetPanResponderCapture: () => true,\n    onPanResponderMove: (evt, gestureState) => this.onMove(evt, gestureState),\n  })\n\n  onMove = (evt, gestureState) => {\n    let xpos = gestureState.x0 + gestureState.dx\n\n    let offset = (Dimensions.get('window').width - this.props.sliderLength) / 2\n\n    let posInsideBar = parseFloat(xpos - offset) / this.props.sliderLength * (this.props.max-this.props.min) + this.props.min\n    posInsideBar = Math.min(this.props.max, posInsideBar)\n    posInsideBar = Math.max(this.props.min, posInsideBar)\n\n    let dst = this.props.max, dstv = null, inc = this.props.increment||1\n\n    for (let i = this.props.min; i <= this.props.max; i += inc) {\n      let cd = Math.abs(i - posInsideBar)\n      if (cd < dst) {\n        dstv = i\n        dst = cd\n      }\n    }\n\n    posInsideBar = dstv\n    this.setState({\n      left: (posInsideBar-this.props.min)/parseFloat(this.props.max-this.props.min)*this.props.sliderLength - (this.props.cursorWidth||CURSOR_WIDTH)/2, \n    })\n\n    this.props.updateValue(posInsideBar)\n  }\n\n  getItemWidth = () => {\n    const w = this.props.sliderLength, margin = parseFloat(w) / this.state.num * 0.14\n    return {\n      width: parseFloat(w) / this.state.num - 2*margin,\n      marginHorizontal: margin,\n    }\n  }\n\n  render() {\n    const { left } = this.state\n\n    return (\n      <View style={[ styles.container, { marginTop: 60, width: this.props.sliderLength }]}>\n        <View style={[styles.bar, { width: this.props.sliderLength }]}></View>\n        <View style={[styles.barFilled, { width: (this.props.value-this.props.min)/parseFloat(this.props.max-this.props.min)*this.props.sliderLength }]}></View>\n\n        { [0, 1 ].map(i => {\n            let p = (this.props.value-this.props.min)/parseFloat(this.props.max-this.props.min)*this.props.sliderLength\n            let w = i*this.props.sliderLength\n\n            return (\n              <TouchableWithoutFeedback key={i} onPress={() => {\n                this.props.updateValue(parseFloat(i*(this.props.max)))\n              }}>\n                <View style={{ left: w - 20, position: 'absolute', width: 40, height: 40 }}>\n                  <View style={[styles.point, { \n                    left: 15,\n                    top: 15,\n                    backgroundColor: p < w ? COLORS.GREY : COLORS.CYAN\n                  }]}></View>\n                </View>\n              </TouchableWithoutFeedback>\n            )\n          }) \n        }\n\n        <View style={[styles.cursor, { \n          left: left, \n          width: CURSOR_WIDTH,\n          height: CURSOR_HEIGHT,\n          top: -50,\n        }]} \n          {...this.panResponder.panHandlers}>\n            <HygoSliderLabel value={this.props.value} />\n          </View>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    paddingVertical: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },  \n  bar: {\n    height: 4,\n    backgroundColor: COLORS.GREY,\n  },  \n  cursor: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    zIndex: 10,\n  },\n  point: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    backgroundColor: '#fff',\n    position: 'absolute',\n  },  \n  selected: {\n    height: 30,\n    width: 14,\n    marginHorizontal: 0,\n    borderWidth: 2,\n    borderColor: '#fff',\n  },\n  selectedNext: {\n    height: 25,\n    width: 12,\n    marginHorizontal: 1,\n  },\n  barFilled: {\n    backgroundColor: COLORS.CYAN,\n    height: 4,\n    position: 'absolute',\n    left: 0,\n    zIndex: 999,\n  }\n})\n\nexport default HygoSlider"]},"metadata":{},"sourceType":"module"}