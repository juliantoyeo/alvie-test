{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/HygoRadarSlider.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport COLORS from \"../colors\";\nimport _ from 'lodash';\nvar CURSOR_WIDTH = 24;\nvar CURSOR_HEIGHT = 36;\n\nvar HygoRadarSlider = function (_Component) {\n  _inherits(HygoRadarSlider, _Component);\n\n  var _super = _createSuper(HygoRadarSlider);\n\n  function HygoRadarSlider(props) {\n    var _this;\n\n    _classCallCheck(this, HygoRadarSlider);\n\n    _this = _super.call(this, props);\n    _this.panResponder = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {\n        return true;\n      },\n      onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n        return _this.onMove(evt, gestureState);\n      }\n    });\n\n    _this.onMove = function (evt, gestureState) {\n      var xpos = gestureState.x0 + gestureState.dx;\n      var offset = (Dimensions.get('window').width - _this.props.width) / 2;\n      var posInsideBar = Math.round((xpos - offset) / _this.props.width * 24);\n\n      _this.setState({\n        left: xpos - offset - 6,\n        selected: posInsideBar\n      });\n    };\n\n    _this.getItemWidth = function () {\n      var w = _this.props.width,\n          margin = parseFloat(w) / 24 * 0.14;\n      return {\n        width: parseFloat(w) / 24 - 2 * margin,\n        marginHorizontal: margin\n      };\n    };\n\n    _this.onPressParcelle = function (i) {\n      _this.setState({\n        selected: i,\n        left: i * _this.props.width / 24\n      });\n\n      _this.onHourChangeDebounce(i);\n    };\n\n    _this.state = {\n      selected: props.start || 0\n    };\n    return _this;\n  }\n\n  _createClass(HygoRadarSlider, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          left = _this$state.left,\n          selected = _this$state.selected;\n      return React.createElement(View, {\n        style: [styles.container, {\n          width: this.props.width\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.bar, {\n          width: this.props.width\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: [styles.barFilled, {\n          width: this.props.progress * this.props.width\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }), [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map(function (i) {\n        var p = _this2.props.progress * _this2.props.width;\n        var w = i * _this2.props.width / 12;\n        return React.createElement(TouchableWithoutFeedback, {\n          key: i,\n          onPress: function onPress() {\n            _this2.props.updateProgress(parseFloat(i) / 12);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: {\n            left: w - 20,\n            position: 'absolute',\n            width: 40,\n            height: 40\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: [styles.point, {\n            left: 15,\n            top: 15,\n            backgroundColor: p < w ? '#fff' : COLORS.CYAN\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }\n        })));\n      }), React.createElement(View, _extends({\n        style: [styles.cursor, {\n          left: 0,\n          width: this.props.cursorWidth || CURSOR_WIDTH,\n          height: this.props.cursorHeight || CURSOR_HEIGHT\n        }]\n      }, this.panResponder.panHandlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return HygoRadarSlider;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    paddingVertical: 5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  bar: {\n    height: 4,\n    backgroundColor: '#fff'\n  },\n  cursor: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    zIndex: 10\n  },\n  point: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    backgroundColor: '#fff',\n    position: 'absolute'\n  },\n  selected: {\n    height: 30,\n    width: 14,\n    marginHorizontal: 0,\n    borderWidth: 2,\n    borderColor: '#fff'\n  },\n  selectedNext: {\n    height: 25,\n    width: 12,\n    marginHorizontal: 1\n  },\n  barFilled: {\n    backgroundColor: COLORS.CYAN,\n    height: 4,\n    position: 'absolute',\n    left: 0,\n    zIndex: 999\n  }\n});\nexport default HygoRadarSlider;","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/HygoRadarSlider.js"],"names":["React","Component","COLORS","_","CURSOR_WIDTH","CURSOR_HEIGHT","HygoRadarSlider","props","panResponder","PanResponder","create","onMoveShouldSetPanResponderCapture","onPanResponderMove","evt","gestureState","onMove","xpos","x0","dx","offset","Dimensions","get","width","posInsideBar","Math","round","setState","left","selected","getItemWidth","w","margin","parseFloat","marginHorizontal","onPressParcelle","i","onHourChangeDebounce","state","start","styles","container","bar","barFilled","progress","map","p","updateProgress","position","height","point","top","backgroundColor","CYAN","cursor","cursorWidth","cursorHeight","panHandlers","StyleSheet","display","flexDirection","paddingVertical","justifyContent","alignItems","zIndex","borderRadius","borderWidth","borderColor","selectedNext"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { StyleSheet, View, TouchableWithoutFeedback, PanResponder, Text, Dimensions } from 'react-native'\n\nimport COLORS from '../colors'\n\nimport _ from 'lodash';\n\nconst CURSOR_WIDTH = 24\nconst CURSOR_HEIGHT = 36\n\nclass HygoRadarSlider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: props.start||0,\n    }\n  }\n\n  panResponder = PanResponder.create({\n    onMoveShouldSetPanResponderCapture: () => true,\n    onPanResponderMove: (evt, gestureState) => this.onMove(evt, gestureState),\n  })\n\n  onMove = (evt, gestureState) => {\n    let xpos = gestureState.x0 + gestureState.dx\n\n    let offset = (Dimensions.get('window').width - this.props.width) / 2\n\n    let posInsideBar = Math.round((xpos - offset) / this.props.width * 24)\n\n    this.setState({\n      left: xpos - offset - 6,\n      selected: posInsideBar\n    })\n  }\n\n  getItemWidth = () => {\n    const w = this.props.width, margin = parseFloat(w) / 24 * 0.14\n    return {\n      width: parseFloat(w) / 24 - 2*margin,\n      marginHorizontal: margin,\n    }\n  }\n\n  onPressParcelle = (i) => {\n    this.setState({\n      selected: i,\n      left: i * this.props.width / 24\n    })\n    this.onHourChangeDebounce(i)\n  }\n\n  render() {\n    const { left, selected } = this.state\n\n    return (\n      <View style={[ styles.container, { width: this.props.width }]}>\n        <View style={[styles.bar, { width: this.props.width }]}></View>\n        <View style={[styles.barFilled, { width: this.props.progress*this.props.width }]}></View>\n\n        { [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ].map(i => {\n          let p = this.props.progress*this.props.width\n          let w = i*this.props.width/12\n\n          return (\n            <TouchableWithoutFeedback key={i} onPress={() => {\n              this.props.updateProgress(parseFloat(i)/12)\n            }}>\n              <View style={{ left: w - 20, position: 'absolute', width: 40, height: 40 }}>\n                <View style={[styles.point, { \n                  left: 15,\n                  top: 15,\n                  backgroundColor: p < w ? '#fff' : COLORS.CYAN\n                }]}></View>\n              </View>\n            </TouchableWithoutFeedback>\n          )\n        }) }\n\n        <View style={[styles.cursor, { \n          left: 0, \n          width: this.props.cursorWidth||CURSOR_WIDTH,\n          height: this.props.cursorHeight||CURSOR_HEIGHT\n        }]} \n          {...this.panResponder.panHandlers}></View>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    paddingVertical: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },  \n  bar: {\n    height: 4,\n    backgroundColor: '#fff',\n  },  \n  cursor: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    zIndex: 10,\n  },\n  point: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    backgroundColor: '#fff',\n    position: 'absolute',\n  },  \n  selected: {\n    height: 30,\n    width: 14,\n    marginHorizontal: 0,\n    borderWidth: 2,\n    borderColor: '#fff',\n  },\n  selectedNext: {\n    height: 25,\n    width: 12,\n    marginHorizontal: 1,\n  },\n  barFilled: {\n    backgroundColor: COLORS.CYAN,\n    height: 4,\n    position: 'absolute',\n    left: 0,\n    zIndex: 999,\n  }\n})\n\nexport default HygoRadarSlider"]},"metadata":{},"sourceType":"module"}