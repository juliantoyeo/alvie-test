{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nvar initialState = {\n  produitPhytoClicked: undefined,\n  newSession: undefined,\n  lastSession: undefined,\n  phytoProductList: [],\n  phytoProductSelected: [],\n  culturesSelected: []\n};\nexport default pulveReducer = function pulveReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var nextState;\n\n  switch (action.type) {\n    case 'UPDATE_PHYTO':\n      nextState = _objectSpread({}, state, {\n        produitPhytoClicked: action.produitPhytoClicked\n      });\n      return nextState || state;\n\n    case 'LIST_PHYTO':\n      nextState = _objectSpread({}, state, {\n        phytoProductList: action.content\n      });\n      return nextState || state;\n\n    case 'UPDATE_SELECTED_PHYTO':\n      AsyncStorage.setItem('phytoProductSelected', JSON.stringify(action.selected));\n      nextState = _objectSpread({}, state, {\n        phytoProductSelected: action.selected\n      });\n      return nextState || state;\n\n    case 'UPDATE_SELECTED_CULTURES':\n      AsyncStorage.setItem('culturesSelected', JSON.stringify(action.selected));\n      nextState = _objectSpread({}, state, {\n        culturesSelected: action.selected\n      });\n      return nextState || state;\n\n    case 'UPDATE_PULV_INFO':\n      nextState = _objectSpread({}, state, {\n        phytoProductSelected: action.phytoProductSelected,\n        culturesSelected: action.culturesSelected\n      });\n      return nextState || state;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/store/reducers/pulveReducer.js"],"names":["initialState","produitPhytoClicked","undefined","newSession","lastSession","phytoProductList","phytoProductSelected","culturesSelected","pulveReducer","state","action","nextState","type","content","AsyncStorage","setItem","JSON","stringify","selected"],"mappings":";;;;;;;AACA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,mBAAmB,EAAEC,SADJ;AAEjBC,EAAAA,UAAU,EAAED,SAFK;AAGjBE,EAAAA,WAAW,EAAEF,SAHI;AAIjBG,EAAAA,gBAAgB,EAAE,EAJD;AAKjBC,EAAAA,oBAAoB,EAAE,EALL;AAMjBC,EAAAA,gBAAgB,EAAE;AAND,CAArB;AASA,eAAeC,YAAY,GAAI,wBAAkC;AAAA,MAAjCC,KAAiC,uEAAzBT,YAAyB;AAAA,MAAXU,MAAW;AAC7D,MAAIC,SAAJ;;AACA,UAAQD,MAAM,CAACE,IAAf;AACI,SAAK,cAAL;AACID,MAAAA,SAAS,qBACFF,KADE;AAELR,QAAAA,mBAAmB,EAAGS,MAAM,CAACT;AAFxB,QAAT;AAIA,aAAOU,SAAS,IAAIF,KAApB;;AAEJ,SAAK,YAAL;AACIE,MAAAA,SAAS,qBACFF,KADE;AAELJ,QAAAA,gBAAgB,EAAEK,MAAM,CAACG;AAFpB,QAAT;AAIA,aAAOF,SAAS,IAAIF,KAApB;;AAEJ,SAAK,uBAAL;AACIK,MAAAA,YAAY,CAACC,OAAb,CAAqB,sBAArB,EAA6CC,IAAI,CAACC,SAAL,CAAeP,MAAM,CAACQ,QAAtB,CAA7C;AACAP,MAAAA,SAAS,qBACFF,KADE;AAELH,QAAAA,oBAAoB,EAAEI,MAAM,CAACQ;AAFxB,QAAT;AAIA,aAAOP,SAAS,IAAIF,KAApB;;AAEJ,SAAK,0BAAL;AACIK,MAAAA,YAAY,CAACC,OAAb,CAAqB,kBAArB,EAAyCC,IAAI,CAACC,SAAL,CAAeP,MAAM,CAACQ,QAAtB,CAAzC;AACAP,MAAAA,SAAS,qBACFF,KADE;AAELF,QAAAA,gBAAgB,EAAEG,MAAM,CAACQ;AAFpB,QAAT;AAIA,aAAOP,SAAS,IAAIF,KAApB;;AAEJ,SAAK,kBAAL;AACIE,MAAAA,SAAS,qBACFF,KADE;AAELH,QAAAA,oBAAoB,EAAEI,MAAM,CAACJ,oBAFxB;AAGLC,QAAAA,gBAAgB,EAAEG,MAAM,CAACH;AAHpB,QAAT;AAKA,aAAOI,SAAS,IAAIF,KAApB;;AACJ;AACI,aAAOA,KAAP;AAvCR;AA0CH,CA5CD","sourcesContent":["import { AsyncStorage } from 'react-native';\nconst initialState = {\n    produitPhytoClicked: undefined,\n    newSession: undefined,\n    lastSession: undefined,\n    phytoProductList: [],\n    phytoProductSelected: [],\n    culturesSelected: [],\n}\n\nexport default pulveReducer =  (state = initialState, action) => {\n    let nextState\n    switch (action.type) {\n        case 'UPDATE_PHYTO':\n            nextState =  {\n                ...state,\n                produitPhytoClicked : action.produitPhytoClicked,\n            }\n            return nextState || state;  \n\n        case 'LIST_PHYTO':\n            nextState = {\n                ...state,\n                phytoProductList: action.content\n            }\n            return nextState || state\n\n        case 'UPDATE_SELECTED_PHYTO':\n            AsyncStorage.setItem('phytoProductSelected', JSON.stringify(action.selected));\n            nextState = {\n                ...state,\n                phytoProductSelected: action.selected\n            }\n            return nextState || state\n\n        case 'UPDATE_SELECTED_CULTURES':\n            AsyncStorage.setItem('culturesSelected', JSON.stringify(action.selected));\n            nextState = {\n                ...state,\n                culturesSelected: action.selected\n            }\n            return nextState || state\n\n        case 'UPDATE_PULV_INFO':\n            nextState = {\n                ...state,\n                phytoProductSelected: action.phytoProductSelected,\n                culturesSelected: action.culturesSelected\n            }\n            return nextState || state\n        default:\n            return state\n    }\n\n};"]},"metadata":{},"sourceType":"module"}