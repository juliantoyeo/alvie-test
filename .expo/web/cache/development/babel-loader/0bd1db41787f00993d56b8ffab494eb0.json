{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/meteo-detailed/HygoParcelleSlider.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport COLORS from \"../../colors\";\nimport _ from 'lodash';\nvar CURSOR_HEIGHT = 36;\n\nvar HygoParcelleSlider = function (_Component) {\n  _inherits(HygoParcelleSlider, _Component);\n\n  var _super = _createSuper(HygoParcelleSlider);\n\n  function HygoParcelleSlider(props) {\n    var _this;\n\n    _classCallCheck(this, HygoParcelleSlider);\n\n    _this = _super.call(this, props);\n    _this.panResponder = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {\n        return true;\n      },\n      onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n        return _this.onMove(evt, gestureState);\n      }\n    });\n\n    _this.onMove = function (evt, gestureState) {\n      var xpos = gestureState.x0 + gestureState.dx;\n      var offset = (Dimensions.get('window').width - _this.props.width) / 2;\n      var posInsideBar = Math.round((xpos - offset) / _this.props.width * 24);\n\n      if (posInsideBar > 23) {\n        posInsideBar = 23;\n      }\n\n      if (posInsideBar < 0) {\n        posInsideBar = 0;\n      }\n\n      _this.setState({\n        left: xpos - offset - 6,\n        selected: posInsideBar\n      });\n\n      _this.onHourChangeDebounce(posInsideBar);\n    };\n\n    _this.getItemWidth = function (i, isSub) {\n      var w = _this.props.width,\n          margin = parseFloat(w) / 24 * 0.14;\n      var selected = _this.state.selected;\n\n      if (isSub) {\n        return {\n          width: parseFloat(w) / 24 - 2 * (i === selected ? 0 : i === selected - 1 || i === selected + 1 ? 1 : margin)\n        };\n      }\n\n      return {\n        width: parseFloat(w) / 24 - 2 * (i === selected ? -1 : i === selected - 1 || i === selected + 1 ? 1 : 0),\n        paddingHorizontal: i === selected ? 0 : i === selected - 1 || i === selected + 1 ? 1 : margin\n      };\n    };\n\n    _this.onPressParcelle = function (i) {\n      _this.setState({\n        selected: i,\n        left: i * _this.props.width / 24\n      });\n\n      _this.onHourChangeDebounce(i);\n    };\n\n    _this.state = {\n      left: props.start * props.width / 24 || 0,\n      selected: props.start || 0\n    };\n    _this.onHourChangeDebounce = _.debounce(props.onHourChange, 10);\n    return _this;\n  }\n\n  _createClass(HygoParcelleSlider, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          left = _this$state.left,\n          selected = _this$state.selected;\n      return React.createElement(View, {\n        style: [styles.container, {\n          width: this.props.width\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, React.createElement(View, _extends({\n        style: [styles.parcelleCursor, {\n          left: left,\n          width: this.props.width / 8,\n          height: this.props.cursorHeight || CURSOR_HEIGHT\n        }]\n      }, this.panResponder.panHandlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      })), _toConsumableArray(Array(24).keys()).map(function (i) {\n        var padded = (\"\" + i).padStart(2, '0');\n        return React.createElement(TouchableWithoutFeedback, {\n          key: i,\n          onPress: function onPress() {\n            return _this2.onPressParcelle(i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: [styles.parcelle, _objectSpread({}, _this2.getItemWidth(i))],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: [styles.subTile, i === selected ? styles.selected : {}, i === selected - 1 || i === selected + 1 ? styles.selectedNext : {}, _objectSpread({\n            backgroundColor: COLORS[_this2.props.data[padded].condition + \"_CARDS\"]\n          }, _this2.getItemWidth(i, true))],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }\n        }, _this2.props.data[padded].conflict && React.createElement(Text, {\n          style: styles.parcelleExclamation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }\n        }, \"!\"))));\n      }));\n    }\n  }]);\n\n  return HygoParcelleSlider;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    paddingVertical: 5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  parcelle: {\n    height: 40,\n    zIndex: 5,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  subTile: {\n    height: 20,\n    zIndex: 5,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  parcelleCursor: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    zIndex: 10\n  },\n  selected: {\n    height: 30,\n    borderWidth: 2,\n    borderColor: '#fff'\n  },\n  selectedNext: {\n    height: 25\n  },\n  parcelleExclamation: {\n    fontFamily: 'nunito-heavy',\n    fontSize: 16,\n    color: '#fff'\n  }\n});\nexport default HygoParcelleSlider;","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/meteo-detailed/HygoParcelleSlider.js"],"names":["React","Component","COLORS","_","CURSOR_HEIGHT","HygoParcelleSlider","props","panResponder","PanResponder","create","onMoveShouldSetPanResponderCapture","onPanResponderMove","evt","gestureState","onMove","xpos","x0","dx","offset","Dimensions","get","width","posInsideBar","Math","round","setState","left","selected","onHourChangeDebounce","getItemWidth","i","isSub","w","margin","parseFloat","state","paddingHorizontal","onPressParcelle","start","debounce","onHourChange","styles","container","parcelleCursor","height","cursorHeight","panHandlers","Array","keys","map","padded","padStart","parcelle","subTile","selectedNext","backgroundColor","data","condition","conflict","parcelleExclamation","StyleSheet","display","flexDirection","paddingVertical","justifyContent","alignItems","zIndex","position","borderWidth","borderColor","fontFamily","fontSize","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { StyleSheet, View, TouchableWithoutFeedback, PanResponder, Text, Dimensions } from 'react-native'\n\nimport COLORS from '../../colors'\n\nimport _ from 'lodash';\n\nconst CURSOR_HEIGHT = 36\n\nclass HygoParcelleSlider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      left: (props.start * props.width / 24)||0,\n      selected: props.start||0,\n    }\n\n    this.onHourChangeDebounce = _.debounce(props.onHourChange, 10);\n  }\n\n  panResponder = PanResponder.create({\n    onMoveShouldSetPanResponderCapture: () => true,\n    onPanResponderMove: (evt, gestureState) => this.onMove(evt, gestureState),\n  })\n\n  onMove = (evt, gestureState) => {\n    let xpos = gestureState.x0 + gestureState.dx\n\n    let offset = (Dimensions.get('window').width - this.props.width) / 2\n\n    let posInsideBar = Math.round((xpos - offset) / this.props.width * 24)\n    if (posInsideBar > 23) { posInsideBar = 23 }\n    if (posInsideBar < 0) { posInsideBar = 0 }\n\n    this.setState({\n      left: xpos - offset - 6,\n      selected: posInsideBar\n    })\n\n    this.onHourChangeDebounce(posInsideBar)\n  }\n\n  getItemWidth = (i, isSub) => {\n    const w = this.props.width, margin = parseFloat(w) / 24 * 0.14\n\n    const { selected } = this.state\n\n    if (isSub) {\n      return {\n        width: parseFloat(w) / 24 - 2*(i === selected ? 0 : (i === selected - 1 || i === selected + 1 ? 1 : margin)),\n      }\n    }\n\n    return {\n      width: parseFloat(w) / 24 - 2*(i === selected ? (-1) : (i === selected - 1 || i === selected + 1 ? 1 : 0)),\n      paddingHorizontal: i === selected ? 0 : (i === selected - 1 || i === selected + 1 ? 1 : margin),\n    }\n  }\n\n  onPressParcelle = (i) => {\n    this.setState({\n      selected: i,\n      left: i * this.props.width / 24\n    })\n    this.onHourChangeDebounce(i)\n  }\n\n  render() {\n    const { left, selected } = this.state\n\n    return (\n      <View style={[ styles.container, { width: this.props.width }]}>\n        <View style={[styles.parcelleCursor, { \n          left: left, \n          width: this.props.width/8,\n          height: this.props.cursorHeight||CURSOR_HEIGHT\n        }]} \n          {...this.panResponder.panHandlers}></View>\n\n        { [...Array(24).keys()].map(i => {\n          let padded = `${i}`.padStart(2, '0')\n          return (\n            <TouchableWithoutFeedback key={i} onPress={() => this.onPressParcelle(i)}>\n              <View style={[styles.parcelle, {\n                ...this.getItemWidth(i)}, \n              ]}>\n                <View style={[styles.subTile,  \n                  i === selected ? styles.selected : {}, \n                  i === selected - 1 || i === selected + 1 ? styles.selectedNext : {},\n                  { backgroundColor: COLORS[`${this.props.data[padded].condition}_CARDS`], \n                  ...this.getItemWidth(i, true)\n                }]}>\n                { this.props.data[padded].conflict && (\n                  <Text style={styles.parcelleExclamation}>!</Text>\n                )}\n                </View>\n              </View>\n            </TouchableWithoutFeedback>\n          )\n        }) }\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    paddingVertical: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },  \n  parcelle: {\n    height: 40,\n    zIndex: 5,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  subTile: {\n    height: 20,\n    zIndex: 5,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  parcelleCursor: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    zIndex: 10,\n  },\n  selected: {\n    height: 30,\n    borderWidth: 2,\n    borderColor: '#fff',\n  },\n  selectedNext: {\n    height: 25,\n  },\n  parcelleExclamation: {\n    fontFamily: 'nunito-heavy',\n    fontSize: 16,\n    color: '#fff',\n  }\n})\n\nexport default HygoParcelleSlider"]},"metadata":{},"sourceType":"module"}