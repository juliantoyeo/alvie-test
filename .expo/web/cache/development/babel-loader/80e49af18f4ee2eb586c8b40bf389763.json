{"ast":null,"code":"var _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/meteo-detailed/MeteoMapHeaderSelected.js\";\nimport React, { useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport i18n from 'i18n-js';\nimport COLORS from \"../../colors\";\n\nvar MeteoMapHeaderSelected = function MeteoMapHeaderSelected(_ref) {\n  var productId = _ref.productId,\n      isRacinaire = _ref.isRacinaire,\n      data = _ref.data,\n      currentCondition = _ref.currentCondition;\n  var getRFromProduct = useCallback(function () {\n    switch (productId) {\n      case 1:\n      case 7:\n        return \"r6\";\n\n      case 11:\n        return \"r3\";\n\n      default:\n        return \"r2\";\n    }\n  }, [productId]);\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: [styles.metricsContainer, {\n      backgroundColor: COLORS[data.condition + \"_CARDS\"]\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.metricsLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.metricsText, {\n      color: currentCondition === 'CORRECT' ? COLORS.DARK_GREEN : '#fff'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, i18n.t('meteo_overlay.hygro', {\n    value: Math.round(parseFloat(data.humi))\n  })), React.createElement(Text, {\n    style: [styles.metricsText, {\n      color: currentCondition === 'CORRECT' ? COLORS.DARK_GREEN : '#fff'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, i18n.t('meteo_overlay.precipitation_' + getRFromProduct(), {\n    value: Math.round(parseFloat(data[getRFromProduct()]))\n  })), isRacinaire && React.createElement(Text, {\n    style: [styles.metricsText, {\n      color: currentCondition === 'CORRECT' ? COLORS.DARK_GREEN : '#fff'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"\")), React.createElement(View, {\n    style: styles.metricsLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.metricsText, {\n      color: currentCondition === 'CORRECT' ? COLORS.DARK_GREEN : '#fff'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, i18n.t('meteo_overlay.temp', {\n    value: Math.round(parseFloat(data.temp))\n  })), React.createElement(Text, {\n    style: [styles.metricsText, {\n      color: currentCondition === 'CORRECT' ? COLORS.DARK_GREEN : '#fff'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, i18n.t('meteo_overlay.wind') + \" \" + i18n.t('meteo_overlay.wind_speed', {\n    winddir: data.winddirection,\n    value: Math.round(data.wind)\n  })), isRacinaire && React.createElement(Text, {\n    style: [styles.metricsText, {\n      color: currentCondition === 'CORRECT' ? COLORS.DARK_GREEN : '#fff'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, i18n.t('meteo_overlay.soil') + \" \" + i18n.t('meteo_overlay.soil_humi', {\n    value: Math.round(data.soilhumi)\n  }))), React.createElement(View, {\n    style: [styles.metricsLine, {\n      flex: 1\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.metricsText, {\n      color: currentCondition === 'CORRECT' ? COLORS.DARK_GREEN : '#fff'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, i18n.t('meteo_overlay.delta_temp', {\n    value: Math.round(data.deltatemp)\n  })), React.createElement(Text, {\n    style: [styles.metricsText, {\n      color: currentCondition === 'CORRECT' ? COLORS.DARK_GREEN : '#fff'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, i18n.t('meteo_overlay.wind_gust', {\n    value: Math.round(data.gust)\n  })), isRacinaire && React.createElement(Text, {\n    style: [styles.metricsText, {\n      color: currentCondition === 'CORRECT' ? COLORS.DARK_GREEN : '#fff'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, i18n.t('meteo_overlay.soil_temp', {\n    value: Math.round(data.soiltemp)\n  })))), React.createElement(View, {\n    style: styles.carretContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [styles.triangle, {\n      borderBottomColor: COLORS[currentCondition + \"_CARDS\"]\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  mapHeader: {\n    display: 'flex',\n    flexDirection: 'row',\n    paddingTop: 30,\n    paddingRight: 30,\n    paddingLeft: 15,\n    paddingBottom: 50\n  },\n  mapHeaderIcon: {\n    color: '#fff',\n    fontSize: 26,\n    marginRight: 10\n  },\n  mapHeaderText: {\n    color: '#fff',\n    fontSize: 16,\n    fontFamily: 'nunito-bold',\n    flex: 1\n  },\n  metricsContainer: {\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n    flexDirection: 'row',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  metricsLine: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    justifyContent: 'space-evenly',\n    paddingHorizontal: 5\n  },\n  metricsText: {\n    fontSize: 13,\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    paddingVertical: 5\n  },\n  metricsWind: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  carretContainer: {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    alignItems: 'center',\n    zIndex: 5\n  },\n  triangle: {\n    zIndex: 5,\n    width: 0,\n    height: 0,\n    backgroundColor: 'transparent',\n    borderStyle: 'solid',\n    borderLeftWidth: 20,\n    borderRightWidth: 20,\n    borderBottomWidth: 20,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    transform: [{\n      rotate: '180deg'\n    }]\n  }\n});\nexport default MeteoMapHeaderSelected;","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/meteo-detailed/MeteoMapHeaderSelected.js"],"names":["React","useCallback","i18n","COLORS","MeteoMapHeaderSelected","productId","isRacinaire","data","currentCondition","getRFromProduct","styles","metricsContainer","backgroundColor","condition","metricsLine","metricsText","color","DARK_GREEN","t","value","Math","round","parseFloat","humi","temp","winddir","winddirection","wind","soilhumi","flex","deltatemp","gust","soiltemp","carretContainer","triangle","borderBottomColor","StyleSheet","create","mapHeader","display","flexDirection","paddingTop","paddingRight","paddingLeft","paddingBottom","mapHeaderIcon","fontSize","marginRight","mapHeaderText","fontFamily","paddingVertical","paddingHorizontal","alignItems","justifyContent","metricsWind","zIndex","width","height","borderStyle","borderLeftWidth","borderRightWidth","borderBottomWidth","borderLeftColor","borderRightColor","transform","rotate"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react'\nimport { StyleSheet, View, Text } from 'react-native'\n\nimport i18n from 'i18n-js'\n\nimport COLORS from '../../colors'\n\nconst MeteoMapHeaderSelected = ({ productId, isRacinaire, data, currentCondition }) => {\n  const getRFromProduct = useCallback(() => {\n    switch(productId) {\n      case 1:\n      case 7:\n        return \"r6\"\n\n      case 11:\n        return \"r3\"\n\n      default:\n        return \"r2\"\n    }\n  }, [productId])\n\n  return (\n    <>\n      <View style={[styles.metricsContainer, { backgroundColor: COLORS[`${data.condition}_CARDS`]}]}>\n        <View style={styles.metricsLine}>\n          <Text style={[styles.metricsText, { color: currentCondition === 'CORRECT' ? COLORS.DARK_GREEN : '#fff'}]}>{i18n.t('meteo_overlay.hygro', { value: Math.round(parseFloat(data.humi)) })}</Text>\n          <Text style={[styles.metricsText, { color: currentCondition === 'CORRECT' ? COLORS.DARK_GREEN : '#fff'}]}>\n            {i18n.t('meteo_overlay.precipitation_'+getRFromProduct(), { value: Math.round(parseFloat(data[getRFromProduct()])) })}\n          </Text>\n          { isRacinaire && (\n            <Text style={[styles.metricsText, { color: currentCondition === 'CORRECT' ? COLORS.DARK_GREEN : '#fff'}]}>{\"\"}</Text>\n          )}\n        </View>\n        <View style={styles.metricsLine}>\n          <Text style={[styles.metricsText, { color: currentCondition === 'CORRECT' ? COLORS.DARK_GREEN : '#fff'}]}>{i18n.t('meteo_overlay.temp', { value: Math.round(parseFloat(data.temp)) })}</Text>\n          <Text style={[styles.metricsText, { color: currentCondition === 'CORRECT' ? COLORS.DARK_GREEN : '#fff'}]}>{`${i18n.t('meteo_overlay.wind')} ${i18n.t('meteo_overlay.wind_speed', { winddir: data.winddirection, value: Math.round(data.wind) })}`}</Text>\n          { isRacinaire && (\n            <Text style={[styles.metricsText, { color: currentCondition === 'CORRECT' ? COLORS.DARK_GREEN : '#fff'}]}>{`${i18n.t('meteo_overlay.soil')} ${i18n.t('meteo_overlay.soil_humi', { value: Math.round(data.soilhumi) })}`}</Text>\n          )}\n        </View>\n        <View style={[styles.metricsLine, {flex:1}]}>\n          <Text style={[styles.metricsText, { color: currentCondition === 'CORRECT' ? COLORS.DARK_GREEN : '#fff'}]}>{i18n.t('meteo_overlay.delta_temp', { value: Math.round(data.deltatemp) })}</Text>\n          <Text style={[styles.metricsText, { color: currentCondition === 'CORRECT' ? COLORS.DARK_GREEN : '#fff'}]}>{i18n.t('meteo_overlay.wind_gust', { value: Math.round(data.gust) })}</Text>\n          { isRacinaire && (\n            <Text style={[styles.metricsText, { color: currentCondition === 'CORRECT' ? COLORS.DARK_GREEN : '#fff'}]}>{i18n.t('meteo_overlay.soil_temp', { value: Math.round(data.soiltemp) })}</Text>\n          )}  \n          </View>\n      </View>\n      <View style={styles.carretContainer}>\n        <View style={[styles.triangle, { borderBottomColor: COLORS[`${currentCondition}_CARDS`] }]} />\n      </View>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  mapHeader: {\n    display: 'flex',\n    flexDirection: 'row',\n    paddingTop: 30,\n    paddingRight: 30,\n    paddingLeft: 15,\n    paddingBottom: 50,\n  },\n  mapHeaderIcon: {\n    color: '#fff',\n    fontSize: 26,\n    marginRight: 10,\n  },\n  mapHeaderText: {\n    color: '#fff',\n    fontSize: 16,\n    fontFamily: 'nunito-bold',\n    flex: 1,\n  },\n  metricsContainer: {\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n    flexDirection: 'row',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  metricsLine: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    justifyContent: 'space-evenly',\n    paddingHorizontal: 5,\n  },\n  metricsText: {\n    fontSize: 13,\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    paddingVertical: 5\n  },\n  metricsWind: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  carretContainer: {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    alignItems: 'center',\n    zIndex: 5,\n  },\n  triangle: {\n    zIndex: 5,\n    width: 0,\n    height: 0,\n    backgroundColor: 'transparent',\n    borderStyle: 'solid',\n    borderLeftWidth: 20,\n    borderRightWidth: 20,\n    borderBottomWidth: 20,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    transform: [\n      {rotate: '180deg'}\n    ]\n  }\n})\n\nexport default MeteoMapHeaderSelected"]},"metadata":{},"sourceType":"module"}