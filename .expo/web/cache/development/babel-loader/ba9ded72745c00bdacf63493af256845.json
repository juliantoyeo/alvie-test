{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/RealTimeScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Container, Header, Left, Body, Title, Right, Button, Content, Icon, Text } from 'native-base';\nimport { getRealtimeData, createIntervention } from \"../api/hygoApi\";\nimport LogoLoading from \"../components/LogoLoading\";\nimport i18n from 'i18n-js';\nimport COLORS from \"../colors\";\nimport HygoChart from \"../components/realtime/HygoChart\";\nimport HygoGauge from \"../components/realtime/HygoGauge\";\nimport ConditionHeader from \"../components/realtime/ConditionHeader\";\nimport { connect } from 'react-redux';\nimport moment from 'moment-timezone';\nimport { Amplitude, AMPLITUDE_EVENTS } from \"../amplitude\";\nvar ampEvent = AMPLITUDE_EVENTS.realTimeScreen;\n\nvar RealTimeScreen = function RealTimeScreen(_ref) {\n  var navigation = _ref.navigation,\n      phytoProductList = _ref.phytoProductList,\n      phytoProductSelected = _ref.phytoProductSelected;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRefreshing = _useState4[0],\n      setIsRefreshing = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      history = _useState6[0],\n      setHistory = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      last = _useState8[0],\n      setLast = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      ui = _useState10[0],\n      setUi = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      currentMeteo = _useState12[0],\n      setCurrentMeteo = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      currentCondition = _useState14[0],\n      setCurrentCondition = _useState14[1];\n\n  var _useState15 = useState(COLORS.GREY),\n      _useState16 = _slicedToArray(_useState15, 2),\n      color = _useState16[0],\n      setColor = _useState16[1];\n\n  var _useState17 = useState(COLORS.GREY),\n      _useState18 = _slicedToArray(_useState17, 2),\n      secondaryColor = _useState18[0],\n      setSecondaryColor = _useState18[1];\n\n  useEffect(function () {\n    loadRealtimeData();\n  }, []);\n  useEffect(function () {\n    Amplitude.logEventWithProperties(ampEvent.render, {\n      timestamp: Date.now()\n    });\n    var unsubscribe = navigation.addListener('didFocus', function () {\n      Amplitude.logEventWithProperties(ampEvent.render, {\n        timestamp: Date.now()\n      });\n    });\n    return unsubscribe.remove();\n  }, []);\n  useEffect(function () {\n    var unsubscribeFocus = navigation.addListener('willFocus', function () {\n      setIsRefreshing(true);\n      loadRealtimeData();\n    });\n    return function () {\n      unsubscribeFocus.remove();\n    };\n  }, [navigation, loadRealtimeData, phytoProductSelected]);\n\n  var loadRealtimeData = function loadRealtimeData() {\n    var _await$getRealtimeDat, history, last, ui, parcelleMeteo, parcelleMeteoProduct;\n\n    return _regeneratorRuntime.async(function loadRealtimeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getRealtimeData(phytoProductSelected));\n\n          case 2:\n            _await$getRealtimeDat = _context.sent;\n            history = _await$getRealtimeDat.history;\n            last = _await$getRealtimeDat.last;\n            ui = _await$getRealtimeDat.ui;\n            parcelleMeteo = _await$getRealtimeDat.parcelleMeteo;\n            parcelleMeteoProduct = _await$getRealtimeDat.parcelleMeteoProduct;\n            setHistory(history || []);\n            setLast(history.length > 0 ? history[history.length - 1] : {});\n            setUi(ui);\n            setCurrentMeteo(parcelleMeteo);\n            setCurrentCondition(parcelleMeteoProduct);\n\n            if (phytoProductSelected.length === 0 || !parcelleMeteoProduct.condition) {\n              updateColors('CYAN');\n            } else {\n              updateColors(parcelleMeteoProduct.condition);\n            }\n\n            setLoading(false);\n            setIsRefreshing(false);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getLastHour = function getLastHour(dt, separator) {\n    var d = moment.utc(dt || parseInt(last.timestamp)).tz('Europe/Paris').format('HH:mm');\n    return \"\" + d;\n  };\n\n  var onRefresh = function onRefresh() {\n    return _regeneratorRuntime.async(function onRefresh$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setIsRefreshing(true);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(loadRealtimeData());\n\n          case 3:\n            setIsRefreshing(false);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var updateColors = function updateColors(c) {\n    setSecondaryColor(COLORS[c + \"_GRADIENT_TOP\"]);\n    setColor(COLORS[c + \"_GRADIENT_BOT\"]);\n  };\n\n  var onProductPicker = function onProductPicker() {\n    Amplitude.logEventWithProperties(ampEvent.click_productPicker, {\n      timestamp: Date.now()\n    });\n    navigation.navigate(\"HygoProductPicker\", {\n      backScreen: 'RealTime'\n    });\n  };\n\n  var onGoToNextPulv = function onGoToNextPulv() {\n    Amplitude.logEventWithProperties(ampEvent.click_toNextPulvScreen, {\n      timestamp: Date.now()\n    });\n    navigation.navigate('Pulverisation');\n  };\n\n  var onNewIntervention = function onNewIntervention() {\n    return _regeneratorRuntime.async(function onNewIntervention$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            Amplitude.logEventWithProperties(ampEvent.click_newIntervention, {\n              timestamp: Date.now()\n            });\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(createIntervention());\n\n          case 4:\n            _context3.next = 8;\n            break;\n\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](1);\n\n          case 8:\n            loadRealtimeData();\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 6]], Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.statusbar,\n    forceInset: {\n      top: 'always'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    translucent: true,\n    backgroundColor: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), React.createElement(Container, {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, React.createElement(Header, {\n    style: styles.header,\n    hasTabs: true,\n    androidStatusBarColor: \"transparent\",\n    iosBarStyle: \"light-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, React.createElement(Left, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return navigation.toggleDrawer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"menu\",\n    style: {\n      color: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }))), React.createElement(Body, {\n    style: styles.headerBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, React.createElement(Title, {\n    style: styles.headerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, i18n.t('realtime.header'))), React.createElement(Right, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  })), loading && React.createElement(View, {\n    style: [StyleSheet.absoluteFill, {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, React.createElement(LogoLoading, {\n    color: COLORS.CYAN,\n    duration: 1000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  })), !loading && React.createElement(Content, {\n    contentContainerStyle: {\n      flexGrow: 1,\n      backgroundColor: COLORS.BEIGE,\n      padding: 0,\n      disableKBDismissScroll: true\n    },\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: isRefreshing,\n      onRefresh: onRefresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 31\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, React.createElement(ConditionHeader, {\n    isRefreshing: isRefreshing,\n    history: history,\n    currentMeteo: currentMeteo,\n    currentCondition: currentCondition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }), React.createElement(View, {\n    style: styles.lastHour,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.lastHourText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, history.length === 0 ? i18n.t('realtime.no_data_3_hours') : i18n.t('realtime.last_hour', {\n    value: getLastHour()\n  }))), React.createElement(TouchableWithoutFeedback, {\n    onPress: onProductPicker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: styles.picker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, phytoProductSelected.length === 0 && React.createElement(Text, {\n    style: styles.pickerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, i18n.t('pulverisation.product_type')), phytoProductSelected.length > 0 && React.createElement(Text, {\n    style: styles.pickerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, phytoProductList.filter(function (pp) {\n    return phytoProductSelected.indexOf(pp.id) > -1;\n  }).map(function (pp) {\n    return i18n.t(\"products.\" + pp.name);\n  }).join(', ')), React.createElement(Icon, {\n    style: styles.pickerIcon,\n    type: \"Feather\",\n    name: \"chevron-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }))), React.createElement(View, {\n    style: styles.gaugeContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, React.createElement(HygoGauge, {\n    value: last && typeof last.temp !== 'undefined' ? Math.round(last.temp, 1) : null,\n    min: -10,\n    max: 50,\n    color: color,\n    img: require(\"../../assets/thermo.png\"),\n    unit: \"\\xB0C\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }), React.createElement(HygoGauge, {\n    value: last && typeof last.humi !== 'undefined' ? Math.round(last.humi) : null,\n    min: 0,\n    max: 100,\n    color: color,\n    img: require(\"../../assets/ICN-Hygro.png\"),\n    unit: \"%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }), React.createElement(HygoGauge, {\n    value: currentMeteo && typeof currentMeteo.windspeed !== 'undefined' ? Math.round(currentMeteo.windspeed) : null,\n    min: 0,\n    max: 50,\n    color: color,\n    img: require(\"../../assets/ICN-Wind.png\"),\n    unit: \" km/h\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  })), history.length > 1 && React.createElement(HygoChart, {\n    label: i18n.t('realtime.hygro'),\n    data: history.map(function (h) {\n      return {\n        x: new Date(h.timestamp),\n        y: h.humi\n      };\n    }),\n    mainColor: color,\n    secondaryColor: secondaryColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }), history.length > 1 && React.createElement(HygoChart, {\n    label: i18n.t('realtime.temp'),\n    data: history.map(function (h) {\n      return {\n        x: new Date(h.timestamp),\n        y: h.temp\n      };\n    }),\n    mainColor: color,\n    secondaryColor: secondaryColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }), last && typeof last.dewpoint !== 'undefined' && React.createElement(View, {\n    style: styles.dewpoint,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.dewpointText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }, i18n.t('realtime.dewpoint') + ' : \u001d' + Math.round(last.dewpoint, 1).toString() + ' °C')), React.createElement(View, {\n    style: {\n      paddingHorizontal: 32,\n      marginTop: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: onGoToNextPulv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }, history.length > 0 ? i18n.t('realtime.next_cuve') : i18n.t('realtime.goto_cuve')))), React.createElement(View, {\n    style: {\n      height: 60\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  content: {\n    flex: 1,\n    backgroundColor: COLORS.BEIGE\n  },\n  pulveContainer: {\n    backgroundColor: COLORS.CYAN,\n    paddingRight: 15,\n    paddingTop: 30,\n    paddingBottom: 40\n  },\n  picker: {\n    shadowColor: '#000',\n    shadowOpacity: .2,\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    elevation: 3,\n    backgroundColor: '#fff',\n    paddingLeft: 20,\n    borderTopRightRadius: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    paddingRight: 20,\n    paddingVertical: 10\n  },\n  pickerText: {\n    flex: 1,\n    color: COLORS.DARK_BLUE,\n    fontSize: 16,\n    fontFamily: 'nunito-bold'\n  },\n  pickerIcon: {\n    marginLeft: 5,\n    fontSize: 20,\n    color: COLORS.DARK_BLUE\n  },\n  interv: {\n    shadowColor: '#000',\n    shadowOpacity: .2,\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    elevation: 3,\n    backgroundColor: '#fff',\n    paddingLeft: 20,\n    borderTopRightRadius: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    paddingRight: 20,\n    paddingVertical: 10,\n    marginTop: 10\n  },\n  intervText: {\n    flex: 1,\n    color: COLORS.DARK_BLUE,\n    fontSize: 16,\n    fontFamily: 'nunito-bold'\n  },\n  intervIcon: {\n    marginLeft: 5,\n    fontSize: 20,\n    color: COLORS.DARK_BLUE\n  },\n  statusbar: {\n    flex: 1,\n    display: 'flex',\n    backgroundColor: Platform.OS === 'ios' ? 'black' : COLORS.CYAN\n  },\n  container: {\n    flex: 1,\n    display: 'flex'\n  },\n  header: {\n    backgroundColor: COLORS.CYAN\n  },\n  headerBody: {\n    flex: 3,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 24\n  },\n  text: {\n    color: COLORS.DARK_GREEN,\n    textAlign: 'center',\n    fontSize: 18,\n    flex: 1,\n    fontFamily: 'nunito-regular'\n  },\n  gaugeContainer: {\n    padding: 25,\n    display: 'flex',\n    flexDirection: 'row',\n    paddingTop: 40,\n    justifyContent: 'space-around'\n  },\n  lastHour: {\n    padding: 10,\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  lastHourText: {\n    fontFamily: 'nunito-heavy',\n    fontSize: 12,\n    color: '#aaaaaa'\n  },\n  button: {\n    borderRadius: 40,\n    paddingVertical: 20,\n    backgroundColor: COLORS.DARK_BLUE,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontFamily: 'nunito-heavy',\n    textTransform: 'uppercase'\n  },\n  dewpoint: {\n    paddingLeft: 20,\n    paddingTop: 10\n  },\n  dewpointText: {\n    flex: 1,\n    color: COLORS.DARK_BLUE,\n    fontSize: 16,\n    fontFamily: 'nunito-bold'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    phytoProductList: state.pulve.phytoProductList,\n    phytoProductSelected: state.pulve.phytoProductSelected\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RealTimeScreen);","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/RealTimeScreen.js"],"names":["React","useEffect","useState","SafeAreaView","Container","Header","Left","Body","Title","Right","Button","Content","Icon","Text","getRealtimeData","createIntervention","LogoLoading","i18n","COLORS","HygoChart","HygoGauge","ConditionHeader","connect","moment","Amplitude","AMPLITUDE_EVENTS","ampEvent","realTimeScreen","RealTimeScreen","navigation","phytoProductList","phytoProductSelected","loading","setLoading","isRefreshing","setIsRefreshing","history","setHistory","last","setLast","ui","setUi","currentMeteo","setCurrentMeteo","currentCondition","setCurrentCondition","GREY","color","setColor","secondaryColor","setSecondaryColor","loadRealtimeData","logEventWithProperties","render","timestamp","Date","now","unsubscribe","addListener","remove","unsubscribeFocus","parcelleMeteo","parcelleMeteoProduct","length","condition","updateColors","getLastHour","dt","separator","d","utc","parseInt","tz","format","onRefresh","c","onProductPicker","click_productPicker","navigate","backScreen","onGoToNextPulv","click_toNextPulvScreen","onNewIntervention","click_newIntervention","styles","statusbar","top","content","header","flex","toggleDrawer","headerBody","headerTitle","t","StyleSheet","absoluteFill","display","alignItems","justifyContent","CYAN","flexGrow","backgroundColor","BEIGE","padding","disableKBDismissScroll","lastHour","lastHourText","value","picker","pickerText","filter","pp","indexOf","id","map","name","join","pickerIcon","gaugeContainer","temp","Math","round","require","humi","windspeed","h","x","y","dewpoint","dewpointText","toString","paddingHorizontal","marginTop","button","buttonText","height","create","pulveContainer","paddingRight","paddingTop","paddingBottom","shadowColor","shadowOpacity","shadowOffset","width","elevation","paddingLeft","borderTopRightRadius","flexDirection","paddingVertical","DARK_BLUE","fontSize","fontFamily","marginLeft","interv","intervText","intervIcon","Platform","OS","container","text","DARK_GREEN","textAlign","borderRadius","textTransform","mapStateToProps","state","pulve","mapDispatchToProps","dispatch","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport { StyleSheet, RefreshControl, StatusBar, View, Image, TouchableOpacity, TouchableWithoutFeedback } from 'react-native';\nimport { Container, Header, Left, Body, Title, Right, Button, Content, Icon, Text } from 'native-base';\nimport { getRealtimeData, createIntervention } from '../api/hygoApi';\n\nimport LogoLoading from '../components/LogoLoading'\n\nimport i18n from 'i18n-js'\n\nimport COLORS from '../colors'\n\nimport HygoChart from '../components/realtime/HygoChart';\nimport HygoGauge from '../components/realtime/HygoGauge';\nimport ConditionHeader from '../components/realtime/ConditionHeader'\n\nimport { connect } from 'react-redux'\n\nimport moment from 'moment-timezone'\n\nimport {Amplitude, AMPLITUDE_EVENTS} from '../amplitude'\nconst {realTimeScreen: ampEvent} = AMPLITUDE_EVENTS\n\nconst RealTimeScreen = ({ navigation, phytoProductList, phytoProductSelected }) => {\n  const [loading, setLoading] = useState(true)\n  const [isRefreshing, setIsRefreshing] = useState(false)\n\n  const [history, setHistory] = useState([])\n  const [last, setLast] = useState({})\n  const [ui, setUi] = useState({})\n  const [currentMeteo, setCurrentMeteo] = useState({})\n  const [currentCondition, setCurrentCondition] = useState({})\n\n  const [color, setColor] = useState(COLORS.GREY)\n  const [secondaryColor, setSecondaryColor] = useState(COLORS.GREY)\n\n  useEffect(() => {\n    loadRealtimeData()\n  }, [])\n  \n  useEffect( () => {\n    // console.log(\"Amplitude : \", ampEvent.render)\n    Amplitude.logEventWithProperties(ampEvent.render, {\n      timestamp: Date.now()\n    })\n    const unsubscribe = navigation.addListener('didFocus', () => {\n      // console.log(\"Amplitude : \", ampEvent.render)\n      Amplitude.logEventWithProperties(ampEvent.render, {\n        timestamp: Date.now()\n      })\n    })\n    return unsubscribe.remove()\n  }, [])\n\n  useEffect(() => {\n    const unsubscribeFocus = navigation.addListener('willFocus', () => {\n      setIsRefreshing(true)\n      loadRealtimeData()\n    });\n\n    return () => {\n      unsubscribeFocus.remove()\n    };\n  }, [navigation, loadRealtimeData, phytoProductSelected])\n  \n  const loadRealtimeData = async () => {\n    let { history, last, ui, parcelleMeteo, parcelleMeteoProduct } = await getRealtimeData(phytoProductSelected)\n\n    setHistory(history || [])\n    setLast(history.length > 0 ? history[history.length-1] : {})\n    setUi(ui)\n    setCurrentMeteo(parcelleMeteo)\n    setCurrentCondition(parcelleMeteoProduct)\n    if (phytoProductSelected.length === 0 || !parcelleMeteoProduct.condition) {\n      updateColors('CYAN')\n    } else {\n      updateColors(parcelleMeteoProduct.condition)\n    }\n\n    setLoading(false)\n    setIsRefreshing(false)\n  }\n\n  const getLastHour = (dt, separator) => {\n    let d = moment.utc(dt || parseInt(last.timestamp)).tz('Europe/Paris').format('HH:mm')\n    return `${d}`\n  }\n\n  const onRefresh = async () => {\n    setIsRefreshing(true)\n    await loadRealtimeData()\n    setIsRefreshing(false)\n  }\n\n  const updateColors = (c) => {\n    setSecondaryColor(COLORS[`${c}_GRADIENT_TOP`])\n    setColor(COLORS[`${c}_GRADIENT_BOT`])\n  }\n\n  const onProductPicker = () => {\n    // console.log(\"Amplitude : \", ampEvent.click_productPicker)\n    Amplitude.logEventWithProperties(ampEvent.click_productPicker, {\n      timestamp: Date.now()\n    })\n    navigation.navigate(\"HygoProductPicker\", {backScreen: 'RealTime'})\n  }\n\n  const onGoToNextPulv = () => {\n    // console.log(\"Amplitude : \", ampEvent.click_toNextPulvScreen)\n    Amplitude.logEventWithProperties(ampEvent.click_toNextPulvScreen, {\n      timestamp: Date.now()\n    })\n    navigation.navigate('Pulverisation')\n  }\n\n  const onNewIntervention =  async () => {\n    Amplitude.logEventWithProperties(ampEvent.click_newIntervention, {\n      timestamp: Date.now()\n    })\n    try {\n      await createIntervention()\n    } catch(err) {\n      \n    }\n    loadRealtimeData()\n  }\n  return (\n    <SafeAreaView style={styles.statusbar} forceInset={{top:'always'}}>\n      <StatusBar translucent backgroundColor=\"transparent\" />\n      <Container style={styles.content}>\n        <Header style={styles.header} hasTabs androidStatusBarColor=\"transparent\" iosBarStyle=\"light-content\">\n          <Left style={{ flex: 1 }}>\n            <Button transparent onPress={() => navigation.toggleDrawer() }>\n              <Icon name='menu' style={{ color: '#fff' }} />\n            </Button>\n          </Left>\n          <Body style={styles.headerBody}>\n            <Title style={styles.headerTitle}>{i18n.t('realtime.header')}</Title>\n          </Body>\n          <Right style={{ flex: 1 }}></Right>\n        </Header>\n\n        { loading && (\n          <View style={[StyleSheet.absoluteFill, {display: 'flex', alignItems: 'center', justifyContent: 'center'}]}>\n            <LogoLoading color={COLORS.CYAN} duration={1000} />\n          </View>\n        )}\n\n        { !loading && (\n          <Content contentContainerStyle={{ flexGrow: 1, backgroundColor: COLORS.BEIGE, padding: 0, disableKBDismissScroll: true }} \n              refreshControl={<RefreshControl refreshing={isRefreshing} onRefresh={onRefresh} />}>\n          \n            <View>\n              <ConditionHeader isRefreshing={isRefreshing} history={history} currentMeteo={currentMeteo} currentCondition={currentCondition} />\n              <View style={styles.lastHour}>\n                <Text style={styles.lastHourText}>{history.length === 0 ? i18n.t('realtime.no_data_3_hours') : i18n.t('realtime.last_hour', { value: getLastHour() })}</Text>\n            </View>\n\n              <TouchableWithoutFeedback onPress={onProductPicker}>\n                <View style={styles.picker}>\n                  { phytoProductSelected.length === 0 && (\n                    <Text style={styles.pickerText}>{i18n.t('pulverisation.product_type')}</Text>\n                  )}\n                  { phytoProductSelected.length > 0 && (\n                    <Text style={styles.pickerText}>{ phytoProductList.filter(pp => phytoProductSelected.indexOf(pp.id) > -1).map(pp => i18n.t(`products.${pp.name}`)).join(', ') }</Text>\n                  )}\n                  <Icon style={styles.pickerIcon} type=\"Feather\" name=\"chevron-down\" />\n                </View>\n              </TouchableWithoutFeedback>\n              {/*<View style={styles.interv}>\n                <Text style={styles.pickerText}>{i18n.t('realtime.intervention')} {ui.interv ? ui.interv : '0'}</Text>  \n                <TouchableOpacity onPress={ onNewIntervention }>\n                  <Icon style={styles.intervIcon} type=\"Feather\" name=\"plus-circle\" />\n                </TouchableOpacity>  \n              </View> */}\n              <View style={styles.gaugeContainer}>\n                <HygoGauge value={last && typeof last.temp !== 'undefined' ? Math.round(last.temp, 1) : null} min={-10} max={50} color={color} img={require('../../assets/thermo.png')} unit=\"°C\" />\n                <HygoGauge value={last && typeof last.humi !== 'undefined' ? Math.round(last.humi) : null} min={0} max={100} color={color} img={require('../../assets/ICN-Hygro.png')} unit=\"%\" />\n                <HygoGauge value={currentMeteo && typeof currentMeteo.windspeed !== 'undefined' ? Math.round(currentMeteo.windspeed) : null} min={0} max={50} color={color} img={require('../../assets/ICN-Wind.png')} unit=\" km/h\" />\n              </View>\n\n              { history.length > 1 && (\n                <HygoChart label={i18n.t('realtime.hygro')} data={history.map(h => {\n                  return { x: new Date(h.timestamp), y: h.humi }\n                })} mainColor={color} secondaryColor={secondaryColor} />\n              )}\n\n              { history.length > 1 && (\n                <HygoChart label={i18n.t('realtime.temp')} data={history.map(h => {\n                  return { x: new Date(h.timestamp), y: h.temp }\n                })} mainColor={color} secondaryColor={secondaryColor} />\n              )}\n              {last && typeof last.dewpoint !== 'undefined' &&\n                <View style={styles.dewpoint}>\n                  <Text style={styles.dewpointText}>{i18n.t('realtime.dewpoint') + ' : \u001d' + Math.round(last.dewpoint, 1).toString() + ' °C'}</Text>\n                </View>\n              }\n              <View style={{ paddingHorizontal: 32, marginTop: 40 }}>\n                <TouchableOpacity style={styles.button} onPress={onGoToNextPulv}>\n                  <Text style={styles.buttonText}>{history.length > 0 ? i18n.t('realtime.next_cuve') : i18n.t('realtime.goto_cuve')}</Text>\n                </TouchableOpacity>\n              </View>\n              <View style={{ height: 60 }} />\n            </View>\n          </Content>\n        )}\n      </Container>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flex: 1,\n    backgroundColor: COLORS.BEIGE\n  },\n  pulveContainer: {\n    backgroundColor: COLORS.CYAN,\n    paddingRight: 15,\n    paddingTop: 30,\n    paddingBottom: 40,\n  },\n  picker: {\n    shadowColor: '#000',\n    shadowOpacity: .2,\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    elevation: 3,\n    backgroundColor: '#fff',\n    paddingLeft: 20,\n    borderTopRightRadius: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    paddingRight: 20,\n    paddingVertical: 10,\n  },\n  pickerText: {\n    flex: 1,\n    color: COLORS.DARK_BLUE,\n    fontSize: 16,\n    fontFamily: 'nunito-bold',\n  },\n  pickerIcon: {\n    marginLeft: 5,\n    fontSize: 20,\n    color: COLORS.DARK_BLUE\n  },\n  interv: {\n    shadowColor: '#000',\n    shadowOpacity: .2,\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    elevation: 3,\n    backgroundColor: '#fff',\n    paddingLeft: 20,\n    borderTopRightRadius: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    paddingRight: 20,\n    paddingVertical: 10,\n    marginTop:10\n  },\n  intervText: {\n    flex: 1,\n    color: COLORS.DARK_BLUE,\n    fontSize: 16,\n    fontFamily: 'nunito-bold',\n  },\n  intervIcon: {\n    marginLeft: 5,\n    fontSize: 20,\n    color: COLORS.DARK_BLUE\n  },\n  statusbar: { \n    flex: 1, \n    display: 'flex',\n    backgroundColor: Platform.OS === 'ios' ? 'black' : COLORS.CYAN,\n  },\n  container: { \n    flex: 1, \n    display: 'flex', \n  },\n  header: {\n    backgroundColor: COLORS.CYAN\n  },\n  headerBody: {\n    flex: 3,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 24\n  },  \n  text: {\n    color: COLORS.DARK_GREEN,\n    textAlign: 'center',\n    fontSize: 18,\n    flex: 1,\n    fontFamily: 'nunito-regular'\n  },\n  gaugeContainer: {\n    padding: 25,\n    display: 'flex',\n    flexDirection: 'row',\n    paddingTop: 40,\n    justifyContent: 'space-around',\n  },\n  lastHour: {\n    padding: 10,\n    paddingLeft: 20,\n    paddingRight: 20,\n  },\n  lastHourText: {\n    fontFamily: 'nunito-heavy',\n    fontSize: 12,\n    color: '#aaaaaa',\n  },\n  button: {\n    borderRadius: 40,\n    paddingVertical: 20,\n    backgroundColor: COLORS.DARK_BLUE,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontFamily: 'nunito-heavy',\n    textTransform: 'uppercase'\n  },\n  dewpoint: {\n    paddingLeft: 20,\n    paddingTop: 10,\n  },\n  dewpointText: {\n    flex: 1,\n    color: COLORS.DARK_BLUE,\n    fontSize: 16,\n    fontFamily: 'nunito-bold',\n  },\n})\n\nconst mapStateToProps = (state) => ({\n  phytoProductList: state.pulve.phytoProductList,\n  phytoProductSelected: state.pulve.phytoProductSelected,\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RealTimeScreen);"]},"metadata":{},"sourceType":"module"}