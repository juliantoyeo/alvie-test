{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/LoadingScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport LogoLoading from \"../components/LogoLoading\";\n\nvar LoadingScreen = function LoadingScreen(_ref) {\n  var navigation = _ref.navigation;\n  useEffect(function () {\n    if (typeof navigation.state.params.action !== 'undefined') {\n      run();\n    }\n  }, [navigation.state.params]);\n\n  var run = function run() {\n    var _navigation$state$par, action, next, params, raw, result;\n\n    return _regeneratorRuntime.async(function run$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _navigation$state$par = navigation.state.params, action = _navigation$state$par.action, next = _navigation$state$par.next, params = _navigation$state$par.params, raw = _navigation$state$par.raw;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(action(params));\n\n          case 3:\n            result = _context.sent;\n            navigation.replace(next, raw ? _objectSpread({}, result) : {\n              result: result\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: [styles.statusbar, {\n      backgroundColor: 'black'\n    }],\n    forceInset: {\n      top: 'always'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    translucent: true,\n    backgroundColor: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), React.createElement(ImageBackground, {\n    source: require(\"../../assets/blue_back.png\"),\n    imageStyle: {\n      resizeMode: 'cover',\n      flex: 1\n    },\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [StyleSheet.absoluteFill, {\n      flex: 1,\n      backgroundColor: '#000',\n      opacity: .6\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(LogoLoading, {\n    duration: 1000,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  statusbar: {\n    flex: 1,\n    display: 'flex'\n  },\n  container: {\n    justifyContent: 'center',\n    flex: 1,\n    display: 'flex',\n    paddingLeft: 38,\n    paddingRight: 38,\n    alignItems: 'center',\n    resizeMode: 'cover'\n  }\n});\nexport default LoadingScreen;","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/LoadingScreen.js"],"names":["React","useEffect","LogoLoading","LoadingScreen","navigation","state","params","action","run","next","raw","result","replace","styles","statusbar","backgroundColor","top","require","resizeMode","flex","container","StyleSheet","absoluteFill","opacity","display","alignItems","create","justifyContent","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { SafeAreaView, ImageBackground, StyleSheet, View, StatusBar } from 'react-native'\n\nimport LogoLoading from '../components/LogoLoading'\n\nconst LoadingScreen = ({ navigation }) => {\n  useEffect(() => {\n    if (typeof navigation.state.params.action !== 'undefined') {\n      run()\n    }\n  }, [navigation.state.params])\n\n  const run = async () => {\n    const { action, next, params, raw } = navigation.state.params\n\n    let result = await action(params)\n    navigation.replace(next, raw ? {\n      ...result\n    } : {\n      result\n    })\n  }\n\n  return (\n    <SafeAreaView style={[styles.statusbar, { backgroundColor: 'black' }]} forceInset={{top:'always'}}>\n      <StatusBar translucent backgroundColor=\"transparent\" />\n      <ImageBackground source={require('../../assets/blue_back.png')} imageStyle={{  resizeMode: 'cover', flex: 1 }} style={styles.container}>\n        <View style={[StyleSheet.absoluteFill, { flex: 1, backgroundColor: '#000', opacity: .6 }]}></View>\n        <View style={{ display: 'flex', alignItems: 'center' }}>\n          <LogoLoading duration={1000} color={\"#fff\"} />\n        </View>\n      </ImageBackground>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  statusbar: { \n    flex: 1, \n    display: 'flex',\n  },\n  container: { \n    justifyContent: 'center', \n    flex: 1, \n    display: 'flex', \n    paddingLeft: 38, \n    paddingRight: 38, \n    alignItems: 'center',\n    resizeMode: 'cover'\n  },\n  \n})\n\nexport default LoadingScreen"]},"metadata":{},"sourceType":"module"}