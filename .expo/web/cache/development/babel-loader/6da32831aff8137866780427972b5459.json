{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/testScreens/SelectParcelsScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from 'react-redux';\nimport { Container, Header, Left, Body, Title, Right, Content, Text, Footer } from 'native-base';\nimport { HygoList } from \"./HygoList\";\nimport HygoButton from \"../../components/HygoButton\";\nimport { ModulationContext } from \"../../context/modulation.context\";\nimport COLORS from \"../../colors\";\nimport { AMPLITUDE_EVENTS } from \"../../amplitude\";\nvar ampEvent = AMPLITUDE_EVENTS.selectParcelsScreen;\nvar types = [\"ble\", \"mais\"];\nvar fieldsData = [{\n  type: \"ble\",\n  arg1: \"Parcelle1\",\n  arg2: \"30ha\",\n  selected: false,\n  id: 1\n}, {\n  type: \"ble\",\n  arg1: \"Parcelle2\",\n  arg2: \"60ha\",\n  selected: false,\n  id: 2\n}, {\n  type: \"mais\",\n  arg1: \"Parcelle3\",\n  arg2: \"36ha\",\n  selected: false,\n  id: 3\n}, {\n  type: \"mais\",\n  arg1: \"Parcelle4\",\n  arg2: \"64ha\",\n  selected: false,\n  id: 4\n}];\n\nvar SelectParcelsScreen = function SelectParcelsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var context = React.useContext(ModulationContext);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      fields = _useState2[0],\n      setFields = _useState2[1];\n\n  useEffect(function () {\n    setFields(fieldsData);\n    context.cleanFields();\n  }, []);\n\n  var updateList = function updateList(id, newSelected) {\n    var touchedField = _objectSpread({}, fields.find(function (p) {\n      return p.id == id;\n    }), {\n      selected: newSelected\n    });\n\n    setFields([].concat(_toConsumableArray(fields.filter(function (p) {\n      return p.id != id;\n    })), [touchedField]));\n\n    if (newSelected == true) {\n      context.addField(touchedField);\n    } else {\n      context.removeField(touchedField);\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.statusbar,\n    forceInset: {\n      top: 'always'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    translucent: true,\n    backgroundColor: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), React.createElement(Container, {\n    contentContainerStyle: [styles.container, StyleSheet.absoluteFill],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, React.createElement(Header, {\n    style: styles.header,\n    androidStatusBarColor: COLORS.CYAN,\n    iosBarStyle: \"light-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, React.createElement(Left, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }), React.createElement(Body, {\n    style: styles.headerBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, React.createElement(Title, {\n    style: styles.headerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }\n  }, \"Pulv\\xE9risation\"), React.createElement(Title, {\n    style: styles.headerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 23\n    }\n  }, \"Choix des parcelles\")), React.createElement(Right, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  })), React.createElement(Content, {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Mes Parcelles\"), types.map(function (t, k) {\n    var items = fields.filter(function (p) {\n      return p.type == t;\n    });\n    return !!items && React.createElement(HygoList, {\n      key: k,\n      title: t,\n      items: items.sort(function (it1, it2) {\n        return it2.id <= it1.id;\n      }),\n      onPress: updateList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    });\n  }))), React.createElement(Footer, {\n    style: styles.footer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, React.createElement(HygoButton, {\n    label: \"CHOIX DES PRODUITS\",\n    icon: {\n      type: 'AntDesign',\n      name: 'arrowright',\n      fontSize: 26\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  statusbar: {\n    flex: 1,\n    display: 'flex',\n    backgroundColor: Platform.OS === 'ios' ? 'black' : COLORS.CYAN\n  },\n  container: {\n    backgroundColor: COLORS.BEIGE,\n    flexDirection: \"column\",\n    display: 'flex'\n  },\n  header: {\n    backgroundColor: COLORS.CYAN\n  },\n  headerBody: {\n    flex: 4,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 24\n  },\n  title: {\n    paddingTop: 20,\n    paddingLeft: 10,\n    textTransform: 'uppercase',\n    fontFamily: 'nunito-bold',\n    fontSize: 16,\n    color: COLORS.CYAN\n  },\n  content: {\n    backgroundColor: COLORS.BEIGE\n  },\n  footer: {\n    backgroundColor: COLORS.BEIGE\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectParcelsScreen);","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/testScreens/SelectParcelsScreen.tsx"],"names":["React","useEffect","useState","SafeAreaView","connect","Container","Header","Left","Body","Title","Right","Content","Text","Footer","HygoList","HygoButton","ModulationContext","COLORS","AMPLITUDE_EVENTS","ampEvent","selectParcelsScreen","types","fieldsData","type","arg1","arg2","selected","id","SelectParcelsScreen","navigation","context","useContext","fields","setFields","cleanFields","updateList","newSelected","touchedField","find","p","filter","addField","removeField","styles","statusbar","top","container","StyleSheet","absoluteFill","header","CYAN","flex","headerBody","headerTitle","content","title","map","t","k","items","sort","it1","it2","footer","name","fontSize","create","display","backgroundColor","Platform","OS","BEIGE","flexDirection","justifyContent","alignItems","color","fontFamily","paddingTop","paddingLeft","textTransform","mapStateToProps","state","mapDispatchToProps","dispatch","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport { StyleSheet, RefreshControl, StatusBar, View } from 'react-native';\nimport { connect } from 'react-redux';\nimport { Container, Header, Left, Body, Title, Right, Button, Content, Icon, Text, Footer } from 'native-base';\nimport { HygoList } from './HygoList';\nimport HygoButton from'../../components/HygoButton';\nimport { getInterventions } from '../../api/hygoApi';\nimport { ModulationContext } from '../../context/modulation.context';\nimport i18n from 'i18n-js'\nimport COLORS from '../../colors'\nimport {Amplitude, AMPLITUDE_EVENTS} from '../../amplitude'\nconst {selectParcelsScreen: ampEvent} = AMPLITUDE_EVENTS\n\nconst types=[\"ble\", \"mais\"]\n\nconst fieldsData = [\n  \n  {\n    type : \"ble\",\n    arg1:\"Parcelle1\",\n    arg2: \"30ha\",\n    selected: false,\n    id: 1\n  },\n  {\n    type : \"ble\",\n    arg1: \"Parcelle2\",\n    arg2: \"60ha\",\n    selected: false,\n    id: 2\n  },\n  {\n    type: \"mais\",\n    arg1:\"Parcelle3\",\n    arg2:\"36ha\",\n    selected: false,\n    id: 3\n  },\n  {\n    type: \"mais\",\n    arg1:\"Parcelle4\",\n    arg2:\"64ha\",\n    selected: false,\n    id: 4\n  }\n]\n    \n\nconst SelectParcelsScreen = ({ navigation }) => {\n  const context = React.useContext(ModulationContext)\n  const [fields, setFields] = useState<any>([])\n\n  useEffect(() => {\n    setFields(fieldsData)\n    context.cleanFields()\n  }, [])\n\n  const updateList = (id, newSelected) => {\n    const touchedField = {...fields.find( (p) => p.id == id), selected: newSelected}\n    setFields([ ...fields.filter((p) => p.id != id), touchedField])\n    if (newSelected == true) {\n      context.addField(touchedField)\n    } else {\n      context.removeField(touchedField)\n    }\n  }\n  return (\n      <SafeAreaView style={styles.statusbar} forceInset={{top:'always'}}>\n          <StatusBar translucent backgroundColor=\"transparent\" />\n          <Container contentContainerStyle={[styles.container, StyleSheet.absoluteFill]}>\n              <Header style={styles.header} androidStatusBarColor={COLORS.CYAN} iosBarStyle=\"light-content\">\n                  <Left style={{ flex: 1 }}></Left>\n                  <Body style={styles.headerBody}>\n                      <Title style={styles.headerTitle}>Pulvérisation</Title>\n                      <Title style={styles.headerTitle}>Choix des parcelles</Title>\n                  </Body>\n                  <Right style={{ flex: 1 }}></Right>\n              </Header>\n              <Content style={styles.content}>\n                  <View>\n                    <Text style={styles.title}>Mes Parcelles</Text>\n                    {types.map((t, k) => {\n                      const items = fields.filter( (p) => p.type == t)\n                      return (\n                        !!items && \n                        <HygoList key={k} title={t} items={items.sort((it1, it2)=>it2.id <= it1.id)} onPress={updateList}/>\n                      )\n                    })}\n                  </View>\n              </Content>\n              <Footer style={styles.footer}>\n              <HygoButton  \n                    label=\"CHOIX DES PRODUITS\" \n                    icon={{\n                      type: 'AntDesign',\n                      name: 'arrowright',\n                      fontSize: 26\n                  }} />\n              </Footer>\n          </Container>\n          \n      </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n    statusbar: { \n      flex: 1, \n      display: 'flex',\n      backgroundColor: Platform.OS === 'ios' ? 'black' : COLORS.CYAN,\n    },\n    container: { \n      backgroundColor: COLORS.BEIGE,\n      flexDirection:\"column\",\n      display: 'flex', \n    },\n    header: {\n      backgroundColor: COLORS.CYAN\n    },\n    headerBody: {\n      flex: 4,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    headerTitle: {\n      color: '#fff',\n      fontFamily: 'nunito-regular',\n      fontSize: 24\n    },  \n    title: {\n      paddingTop:20,\n      paddingLeft:10,\n      textTransform: 'uppercase',\n      fontFamily: 'nunito-bold',\n      fontSize: 16,\n      color: COLORS.CYAN\n    },\n    content: {\n      backgroundColor: COLORS.BEIGE\n    },\n    footer:{\n      backgroundColor: COLORS.BEIGE\n    }\n  });\n  \n  const mapStateToProps = (state) => ({\n    \n  });\n  \n  const mapDispatchToProps = (dispatch, props) => ({\n    \n  })\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(SelectParcelsScreen);"]},"metadata":{},"sourceType":"module"}