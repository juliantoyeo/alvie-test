{"ast":null,"code":"var _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/realtime/ConditionHeader.js\";\nimport React, { useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport i18n from 'i18n-js';\nimport { connect } from 'react-redux';\nimport COLORS from \"../../colors\";\n\nvar ConditionHeader = function ConditionHeader(_ref) {\n  var isRefreshing = _ref.isRefreshing,\n      history = _ref.history,\n      phytoProductList = _ref.phytoProductList,\n      phytoProductSelected = _ref.phytoProductSelected,\n      currentMeteo = _ref.currentMeteo,\n      currentCondition = _ref.currentCondition;\n  var getRFromProduct = useCallback(function () {\n    var p = [];\n\n    for (var i = 0; i < phytoProductSelected.length; i++) {\n      var productId = phytoProductSelected[i];\n\n      switch (productId) {\n        case 1:\n        case 7:\n          p.push(\"r6\");\n\n        case 11:\n          p.push(\"r3\");\n\n        default:\n          p.push(\"r2\");\n      }\n    }\n\n    if (p.includes(\"r6\")) {\n      return \"r6\";\n    } else if (p.includes(\"r3\")) {\n      return \"r3\";\n    } else {\n      return \"r2\";\n    }\n  }, [phytoProductSelected]);\n  var hasRacinaire = useCallback(function () {\n    return phytoProductList.filter(function (p) {\n      return phytoProductSelected.includes(p.id);\n    }).filter(function (p) {\n      return p.isRacinaire;\n    }).length > 0;\n  }, [phytoProductSelected]);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, isRefreshing && React.createElement(View, {\n    style: [styles.headerCondition, {\n      backgroundColor: COLORS.CYAN\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textCondition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), !isRefreshing && history.length === 0 && React.createElement(View, {\n    style: [styles.headerCondition, {\n      backgroundColor: COLORS.CYAN\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textCondition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, i18n.t('realtime.waiting_for_data'))), !isRefreshing && history.length > 0 && phytoProductSelected.length === 0 && !currentMeteo.timestamp && React.createElement(View, {\n    style: [styles.headerCondition, {\n      backgroundColor: COLORS.CYAN\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textCondition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, i18n.t('realtime.no_product')), React.createElement(Text, {\n    style: styles.textCondition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, i18n.t('realtime.no_parcelle'))), !isRefreshing && history.length > 0 && phytoProductSelected.length === 0 && currentMeteo.timestamp && React.createElement(View, {\n    style: [styles.headerCondition, {\n      backgroundColor: COLORS.CYAN\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textCondition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, i18n.t('realtime.no_product')), React.createElement(Text, {\n    style: styles.textCondition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"\")), !isRefreshing && history.length > 0 && phytoProductSelected.length > 0 && !currentMeteo.timestamp && React.createElement(View, {\n    style: [styles.headerCondition, {\n      backgroundColor: COLORS.CYAN\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textCondition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, i18n.t('realtime.no_parcelle')), React.createElement(Text, {\n    style: styles.textCondition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"\")), !isRefreshing && history.length > 0 && phytoProductSelected.length > 0 && currentMeteo.timestamp && React.createElement(View, {\n    style: [styles.headerCondition, {\n      backgroundColor: COLORS[currentCondition.condition + \"_GRADIENT_BOT\"],\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 90\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textCondition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, i18n.t(\"realtime.status_conditions_\" + currentCondition.condition))), React.createElement(View, {\n    style: styles.metrics,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.metricsColumn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.metricsText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, i18n.t(\"meteo_overlay.precipitation_\" + getRFromProduct(), {\n    value: Math.round(parseFloat(currentCondition[getRFromProduct()]))\n  })), React.createElement(Text, {\n    style: styles.metricsText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, i18n.t(\"realtime.gel_\" + (currentCondition.t3 <= -2 ? 'risky' : 'none')))), React.createElement(View, {\n    style: styles.metricsColumn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.metricsText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, i18n.t(\"meteo_overlay.delta_temp\", {\n    value: Math.round(parseFloat(currentCondition.dt))\n  })), React.createElement(Text, {\n    style: styles.metricsText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, hasRacinaire() ? i18n.t(\"realtime.soil_humi\", {\n    value: Math.round(parseFloat(currentCondition.hs))\n  }) : '')))));\n};\n\nvar styles = StyleSheet.create({\n  metrics: {\n    marginTop: 10,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-evenly'\n  },\n  metricsColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    flex: 1\n  },\n  metricsText: {\n    fontFamily: 'nunito-regular',\n    color: '#fff',\n    fontSize: 14\n  },\n  headerCondition: {\n    padding: 15,\n    height: 82,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: COLORS.EXCELLENT,\n    display: 'flex',\n    borderWidth: 0,\n    borderRadius: 0,\n    borderColor: COLORS.BEIGE,\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    elevation: 1\n  },\n  textCondition: {\n    textTransform: 'uppercase',\n    color: '#fff',\n    fontFamily: 'nunito-heavy',\n    fontSize: 14,\n    padding: 2\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    phytoProductList: state.pulve.phytoProductList,\n    phytoProductSelected: state.pulve.phytoProductSelected\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConditionHeader);","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/realtime/ConditionHeader.js"],"names":["React","useCallback","i18n","connect","COLORS","ConditionHeader","isRefreshing","history","phytoProductList","phytoProductSelected","currentMeteo","currentCondition","getRFromProduct","p","i","length","productId","push","includes","hasRacinaire","filter","id","isRacinaire","styles","headerCondition","backgroundColor","CYAN","textCondition","t","timestamp","condition","alignItems","justifyContent","height","display","flex","metrics","metricsColumn","metricsText","value","Math","round","parseFloat","t3","dt","hs","StyleSheet","create","marginTop","flexDirection","fontFamily","color","fontSize","padding","EXCELLENT","borderWidth","borderRadius","borderColor","BEIGE","borderBottomWidth","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","textTransform","mapStateToProps","state","pulve","mapDispatchToProps","dispatch","props"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react'\n\nimport { StyleSheet, View, Text } from 'react-native'\n\nimport i18n from 'i18n-js'\n\nimport { connect } from 'react-redux'\n\nimport COLORS from '../../colors'\n\nconst ConditionHeader = ({ isRefreshing, history, phytoProductList, phytoProductSelected, currentMeteo, currentCondition }) => {\n  const getRFromProduct = useCallback(() => {\n    let p = []\n    for (let i = 0; i < phytoProductSelected.length; i++) {\n      let productId = phytoProductSelected[i]\n      switch(productId) {\n        case 1:\n        case 7:\n          p.push(\"r6\")\n\n        case 11:\n          p.push(\"r3\")\n\n        default:\n          p.push(\"r2\")\n      }\n    }\n\n    if (p.includes(\"r6\")) {\n      return \"r6\"\n    } else if (p.includes(\"r3\")) {\n      return \"r3\"\n    } else {\n      return \"r2\"\n    }\n  }, [phytoProductSelected])\n\n  const hasRacinaire = useCallback(() => {\n    return phytoProductList.filter(p => phytoProductSelected.includes(p.id)).filter(p => p.isRacinaire).length > 0\n  }, [phytoProductSelected])\n\n  return (\n    <View >\n      { isRefreshing && (\n        <View style={[styles.headerCondition, { backgroundColor:  COLORS.CYAN }]}>\n          <Text style={styles.textCondition}>{}</Text>\n        </View>\n      )}\n      { !isRefreshing && history.length === 0 && (\n        <View style={[styles.headerCondition, { backgroundColor:  COLORS.CYAN }]}>\n          <Text style={styles.textCondition}>{i18n.t('realtime.waiting_for_data')}</Text>\n        </View>\n      )}\n\n      { !isRefreshing && history.length > 0 && phytoProductSelected.length === 0 && !currentMeteo.timestamp && (\n        <View style={[styles.headerCondition, { backgroundColor:  COLORS.CYAN }]}>\n          <Text style={styles.textCondition}>{i18n.t('realtime.no_product')}</Text>\n          <Text style={styles.textCondition}>{i18n.t('realtime.no_parcelle')}</Text>\n        </View>\n      )}\n      { !isRefreshing && history.length > 0 && phytoProductSelected.length === 0 && currentMeteo.timestamp && (\n        <View style={[styles.headerCondition, { backgroundColor:  COLORS.CYAN }]}>\n          <Text style={styles.textCondition}>{i18n.t('realtime.no_product')}</Text>\n          <Text style={styles.textCondition}>{\"\"}</Text>\n        </View>\n      )}\n      { !isRefreshing && history.length > 0 && phytoProductSelected.length > 0 && !currentMeteo.timestamp && (\n        <View style={[styles.headerCondition, { backgroundColor:  COLORS.CYAN }]}>\n          <Text style={styles.textCondition}>{i18n.t('realtime.no_parcelle')}</Text>\n          <Text style={styles.textCondition}>{\"\"}</Text>\n        </View>\n      )}\n      { !isRefreshing && history.length > 0 && phytoProductSelected.length > 0 && currentMeteo.timestamp && (\n        <View style={[styles.headerCondition, { backgroundColor: COLORS[`${currentCondition.condition}_GRADIENT_BOT`], alignItems: 'center', justifyContent: 'center', height: 90 }]}>\n          <View style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flex: 1 }}>\n            <Text style={styles.textCondition}>{i18n.t(`realtime.status_conditions_${currentCondition.condition}`)}</Text>\n          </View>\n          <View style={styles.metrics}>\n            <View style={styles.metricsColumn}>\n              <Text style={styles.metricsText}>{i18n.t(`meteo_overlay.precipitation_${getRFromProduct()}`, { value: Math.round(parseFloat(currentCondition[getRFromProduct()])) })}</Text>\n              <Text style={styles.metricsText}>{i18n.t(`realtime.gel_${currentCondition.t3 <= -2 ? 'risky' : 'none'}`)}</Text>\n            </View>\n            <View style={styles.metricsColumn}>\n              <Text style={styles.metricsText}>{i18n.t(`meteo_overlay.delta_temp`, { value: Math.round(parseFloat(currentCondition.dt)) })}</Text>\n              <Text style={styles.metricsText}>{hasRacinaire() ? i18n.t(`realtime.soil_humi`, { value: Math.round(parseFloat(currentCondition.hs)) } ) : ''}</Text>\n            </View>\n          </View>\n        </View>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  metrics: {\n    marginTop: 10,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n  },\n  metricsColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    flex: 1\n  },\n  metricsText: {\n    fontFamily: 'nunito-regular',\n    color: '#fff',\n    fontSize: 14,\n  },\n  headerCondition: {\n    padding: 15,\n    height: 82,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: COLORS.EXCELLENT,\n    display: 'flex',\n    borderWidth: 0,\n    borderRadius: 0,\n    borderColor: COLORS.BEIGE, //'#888',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    elevation: 1,\n  },\n  textCondition: {\n    textTransform: 'uppercase',\n    color: '#fff',\n    fontFamily: 'nunito-heavy',\n    fontSize: 14,\n    padding: 2,\n  },\n})\n\nconst mapStateToProps = (state) => ({\n  phytoProductList: state.pulve.phytoProductList,\n  phytoProductSelected: state.pulve.phytoProductSelected,\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConditionHeader);"]},"metadata":{},"sourceType":"module"}