{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/HygoProductPicker.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { SafeAreaView } from 'react-navigation';\nimport { Header, Left, Body, Title, Right, Icon, Button, Container, Content } from 'native-base';\nimport COLORS from \"../colors\";\nimport i18n from 'i18n-js';\nimport { updateUIPhytoProduct } from \"../api/hygoApi\";\nimport { connect } from 'react-redux';\nimport { updatePhytoProductSelected as _updatePhytoProductSelected } from \"../store/actions/pulveActions\";\n\nvar HygoProductPicker = function HygoProductPicker(_ref) {\n  var navigation = _ref.navigation,\n      phytoProductList = _ref.phytoProductList,\n      updatePhytoProductSelected = _ref.updatePhytoProductSelected,\n      phytoProductSelected = _ref.phytoProductSelected;\n  var notifyUpdate = navigation.getParam('notifyUpdate');\n  var source = navigation.getParam('source');\n  var initial = navigation.getParam('initial');\n  var set = navigation.getParam('set');\n  var backScreen = navigation.getParam('backScreen');\n\n  var _useState = useState(source === 'intervention' ? initial : phytoProductSelected),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var handleClick = function handleClick(i) {\n    var p = JSON.parse(JSON.stringify(selected));\n\n    if (selected.indexOf(i) > -1) {\n      p = p.filter(function (e) {\n        return e !== i;\n      });\n    } else {\n      p.push(i);\n    }\n\n    if (set) {\n      set(p);\n    }\n\n    setSelected(p);\n\n    if (!source || source !== 'intervention') {\n      var _p = JSON.parse(JSON.stringify(phytoProductSelected));\n\n      if (phytoProductSelected.indexOf(i) > -1) {\n        _p = _p.filter(function (e) {\n          return e !== i;\n        });\n      } else {\n        _p.push(i);\n      }\n\n      updateUIPhytoProduct(_p);\n      updatePhytoProductSelected(_p);\n\n      if (notifyUpdate) {\n        notifyUpdate();\n      }\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: [styles.statusbar, {\n      backgroundColor: 'black'\n    }],\n    forceInset: {\n      top: 'always'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    translucent: true,\n    backgroundColor: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), React.createElement(Container, {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, React.createElement(Header, {\n    hasTabs: true,\n    style: [styles.header],\n    androidStatusBarColor: COLORS.BEIGE,\n    iosBarStyle: \"light-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(Left, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return navigation.navigate(backScreen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"close\",\n    style: {\n      color: COLORS.DARK_GREEN\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }))), React.createElement(Body, {\n    style: styles.headerBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, React.createElement(Title, {\n    style: styles.headerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, i18n.t('picker.header'))), React.createElement(Right, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })), React.createElement(Content, {\n    contentContainerStyle: [styles.container],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.listContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, source === 'intervention' && React.createElement(TouchableOpacity, {\n    style: styles.elemContainer,\n    onPress: function onPress() {\n      handleClick(-1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: [styles.elemText, {\n      fontWeight: selected.indexOf(-1) > -1 ? 'bold' : 'normal'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, i18n.t('intervention_map.other_farm_work')), selected.indexOf(-1) > -1 && React.createElement(Icon, {\n    name: \"check\",\n    type: \"AntDesign\",\n    style: [styles.elemIcon, {\n      color: selected.indexOf(-1) > -1 ? COLORS.DARK_GREEN : COLORS.GREY\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  })), phytoProductList.map(function (d) {\n    return React.createElement(TouchableOpacity, {\n      key: d.id,\n      style: styles.elemContainer,\n      onPress: function onPress() {\n        var i = d.id;\n        handleClick(i);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: [styles.elemText, {\n        fontWeight: selected.indexOf(d.id) > -1 ? 'bold' : 'normal'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, i18n.t(\"products.\" + d.name)), selected.indexOf(d.id) > -1 && React.createElement(Icon, {\n      name: \"check\",\n      type: \"AntDesign\",\n      style: [styles.elemIcon, {\n        color: selected.indexOf(d.id) > -1 ? COLORS.DARK_GREEN : COLORS.GREY\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }));\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  header: {\n    backgroundColor: COLORS.BEIGE\n  },\n  headerBody: {\n    flex: 4,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 20,\n    color: COLORS.DARK_GREEN\n  },\n  statusbar: {\n    display: 'flex',\n    backgroundColor: COLORS.BEIGE,\n    flex: 1\n  },\n  elemContainer: {\n    paddingHorizontal: 20,\n    paddingVertical: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  elemText: {\n    fontFamily: 'nunito-regular',\n    fontSize: 16,\n    color: COLORS.DARK_GREEN,\n    flex: 1\n  },\n  elemIcon: {\n    fontSize: 20,\n    color: COLORS.GREY\n  },\n  content: {\n    flex: 1,\n    display: 'flex',\n    backgroundColor: COLORS.BEIGE\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    phytoProductList: state.pulve.phytoProductList,\n    phytoProductSelected: state.pulve.phytoProductSelected\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    updatePhytoProductSelected: function updatePhytoProductSelected(selected) {\n      return dispatch(_updatePhytoProductSelected(selected));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HygoProductPicker);","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/HygoProductPicker.js"],"names":["React","useState","SafeAreaView","Header","Left","Body","Title","Right","Icon","Button","Container","Content","COLORS","i18n","updateUIPhytoProduct","connect","updatePhytoProductSelected","HygoProductPicker","navigation","phytoProductList","phytoProductSelected","notifyUpdate","getParam","source","initial","set","backScreen","selected","setSelected","handleClick","i","p","JSON","parse","stringify","indexOf","filter","e","push","styles","statusbar","backgroundColor","top","content","header","BEIGE","flex","navigate","color","DARK_GREEN","headerBody","headerTitle","t","container","listContent","elemContainer","elemText","fontWeight","elemIcon","GREY","map","d","id","name","StyleSheet","create","display","justifyContent","alignItems","fontFamily","fontSize","paddingHorizontal","paddingVertical","flexDirection","mapStateToProps","state","pulve","mapDispatchToProps","dispatch","props"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { StyleSheet, StatusBar, ScrollView, View, Text , TouchableOpacity} from 'react-native'\n\nimport { SafeAreaView } from 'react-navigation'\n\nimport { Header, Left, Body, Title, Right, Icon, Button, Container, Content } from 'native-base'\n\nimport COLORS from '../colors'\n\nimport i18n from 'i18n-js'\n\nimport { updateUIPhytoProduct } from '../api/hygoApi'\n\nimport { connect } from 'react-redux'\nimport { updatePhytoProductSelected } from '../store/actions/pulveActions'\n\nconst HygoProductPicker = ({ navigation, phytoProductList, updatePhytoProductSelected, phytoProductSelected }) => {\n  let notifyUpdate = navigation.getParam('notifyUpdate')\n  let source = navigation.getParam('source')\n  let initial = navigation.getParam('initial')\n  let set = navigation.getParam('set')\n  const backScreen = navigation.getParam('backScreen')\n\n  const [selected, setSelected] = useState(source === 'intervention' ? initial : phytoProductSelected)\n\n  const handleClick = (i) => {\n    let p = JSON.parse(JSON.stringify(selected))\n    if (selected.indexOf(i) > -1) {\n      p = p.filter(e => e !== i)\n    } else {\n      p.push(i)\n    }\n\n    if (set) {\n      set(p)\n    }\n    setSelected(p)\n    \n    if (!source || source !== 'intervention') {\n      let p = JSON.parse(JSON.stringify(phytoProductSelected))\n      if (phytoProductSelected.indexOf(i) > -1) {\n        p = p.filter(e => e !== i)\n      } else {\n        p.push(i)\n      }\n      updateUIPhytoProduct(p)\n      updatePhytoProductSelected(p)\n      \n      if (notifyUpdate) {\n        notifyUpdate()\n      }\n    }\n  }\n\n  return (\n    <SafeAreaView style={[styles.statusbar, { backgroundColor: 'black' }]} forceInset={{top:'always'}}>\n      <StatusBar translucent backgroundColor=\"transparent\" />\n      <Container style={styles.content}>\n        <Header hasTabs style={[styles.header]} androidStatusBarColor={COLORS.BEIGE} iosBarStyle=\"light-content\">\n          <Left style={{ flex: 1 }}>\n            {/*<Button transparent onPress={() => back ? navigation.replace(back, backParams||{}) : navigation.goBack()}>*/}\n            <Button transparent onPress={() => navigation.navigate(backScreen)}>\n              <Icon name='close' style={{ color: COLORS.DARK_GREEN }} />\n            </Button>\n          </Left>\n          <Body style={styles.headerBody}>\n            <Title style={styles.headerTitle}>{i18n.t('picker.header')}</Title>\n          </Body>\n          <Right style={{ flex: 1 }}></Right>\n        </Header>\n        <Content contentContainerStyle={[styles.container]}>\n          <View style={styles.listContent}>\n            { source === 'intervention' && (\n              <TouchableOpacity style={styles.elemContainer} onPress={() => {\n                handleClick(-1)\n              }}>\n                <Text style={[styles.elemText, { fontWeight: selected.indexOf(-1) > -1 ? 'bold' : 'normal'} ]}>{i18n.t('intervention_map.other_farm_work')}</Text>\n                { selected.indexOf(-1) > -1 && (\n                  <Icon name=\"check\" type=\"AntDesign\" style={[styles.elemIcon, {color: selected.indexOf(-1) > -1 ? COLORS.DARK_GREEN : COLORS.GREY }]} />\n                )}\n              </TouchableOpacity>\n            )}\n\n            { phytoProductList.map(d => {\n              return (\n                <TouchableOpacity key={d.id} style={styles.elemContainer} onPress={() => {\n                  let i = d.id\n                  handleClick(i)\n                }}>\n                  <Text style={[styles.elemText, { fontWeight: selected.indexOf(d.id) > -1 ? 'bold' : 'normal'} ]}>{i18n.t(`products.${d.name}`)}</Text>\n                  { selected.indexOf(d.id) > -1 && (\n                    <Icon name=\"check\" type=\"AntDesign\" style={[styles.elemIcon, { color: selected.indexOf(d.id) > -1 ? COLORS.DARK_GREEN : COLORS.GREY } ]} />\n                  )}\n                </TouchableOpacity>\n              )\n            })}\n          </View>\n      </Content>\n      </Container>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    backgroundColor: COLORS.BEIGE,\n  },\n  headerBody: {\n    flex: 4,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 20,\n    color: COLORS.DARK_GREEN\n  },  \n  statusbar: {\n    display: 'flex',\n    backgroundColor: COLORS.BEIGE,\n    flex: 1,\n  },\n  elemContainer: {\n    paddingHorizontal: 20,\n    paddingVertical: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  elemText: {\n    fontFamily: 'nunito-regular',\n    fontSize: 16,\n    color: COLORS.DARK_GREEN,\n    flex: 1,\n  },\n  elemIcon: {\n    fontSize: 20,\n    color: COLORS.GREY\n  },\n  content: {\n    flex: 1,\n    display: 'flex',\n    backgroundColor: COLORS.BEIGE,\n  }\n})\n\nconst mapStateToProps = (state) => ({\n  phytoProductList: state.pulve.phytoProductList,\n  phytoProductSelected: state.pulve.phytoProductSelected,\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  updatePhytoProductSelected: (selected) => dispatch(updatePhytoProductSelected(selected)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HygoProductPicker);"]},"metadata":{},"sourceType":"module"}