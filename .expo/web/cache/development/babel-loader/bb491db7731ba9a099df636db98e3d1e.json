{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/EquipmentScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { connect } from 'react-redux';\nimport { Content, Left, Right, Body, Title, Header, Button, Icon, Picker } from 'native-base';\nimport COLORS from \"../colors\";\nimport i18n from 'i18n-js';\nimport HygoButton from \"../components/HygoButton\";\nimport HygoCard from \"../components/HygoCard\";\nimport HygoPastille from \"../components/HygoPastille\";\nimport HygoSlider from \"../components/HygoSlider\";\nimport { storeEquipmentInformation } from \"../api/hygoApi\";\nimport { Amplitude, AMPLITUDE_EVENTS } from \"../amplitude\";\nvar ampEvent = AMPLITUDE_EVENTS.equipmentScreen;\n\nvar EquipmentScreen = function EquipmentScreen(_ref) {\n  var navigation = _ref.navigation;\n  var result = navigation.getParam('result');\n\n  var _useState = useState(result ? 'SELECT' : 'INIT'),\n      _useState2 = _slicedToArray(_useState, 2),\n      step = _useState2[0],\n      setStep = _useState2[1];\n\n  var _useState3 = useState(result ? {\n    validated: true,\n    buses: result.buses\n  } : {\n    validated: false,\n    buses: null\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      buses = _useState4[0],\n      setBuses = _useState4[1];\n\n  var _useState5 = useState(result ? {\n    validated: true,\n    speed: result.speed\n  } : {\n    speed: 0,\n    validated: false\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      speed = _useState6[0],\n      setSpeed = _useState6[1];\n\n  var _useState7 = useState(result ? {\n    pressure: result.pressure,\n    validated: true\n  } : {\n    pressure: 1,\n    validated: false\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pressure = _useState8[0],\n      setPressure = _useState8[1];\n\n  var _useState9 = useState(result ? {\n    validated: true,\n    soil: result.soil\n  } : {\n    soil: null,\n    validated: false\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      soil = _useState10[0],\n      setSoil = _useState10[1];\n\n  var _useState11 = useState(result ? {\n    validated: !!result.family,\n    family: result.family\n  } : {\n    family: 0,\n    validated: false\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      family = _useState12[0],\n      setFamily = _useState12[1];\n\n  useEffect(function () {\n    Amplitude.logEventWithProperties(ampEvent.render, {\n      timestamp: Date.now()\n    });\n  }, []);\n\n  var updateBuses = function updateBuses(val) {\n    setBuses(function (prev) {\n      var ns = {\n        buses: val\n      };\n      ns.validated = Object.values(ns.buses).filter(function (p) {\n        return p;\n      }).length > 0;\n      return ns;\n    });\n  };\n\n  var submitEquipment = function submitEquipment() {\n    var params = {\n      buses: buses.buses,\n      speed: speed.speed,\n      pressure: pressure.pressure,\n      soil: soil.soil,\n      family: family.family\n    };\n    navigation.replace('LoadingScreen', {\n      next: 'main',\n      params: params,\n      action: storeEquipmentInformation\n    });\n  };\n\n  var buildList = function buildList() {\n    var soils = [\"SABLE\", \"SABLE_TERREAU\", \"TERREAU\", \"TERREAU_ARGILE\", \"ARGILE\", \"CRAIE\"];\n    var l = soils.map(function (p) {\n      return React.createElement(Picker.Item, {\n        key: p,\n        label: i18n.t(\"soils.\" + p),\n        value: p,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      });\n    });\n\n    if (Platform.OS === 'android') {\n      l.unshift(React.createElement(Picker.Item, {\n        key: 0,\n        label: i18n.t('soils.none'),\n        value: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }));\n    }\n\n    return l;\n  };\n\n  var buildFamilyList = function buildFamilyList() {\n    var soils = [\"CLASSIC_STD\", \"CLASSIC_LOW\", \"CALIBRATE\", \"INJECTION\"];\n    var l = soils.map(function (p) {\n      return React.createElement(Picker.Item, {\n        key: p,\n        label: i18n.t(\"equipment.buses_\" + p),\n        value: p,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      });\n    });\n\n    if (Platform.OS === 'android') {\n      l.unshift(React.createElement(Picker.Item, {\n        key: 0,\n        label: i18n.t('equipment.no_buse'),\n        value: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }));\n    }\n\n    return l;\n  };\n\n  var notifyAmplitude = function notifyAmplitude() {\n    Amplitude.logEventWithProperties(ampEvent.click_validate, {\n      timestamp: Date.now()\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.statusbar,\n    forceInset: {\n      top: 'always'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    translucent: true,\n    backgroundColor: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }), React.createElement(Content, {\n    contentContainerStyle: [{\n      backgroundColor: COLORS.DARK_BLUE,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: 'flex-end'\n    }, StyleSheet.absoluteFill],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, React.createElement(Header, {\n    style: styles.header,\n    androidStatusBarColor: COLORS.CYAN,\n    iosBarStyle: \"light-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, React.createElement(Left, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, result && React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, React.createElement(Icon, {\n    name: \"close\",\n    style: {\n      color: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }))), React.createElement(Body, {\n    style: styles.headerBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, React.createElement(Title, {\n    style: styles.headerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, i18n.t('equipment.header'))), React.createElement(Right, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  })), step === 'INIT' && React.createElement(Content, {\n    contentContainerStyle: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 14\n    }\n  }), React.createElement(Text, {\n    textAlign: \"center\",\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, i18n.t('equipment.title_notice')), React.createElement(Text, {\n    textAlign: \"center\",\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, i18n.t('equipment.text_notice')), React.createElement(View, {\n    style: {\n      flex: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.buttonView],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, React.createElement(HygoButton, {\n    onPress: function onPress() {\n      return setStep('SELECT');\n    },\n    label: i18n.t('button.next'),\n    icon: {\n      type: 'AntDesign',\n      name: 'arrowright',\n      fontSize: 26\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }))), step === 'SELECT' && React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, React.createElement(Content, {\n    contentContainerStyle: styles.containerSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, React.createElement(HygoCard, {\n    title: i18n.t('equipment.buses_family'),\n    validated: family.validated,\n    content: React.createElement(View, {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        paddingLeft: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, React.createElement(Picker, {\n      mode: \"dropdown\",\n      iosIcon: React.createElement(Icon, {\n        name: \"arrow-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 28\n        }\n      }),\n      placeholder: i18n.t('equipment.no_buse'),\n      itemTextStyle: {\n        flex: 1,\n        color: '#aaa',\n        fontSize: 16,\n        fontFamily: 'nunito-regular'\n      },\n      note: false,\n      placeholderStyle: {\n        color: \"#194769\"\n      },\n      headerBackButtonText: \"retour\",\n      placeholderIconColor: \"59DFD6\",\n      selectedValue: family.family,\n      onValueChange: function onValueChange(v) {\n        return setFamily(function (prev) {\n          return {\n            validated: !!v,\n            family: v\n          };\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, buildFamilyList())),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }), React.createElement(HygoCard, {\n    title: i18n.t('equipment.buses'),\n    validated: buses.validated,\n    content: React.createElement(View, {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        paddingTop: 36,\n        paddingBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    }, React.createElement(HygoPastille, {\n      onPress: function onPress() {\n        return updateBuses('orange');\n      },\n      style: {\n        flex: 1\n      },\n      color: \"#fc9a02\",\n      colorText: i18n.t('equipment.orange'),\n      checked: buses.buses === 'orange',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 19\n      }\n    }), React.createElement(HygoPastille, {\n      onPress: function onPress() {\n        return updateBuses('green');\n      },\n      style: {\n        flex: 1\n      },\n      color: \"#03cb01\",\n      colorText: i18n.t('equipment.green'),\n      checked: buses.buses === 'green',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 19\n      }\n    }), React.createElement(HygoPastille, {\n      onPress: function onPress() {\n        return updateBuses('yellow');\n      },\n      style: {\n        flex: 1\n      },\n      color: \"#feff02\",\n      colorText: i18n.t('equipment.yellow'),\n      checked: buses.buses === 'yellow',\n      dark: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 19\n      }\n    }), React.createElement(HygoPastille, {\n      onPress: function onPress() {\n        return updateBuses('lilas');\n      },\n      style: {\n        flex: 1\n      },\n      color: \"#9955bb\",\n      colorText: i18n.t('equipment.lilas'),\n      checked: buses.buses === 'lilas',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 19\n      }\n    })), React.createElement(View, {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }, React.createElement(HygoPastille, {\n      onPress: function onPress() {\n        return updateBuses('blue');\n      },\n      style: {\n        flex: 1\n      },\n      color: \"#33339d\",\n      colorText: i18n.t('equipment.blue'),\n      checked: buses.buses === 'blue',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 19\n      }\n    }), React.createElement(HygoPastille, {\n      onPress: function onPress() {\n        return updateBuses('red');\n      },\n      style: {\n        flex: 1\n      },\n      color: \"#fd0000\",\n      colorText: i18n.t('equipment.red'),\n      checked: buses.buses === 'red',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 19\n      }\n    }), React.createElement(HygoPastille, {\n      onPress: function onPress() {\n        return updateBuses('brown');\n      },\n      style: {\n        flex: 1\n      },\n      color: \"#9a6700\",\n      colorText: i18n.t('equipment.brown'),\n      checked: buses.buses === 'brown',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 19\n      }\n    }), React.createElement(HygoPastille, {\n      onPress: function onPress() {\n        return updateBuses('grey');\n      },\n      style: {\n        flex: 1\n      },\n      color: \"#969696\",\n      colorText: i18n.t('equipment.grey'),\n      checked: buses.buses === 'grey',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 19\n      }\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }), React.createElement(HygoCard, {\n    title: i18n.t('equipment.speed'),\n    validated: speed.validated,\n    content: React.createElement(View, {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        paddingLeft: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 15\n      }\n    }, React.createElement(HygoSlider, {\n      min: 0,\n      max: 35,\n      sliderLength: Dimensions.get('window').width - 36 - 20,\n      value: speed.speed,\n      updateValue: function updateValue(v) {\n        return setSpeed({\n          speed: v,\n          validated: v > 0\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }), React.createElement(HygoCard, {\n    title: i18n.t('equipment.pressure'),\n    validated: pressure.validated,\n    content: React.createElement(View, {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        paddingLeft: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 15\n      }\n    }, React.createElement(HygoSlider, {\n      min: 1,\n      max: 6,\n      increment: 0.5,\n      sliderLength: Dimensions.get('window').width - 36 - 20,\n      value: pressure.pressure,\n      updateValue: function updateValue(v) {\n        return setPressure({\n          pressure: v,\n          validated: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }), React.createElement(HygoCard, {\n    title: i18n.t('equipment.type_soil'),\n    validated: soil.validated,\n    content: React.createElement(View, {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        paddingLeft: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 15\n      }\n    }, React.createElement(Picker, {\n      mode: \"dropdown\",\n      iosIcon: React.createElement(Icon, {\n        name: \"arrow-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 28\n        }\n      }),\n      placeholder: i18n.t('soils.none'),\n      itemTextStyle: {\n        flex: 1,\n        color: '#aaa',\n        fontSize: 16,\n        fontFamily: 'nunito-regular'\n      },\n      note: false,\n      placeholderStyle: {\n        color: \"#194769\"\n      },\n      headerBackButtonText: \"retour\",\n      placeholderIconColor: \"59DFD6\",\n      selectedValue: soil.soil,\n      onValueChange: function onValueChange(v) {\n        return setSoil(function (prev) {\n          return {\n            validated: !!v,\n            soil: v\n          };\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, buildList())),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  })), speed.validated && pressure.validated && buses.validated && family.validated && React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 80\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 15\n    }\n  }), React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.buttonView],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }, React.createElement(HygoButton, {\n    onPress: function onPress() {\n      notifyAmplitude();\n      submitEquipment();\n    },\n    label: i18n.t('button.validate'),\n    icon: {\n      type: 'AntDesign',\n      name: 'arrowright',\n      fontSize: 26\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nvar styles = StyleSheet.create({\n  statusbar: {\n    backgroundColor: Platform.OS === 'ios' ? 'black' : \"transparent\",\n    flex: 1\n  },\n  header: {\n    backgroundColor: COLORS.CYAN\n  },\n  headerBody: {\n    flex: 6,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 20\n  },\n  statusbar: {\n    backgroundColor: 'black',\n    flex: 1\n  },\n  container: {\n    justifyContent: 'center',\n    flex: 1,\n    display: 'flex',\n    paddingLeft: 38,\n    paddingRight: 38,\n    alignItems: 'center',\n    backgroundColor: COLORS.BEIGE\n  },\n  containerSelect: {\n    justifyContent: 'flex-start',\n    flex: 1,\n    display: 'flex',\n    paddingLeft: 0,\n    paddingRight: 15,\n    backgroundColor: COLORS.BEIGE\n  },\n  title: {\n    color: COLORS.DARK_BLUE,\n    textAlign: 'center',\n    fontSize: 24,\n    flex: 1,\n    fontFamily: 'nunito-regular'\n  },\n  loading: {\n    color: COLORS.DARK_BLUE,\n    textAlign: 'center',\n    fontSize: 20,\n    fontFamily: 'nunito-regular'\n  },\n  text: {\n    color: COLORS.DARK_GREEN,\n    textAlign: 'center',\n    fontSize: 18,\n    flex: 1,\n    fontFamily: 'nunito-regular'\n  },\n  buttonView: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  },\n  cardTitle: {\n    textTransform: 'uppercase',\n    color: COLORS.CYAN,\n    fontFamily: 'nunito-bold',\n    fontSize: 14,\n    flex: 1\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EquipmentScreen);","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/EquipmentScreen.js"],"names":["React","useState","useEffect","SafeAreaView","connect","Content","Left","Right","Body","Title","Header","Button","Icon","Picker","COLORS","i18n","HygoButton","HygoCard","HygoPastille","HygoSlider","storeEquipmentInformation","Amplitude","AMPLITUDE_EVENTS","ampEvent","equipmentScreen","EquipmentScreen","navigation","result","getParam","step","setStep","validated","buses","setBuses","speed","setSpeed","pressure","setPressure","soil","setSoil","family","setFamily","logEventWithProperties","render","timestamp","Date","now","updateBuses","val","prev","ns","Object","values","filter","p","length","submitEquipment","params","replace","next","action","buildList","soils","l","map","t","Platform","OS","unshift","buildFamilyList","notifyAmplitude","click_validate","styles","statusbar","top","backgroundColor","DARK_BLUE","display","flexDirection","justifyContent","StyleSheet","absoluteFill","header","CYAN","flex","goBack","color","headerBody","headerTitle","container","title","text","buttonView","type","name","fontSize","containerSelect","paddingLeft","fontFamily","v","paddingTop","paddingBottom","alignItems","Dimensions","get","width","height","create","paddingRight","BEIGE","textAlign","loading","DARK_GREEN","cardTitle","textTransform","mapStateToProps","state","mapDispatchToProps","dispatch","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport { Dimensions, StyleSheet, View, Text, ScrollView, StatusBar } from 'react-native';\nimport { connect } from 'react-redux';\nimport { Content, Left, Right, Body, Title, Header, Button, Icon, Picker } from 'native-base';\n\nimport COLORS from '../colors';\nimport i18n from 'i18n-js';\n\nimport HygoButton from '../components/HygoButton'\nimport HygoCard from '../components/HygoCard'\nimport HygoPastille from '../components/HygoPastille'\n\nimport HygoSlider from '../components/HygoSlider'\n\nimport { storeEquipmentInformation } from '../api/hygoApi'\n\nimport {Amplitude, AMPLITUDE_EVENTS} from '../amplitude'\nconst {equipmentScreen: ampEvent} = AMPLITUDE_EVENTS\n\nconst EquipmentScreen = ({ navigation }) => {\n  let result = navigation.getParam('result')\n  const [step, setStep] = useState(result ? 'SELECT' : 'INIT')\n\n  const [buses, setBuses] = useState(result ? {\n    validated: true,\n    buses: result.buses\n  } : {\n    validated: false,\n    buses: null,\n  })\n\n  const [speed, setSpeed] = useState(result ? {\n    validated: true,\n    speed: result.speed\n  } : {\n    speed: 0,\n    validated: false\n  })\n\n  const [pressure, setPressure] = useState(result ? { \n    pressure: result.pressure,\n    validated: true\n  } : {\n    pressure: 1,\n    validated: false\n  })\n\n  const [soil, setSoil] = useState(result ? {\n    validated: true,\n    soil: result.soil\n  } : {\n    soil: null,\n    validated: false\n  })\n\n  const [family, setFamily] = useState(result ? {\n    validated: !!result.family,\n    family: result.family\n  } : {\n    family: 0,\n    validated: false\n  })\n\n  useEffect( () => {\n    // console.log(\"Amplitude : \", ampEvent.render)\n    Amplitude.logEventWithProperties(ampEvent.render, {\n      timestamp: Date.now()\n    })\n  }, [])\n\n  const updateBuses = (val) => {\n    setBuses(prev => {\n      let ns = { \n        buses: val, \n      }\n      ns.validated = Object.values(ns.buses).filter(p => p).length > 0\n      return ns\n    })\n  }\n\n  const submitEquipment = () => {\n    let params = {\n      buses: buses.buses,\n      speed: speed.speed,\n      pressure: pressure.pressure,\n      soil: soil.soil,\n      family: family.family,\n    }\n\n    navigation.replace('LoadingScreen', {\n      next: 'main',\n      params: params,\n      action: storeEquipmentInformation\n    })\n  }\n\n  const buildList = () => {\n    let soils = [\n      // \"SOIL_TEST\",\n      \"SABLE\",\n      \"SABLE_TERREAU\",\n      \"TERREAU\",\n      \"TERREAU_ARGILE\",\n      \"ARGILE\",\n      \"CRAIE\"\n    ]\n\n    let l = soils.map(p => {\n      return (\n        <Picker.Item key={p} label={i18n.t(`soils.${p}`)} value={p} />\n      )\n    })\n\n    if (Platform.OS === 'android') {\n      l.unshift(<Picker.Item key={0} label={i18n.t('soils.none')} value={null} />)\n    }\n\n    return l\n  }\n\n  const buildFamilyList = () => {\n    let soils = [\n      \"CLASSIC_STD\",\n      \"CLASSIC_LOW\",\n      \"CALIBRATE\",\n      \"INJECTION\",\n    ]\n\n    let l = soils.map(p => {\n      return (\n        <Picker.Item key={p} label={i18n.t(`equipment.buses_${p}`)} value={p} />\n      )\n    })\n\n    if (Platform.OS === 'android') {\n      l.unshift(<Picker.Item key={0} label={i18n.t('equipment.no_buse')} value={null} />)\n    }\n\n    return l\n  }\n\n  const notifyAmplitude = () => {\n    // console.log(\"Amplitude : \", ampEvent.click_validate)\n    Amplitude.logEventWithProperties(ampEvent.click_validate, {\n      timestamp: Date.now()\n    })\n  }\n\n  return (\n    <SafeAreaView style={styles.statusbar} forceInset={{top:'always'}}>\n      <StatusBar translucent backgroundColor=\"transparent\" />\n      <Content contentContainerStyle={[{backgroundColor: COLORS.DARK_BLUE, display:\"flex\",flexDirection:\"column\" ,justifyContent:'flex-end'}, StyleSheet.absoluteFill]}>\n        <Header style={styles.header} androidStatusBarColor={COLORS.CYAN} iosBarStyle=\"light-content\">\n          <Left style={{ flex: 1 }}>\n            { result && (\n              <Button transparent onPress={() => navigation.goBack()}>\n                <Icon name='close' style={{ color: '#fff' }} />\n              </Button>\n            )}\n          </Left>\n          <Body style={styles.headerBody}>\n            <Title style={styles.headerTitle}>{i18n.t('equipment.header')}</Title>\n          </Body>\n          <Right style={{ flex: 1 }}></Right>\n          </Header>\n           \n        {step === 'INIT' && (\n          <Content contentContainerStyle={styles.container}>\n             <View style={{ flex: 2 }} />\n            <Text textAlign=\"center\" style={styles.title}>{i18n.t('equipment.title_notice')}</Text>\n            <Text textAlign=\"center\" style={styles.text}>{i18n.t('equipment.text_notice')}</Text>\n            <View style={{ flex: 2 }} />\n\n            <View style={[StyleSheet.absoluteFill, styles.buttonView]}>\n              <HygoButton onPress={() => setStep('SELECT')} label={i18n.t('button.next')} icon={{\n                type: 'AntDesign',\n                name: 'arrowright',\n                fontSize: 26\n              }} />\n            </View>\n          </Content>\n        )}\n\n      { step === 'SELECT' && (\n        <ScrollView>\n          <Content contentContainerStyle={styles.containerSelect}>\n            <HygoCard title={i18n.t('equipment.buses_family')} validated={family.validated} content={(\n              <View style={{ display: 'flex', flexDirection: 'column', paddingLeft: 10 }}>\n                <Picker\n                  mode=\"dropdown\"\n                  iosIcon={<Icon name=\"arrow-down\" />}\n                  placeholder={i18n.t('equipment.no_buse')}\n                  itemTextStyle={{\n                    flex: 1,\n                    color: '#aaa',\n                    fontSize: 16,\n                    fontFamily: 'nunito-regular',\n                  }}\n                  note={false}\n                  placeholderStyle={{ color: \"#194769\" }}\n                  headerBackButtonText='retour'\n                  placeholderIconColor=\"59DFD6\"\n                  selectedValue={family.family}\n                  onValueChange={(v) => setFamily(prev => {\n                    return {\n                      validated: !!v,\n                      family: v,\n                    }\n                  })}>\n                  { buildFamilyList() }\n                </Picker>\n              </View>\n            )} />\n\n            <HygoCard title={i18n.t('equipment.buses')} validated={buses.validated} content={(\n              <View style={{ display: 'flex', flexDirection: 'column', paddingTop: 36, paddingBottom: 16 }}>\n                <View style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                  <HygoPastille onPress={() => updateBuses('orange')} style={{ flex: 1}} color='#fc9a02' colorText={i18n.t('equipment.orange')} checked={buses.buses === 'orange'} />\n                  <HygoPastille onPress={() => updateBuses('green')} style={{ flex: 1}} color='#03cb01' colorText={i18n.t('equipment.green')} checked={buses.buses === 'green'} />\n                  <HygoPastille onPress={() => updateBuses('yellow')} style={{ flex: 1}} color='#feff02' colorText={i18n.t('equipment.yellow')} checked={buses.buses === 'yellow'} dark />\n                  <HygoPastille onPress={() => updateBuses('lilas')} style={{ flex: 1}} color='#9955bb' colorText={i18n.t('equipment.lilas')} checked={buses.buses === 'lilas'} />\n                </View>\n                <View style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                  <HygoPastille onPress={() => updateBuses('blue')} style={{ flex: 1}} color='#33339d' colorText={i18n.t('equipment.blue')} checked={buses.buses === 'blue'} />\n                  <HygoPastille onPress={() => updateBuses('red')} style={{ flex: 1}} color='#fd0000' colorText={i18n.t('equipment.red')} checked={buses.buses === 'red'} />\n                  <HygoPastille onPress={() => updateBuses('brown')} style={{ flex: 1}} color='#9a6700' colorText={i18n.t('equipment.brown')} checked={buses.buses === 'brown'} />\n                  <HygoPastille onPress={() => updateBuses('grey')} style={{ flex: 1}} color='#969696' colorText={i18n.t('equipment.grey')} checked={buses.buses === 'grey'} />\n                </View>\n              </View>\n            )} />\n\n            <HygoCard title={i18n.t('equipment.speed')} validated={speed.validated} content={(\n              <View style={{ display: 'flex', flexDirection: 'column', paddingLeft: 0 }}>\n                <HygoSlider\n                  min={0}\n                  max={35}\n                  sliderLength={Dimensions.get('window').width - 36 - 20}\n                  value={speed.speed}\n                  updateValue={(v) => setSpeed({\n                    speed: v,\n                    validated: v > 0\n                  })}\n                />\n              </View>\n            )} />\n\n            <HygoCard title={i18n.t('equipment.pressure')} validated={pressure.validated} content={(\n              <View style={{ display: 'flex', flexDirection: 'column', paddingLeft: 0 }}>\n                <HygoSlider\n                  min={1}\n                  max={6}\n                  increment={0.5}\n                  sliderLength={Dimensions.get('window').width - 36 - 20}\n                  value={pressure.pressure}\n                  updateValue={(v) => setPressure({\n                    pressure: v,\n                    validated: true\n                  })}\n                />\n              </View>\n            )} />\n\n            <HygoCard title={i18n.t('equipment.type_soil')} validated={soil.validated} content={(\n              <View style={{ display: 'flex', flexDirection: 'column', paddingLeft: 10 }}>\n                <Picker\n                  mode=\"dropdown\"\n                  iosIcon={<Icon name=\"arrow-down\" />}\n                  placeholder={i18n.t('soils.none')}\n                  itemTextStyle={{\n                    flex: 1,\n                    color: '#aaa',\n                    fontSize: 16,\n                    fontFamily: 'nunito-regular',\n                  }}\n                  note={false}\n                  placeholderStyle={{ color: \"#194769\" }}\n                  headerBackButtonText ='retour'\n                  placeholderIconColor=\"59DFD6\"\n                  selectedValue={soil.soil}\n                  onValueChange={(v) => setSoil(prev => {\n                    return {\n                      validated: !!v,\n                      soil: v,\n                    }\n                  })}>\n                  { buildList() }\n                </Picker>\n              </View>\n            )} />\n\n\n          </Content>\n          { speed.validated && pressure.validated && buses.validated && family.validated && (\n            <View>\n              <View style={{ height: 80 }} />\n              <View style={[StyleSheet.absoluteFill, styles.buttonView]}>\n                <HygoButton onPress={() => {notifyAmplitude(); submitEquipment()}} label={i18n.t('button.validate')} icon={{\n                  type: 'AntDesign',\n                  name: 'arrowright',\n                  fontSize: 26\n                }} />\n              </View>\n            </View>\n          )}\n        </ScrollView>\n      )}\n      </Content>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  statusbar: { \n    backgroundColor: Platform.OS === 'ios' ? 'black' : \"transparent\",\n    flex: 1 \n  },\n  header: {\n    backgroundColor: COLORS.CYAN\n  },\n  headerBody: {\n    flex: 6,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 20\n  },  \n  statusbar: { backgroundColor: 'black', flex: 1 },\n  container: { justifyContent: 'center', flex: 1, display: 'flex', paddingLeft: 38, paddingRight: 38, alignItems: 'center', backgroundColor: COLORS.BEIGE },\n  containerSelect: { justifyContent: 'flex-start', flex: 1, display: 'flex', paddingLeft: 0, paddingRight: 15, backgroundColor: COLORS.BEIGE },\n  title: {\n    color: COLORS.DARK_BLUE,\n    textAlign: 'center',\n    fontSize: 24,\n    flex: 1,\n    fontFamily: 'nunito-regular'\n  },\n  loading: {\n    color: COLORS.DARK_BLUE,\n    textAlign: 'center',\n    fontSize: 20,\n    fontFamily: 'nunito-regular'\n  },\n  text: {\n    color: COLORS.DARK_GREEN,\n    textAlign: 'center',\n    fontSize: 18,\n    flex: 1,\n    fontFamily: 'nunito-regular'\n  },\n  buttonView: { \n    display: 'flex', \n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center', \n    justifyContent: 'flex-end' \n  },\n  cardTitle: {\n    textTransform: 'uppercase',\n    color: COLORS.CYAN,\n    fontFamily: 'nunito-bold',\n    fontSize: 14,\n    flex: 1\n  }\n});\n\nconst mapStateToProps = (state) => ({\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({})\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(EquipmentScreen);\n"]},"metadata":{},"sourceType":"module"}