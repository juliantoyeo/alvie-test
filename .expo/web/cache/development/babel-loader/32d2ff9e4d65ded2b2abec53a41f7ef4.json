{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport getUserAgent from \"./getUserAgent\";\nimport { VERSION } from \"../constants\";\nimport _ from 'lodash';\nimport { CONDITIONS_ORDERING } from \"../constants\";\nexport var hygoApi = axios.create({\n  baseURL: 'http://192.168.43.29:3000',\n  timeout: 30000,\n  headers: {\n    'User-Agent': getUserAgent()\n  }\n});\nhygoApi.interceptors.request.use(function _callee(config) {\n  var token;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n        case 2:\n          token = _context.sent;\n          config.headers.Authorization = \"Bearer \" + (token || '');\n          return _context.abrupt(\"return\", config);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n});\nexport var storeAppLocation = function storeAppLocation(data) {\n  return _regeneratorRuntime.async(function storeAppLocation$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/location', _objectSpread({}, data)));\n\n        case 3:\n          _context2.next = 8;\n          break;\n\n        case 5:\n          _context2.prev = 5;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\nexport var updateUI = function updateUI(phytoProduct) {\n  var res;\n  return _regeneratorRuntime.async(function updateUI$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/ui', {\n            phytoProduct: phytoProduct\n          }));\n\n        case 3:\n          res = _context3.sent;\n          return _context3.abrupt(\"return\", res.data);\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var updateUIPhytoProduct = function updateUIPhytoProduct(phytoProducts) {\n  var res;\n  return _regeneratorRuntime.async(function updateUIPhytoProduct$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/ui', {\n            phytoProducts: phytoProducts,\n            timestamp: new Date().getTime()\n          }));\n\n        case 3:\n          res = _context4.sent;\n          return _context4.abrupt(\"return\", res.data);\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n\n        case 10:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var updateUICultures = function updateUICultures(cultures) {\n  var res;\n  return _regeneratorRuntime.async(function updateUICultures$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/ui', {\n            cultures: cultures,\n            timestamp: new Date().getTime()\n          }));\n\n        case 3:\n          res = _context5.sent;\n          return _context5.abrupt(\"return\", res.data);\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n\n        case 10:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var getActiveProducts = function getActiveProducts() {\n  var response;\n  return _regeneratorRuntime.async(function getActiveProducts$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.get('/app/activeproducts'));\n\n        case 3:\n          response = _context6.sent;\n          return _context6.abrupt(\"return\", response.data);\n\n        case 7:\n          _context6.prev = 7;\n          _context6.t0 = _context6[\"catch\"](0);\n          return _context6.abrupt(\"return\", []);\n\n        case 10:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var getPhytoProducts = function getPhytoProducts() {\n  var _await$hygoApi$get, data;\n\n  return _regeneratorRuntime.async(function getPhytoProducts$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.get('/app/phytoproducts'));\n\n        case 3:\n          _await$hygoApi$get = _context7.sent;\n          data = _await$hygoApi$get.data;\n          return _context7.abrupt(\"return\", data);\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.log(_context7.t0);\n\n        case 11:\n          return _context7.abrupt(\"return\", []);\n\n        case 12:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\nexport var checkToken = function checkToken(token) {\n  var response, _response$data, userName, familyName, deviceid, deviceType, hasEquipment;\n\n  return _regeneratorRuntime.async(function checkToken$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          if (token) {\n            _context8.next = 2;\n            break;\n          }\n\n          return _context8.abrupt(\"return\", {\n            errorMessage: 'NO_TOKEN'\n          });\n\n        case 2:\n          _context8.prev = 2;\n          _context8.next = 5;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/auth/token', {\n            token: token\n          }));\n\n        case 5:\n          response = _context8.sent;\n          _response$data = response.data, userName = _response$data.userName, familyName = _response$data.familyName, deviceid = _response$data.deviceid, deviceType = _response$data.deviceType, hasEquipment = _response$data.hasEquipment;\n          return _context8.abrupt(\"return\", {\n            errorMessage: '',\n            userName: userName,\n            familyName: familyName,\n            deviceid: deviceid,\n            deviceType: deviceType,\n            hasEquipment: hasEquipment\n          });\n\n        case 10:\n          _context8.prev = 10;\n          _context8.t0 = _context8[\"catch\"](2);\n          return _context8.abrupt(\"return\", {\n            errorMessage: 'INVALID_TOKEN'\n          });\n\n        case 13:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, [[2, 10]], Promise);\n};\nexport var signInWithBarCode = function signInWithBarCode(barcode) {\n  var response, _response$data2, token, userName, familyName, deviceid, deviceType, hasEquipment;\n\n  return _regeneratorRuntime.async(function signInWithBarCode$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/auth/barcode', {\n            barcode: barcode\n          }));\n\n        case 3:\n          response = _context9.sent;\n          _response$data2 = response.data, token = _response$data2.token, userName = _response$data2.userName, familyName = _response$data2.familyName, deviceid = _response$data2.deviceid, deviceType = _response$data2.deviceType, hasEquipment = _response$data2.hasEquipment;\n          return _context9.abrupt(\"return\", {\n            token: token,\n            userName: userName,\n            familyName: familyName,\n            deviceid: deviceid,\n            deviceType: deviceType,\n            hasEquipment: hasEquipment,\n            errorMessage: ''\n          });\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.log(_context9.t0);\n\n          if (!_context9.t0.message.trim().match(/^Network Error/)) {\n            _context9.next = 15;\n            break;\n          }\n\n          return _context9.abrupt(\"return\", {\n            errorMessage: 'NETWORK_ERROR'\n          });\n\n        case 15:\n          return _context9.abrupt(\"return\", {\n            errorMessage: 'SIGNIN_ERROR'\n          });\n\n        case 16:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\nexport var storePushToken = function storePushToken(token, deviceid) {\n  var response;\n  return _regeneratorRuntime.async(function storePushToken$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          _context10.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/pushtoken', {\n            pushToken: token,\n            deviceid: deviceid\n          }));\n\n        case 3:\n          response = _context10.sent;\n          return _context10.abrupt(\"return\", response.data);\n\n        case 7:\n          _context10.prev = 7;\n          _context10.t0 = _context10[\"catch\"](0);\n          return _context10.abrupt(\"return\", {});\n\n        case 10:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var storeEquipmentInformation = function storeEquipmentInformation(_ref) {\n  var buses, speed, pressure, soil, family, response;\n  return _regeneratorRuntime.async(function storeEquipmentInformation$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          buses = _ref.buses, speed = _ref.speed, pressure = _ref.pressure, soil = _ref.soil, family = _ref.family;\n          _context11.prev = 1;\n          _context11.next = 4;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/equipment', {\n            buses: buses,\n            speed: speed,\n            pressure: pressure,\n            soil: soil,\n            family: family\n          }));\n\n        case 4:\n          response = _context11.sent;\n          return _context11.abrupt(\"return\", response.data);\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](1);\n          return _context11.abrupt(\"return\", {});\n\n        case 11:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\nexport var getEquipment = function getEquipment() {\n  var response;\n  return _regeneratorRuntime.async(function getEquipment$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.prev = 0;\n          _context12.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.get('/app/equipment'));\n\n        case 3:\n          response = _context12.sent;\n          return _context12.abrupt(\"return\", response.data);\n\n        case 7:\n          _context12.prev = 7;\n          _context12.t0 = _context12[\"catch\"](0);\n          return _context12.abrupt(\"return\", {});\n\n        case 10:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var getMeteo = function getMeteo() {\n  var response;\n  return _regeneratorRuntime.async(function getMeteo$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/meteo', {}));\n\n        case 3:\n          response = _context13.sent;\n          return _context13.abrupt(\"return\", response.data);\n\n        case 7:\n          _context13.prev = 7;\n          _context13.t0 = _context13[\"catch\"](0);\n          return _context13.abrupt(\"return\", {});\n\n        case 10:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var getMeteoDetailed = function getMeteoDetailed(_ref2) {\n  var day, product, response;\n  return _regeneratorRuntime.async(function getMeteoDetailed$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          day = _ref2.day, product = _ref2.product;\n          _context14.prev = 1;\n          _context14.next = 4;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/meteo/detailed', {\n            day: day,\n            product: product\n          }));\n\n        case 4:\n          response = _context14.sent;\n          return _context14.abrupt(\"return\", response.data);\n\n        case 8:\n          _context14.prev = 8;\n          _context14.t0 = _context14[\"catch\"](1);\n          return _context14.abrupt(\"return\", {});\n\n        case 11:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\nexport var getMeteoDetailed_v2 = function getMeteoDetailed_v2(day, fields) {\n  var response;\n  return _regeneratorRuntime.async(function getMeteoDetailed_v2$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          _context15.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/meteo/detailed/v2', {\n            day: day,\n            fields: fields\n          }));\n\n        case 3:\n          response = _context15.sent;\n          return _context15.abrupt(\"return\", response.data);\n\n        case 7:\n          _context15.prev = 7;\n          _context15.t0 = _context15[\"catch\"](0);\n          return _context15.abrupt(\"return\", {\n            meteoByHour: [],\n            meteoBy4Hour: []\n          });\n\n        case 10:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var getMetrics_v2 = function getMetrics_v2(_ref3) {\n  var day, fields, response;\n  return _regeneratorRuntime.async(function getMetrics_v2$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          day = _ref3.day, fields = _ref3.fields;\n          _context16.prev = 1;\n          _context16.next = 4;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/meteo/detailed/v3', {\n            day: day,\n            fields: fields\n          }));\n\n        case 4:\n          response = _context16.sent;\n          return _context16.abrupt(\"return\", response.data);\n\n        case 8:\n          _context16.prev = 8;\n          _context16.t0 = _context16[\"catch\"](1);\n          return _context16.abrupt(\"return\", []);\n\n        case 11:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\nexport var getConditions_v2 = function getConditions_v2(data) {\n  var products, parcelles, day, response, conditions, ret;\n  return _regeneratorRuntime.async(function getConditions_v2$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.prev = 0;\n          products = data.products, parcelles = data.parcelles, day = data.day;\n          _context17.next = 4;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/meteo/condition/v2', {\n            products: products,\n            parcelles: parcelles,\n            day: day\n          }));\n\n        case 4:\n          response = _context17.sent;\n          conditions = response.data.map(function (_ref4) {\n            var condition = _ref4.condition,\n                parcelleId = _ref4.parcelleId,\n                productId = _ref4.productId,\n                timestamp = _ref4.timestamp;\n            return {\n              condition: condition,\n              parcelleId: parcelleId,\n              productId: productId,\n              timestamp: timestamp\n            };\n          });\n          ret = _(conditions).groupBy(function (x) {\n            return x.timestamp;\n          }).sortBy(function (v) {\n            return v.timestamp;\n          }).map(function (value, key) {\n            return Math.min.apply(Math, _toConsumableArray(value.map(function (v) {\n              return CONDITIONS_ORDERING[v.condition];\n            })));\n          }).value();\n          return _context17.abrupt(\"return\", ret);\n\n        case 10:\n          _context17.prev = 10;\n          _context17.t0 = _context17[\"catch\"](0);\n          return _context17.abrupt(\"return\", []);\n\n        case 13:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};\nexport var getMeteoIntervention = function getMeteoIntervention(_ref5) {\n  var products, cultures, response;\n  return _regeneratorRuntime.async(function getMeteoIntervention$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          products = _ref5.products, cultures = _ref5.cultures;\n\n          if (!(products.length === 0 || cultures.length === 0)) {\n            _context18.next = 3;\n            break;\n          }\n\n          return _context18.abrupt(\"return\", {});\n\n        case 3:\n          _context18.prev = 3;\n          _context18.next = 6;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/meteo/intervention', {\n            products: products,\n            cultures: cultures\n          }));\n\n        case 6:\n          response = _context18.sent;\n          return _context18.abrupt(\"return\", response.data);\n\n        case 10:\n          _context18.prev = 10;\n          _context18.t0 = _context18[\"catch\"](3);\n          return _context18.abrupt(\"return\", {});\n\n        case 13:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, null, null, [[3, 10]], Promise);\n};\nexport var getModulationValue = function getModulationValue(data) {\n  var response;\n  return _regeneratorRuntime.async(function getModulationValue$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.prev = 0;\n          _context19.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/modulation', _objectSpread({}, data)));\n\n        case 3:\n          response = _context19.sent;\n          return _context19.abrupt(\"return\", response.data);\n\n        case 7:\n          _context19.prev = 7;\n          _context19.t0 = _context19[\"catch\"](0);\n          return _context19.abrupt(\"return\", {});\n\n        case 10:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var getModulationValue_v2 = function getModulationValue_v2(data) {\n  var response;\n  return _regeneratorRuntime.async(function getModulationValue_v2$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.prev = 0;\n          _context20.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/modulation/v2', _objectSpread({}, data)));\n\n        case 3:\n          response = _context20.sent;\n          return _context20.abrupt(\"return\", response.data);\n\n        case 7:\n          _context20.prev = 7;\n          _context20.t0 = _context20[\"catch\"](0);\n          return _context20.abrupt(\"return\", []);\n\n        case 10:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var getModulationList = function getModulationList(data) {\n  var response;\n  return _regeneratorRuntime.async(function getModulationList$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.prev = 0;\n          _context21.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/modulationList', _objectSpread({}, data)));\n\n        case 3:\n          response = _context21.sent;\n          return _context21.abrupt(\"return\", response.data.modulationList);\n\n        case 7:\n          _context21.prev = 7;\n          _context21.t0 = _context21[\"catch\"](0);\n          return _context21.abrupt(\"return\", []);\n\n        case 10:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var getInterventions = function getInterventions() {\n  var response;\n  return _regeneratorRuntime.async(function getInterventions$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          _context22.prev = 0;\n          _context22.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/interventions', {}));\n\n        case 3:\n          response = _context22.sent;\n          return _context22.abrupt(\"return\", {\n            interventionValues: response.data\n          });\n\n        case 7:\n          _context22.prev = 7;\n          _context22.t0 = _context22[\"catch\"](0);\n          return _context22.abrupt(\"return\", {\n            interventionValues: []\n          });\n\n        case 10:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var getInterventionByID = function getInterventionByID(_ref6) {\n  var id, response;\n  return _regeneratorRuntime.async(function getInterventionByID$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          id = _ref6.id;\n          _context23.prev = 1;\n          _context23.next = 4;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/interventions/details', {\n            id: id\n          }));\n\n        case 4:\n          response = _context23.sent;\n          return _context23.abrupt(\"return\", response.data);\n\n        case 8:\n          _context23.prev = 8;\n          _context23.t0 = _context23[\"catch\"](1);\n          return _context23.abrupt(\"return\", {\n            intervention: {}\n          });\n\n        case 11:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\nexport var getRealtimeData = function getRealtimeData(phytoProductSelected) {\n  var response;\n  return _regeneratorRuntime.async(function getRealtimeData$(_context24) {\n    while (1) {\n      switch (_context24.prev = _context24.next) {\n        case 0:\n          _context24.prev = 0;\n          _context24.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/realtime', {\n            products: phytoProductSelected\n          }));\n\n        case 3:\n          response = _context24.sent;\n          return _context24.abrupt(\"return\", response.data);\n\n        case 7:\n          _context24.prev = 7;\n          _context24.t0 = _context24[\"catch\"](0);\n          return _context24.abrupt(\"return\", {});\n\n        case 10:\n        case \"end\":\n          return _context24.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var getFields = function getFields() {\n  var response;\n  return _regeneratorRuntime.async(function getFields$(_context25) {\n    while (1) {\n      switch (_context25.prev = _context25.next) {\n        case 0:\n          _context25.prev = 0;\n          _context25.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.get('/app/fields'));\n\n        case 3:\n          response = _context25.sent;\n          return _context25.abrupt(\"return\", response.data);\n\n        case 7:\n          _context25.prev = 7;\n          _context25.t0 = _context25[\"catch\"](0);\n          return _context25.abrupt(\"return\", {});\n\n        case 10:\n        case \"end\":\n          return _context25.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var getFields_v2 = function getFields_v2() {\n  var response;\n  return _regeneratorRuntime.async(function getFields_v2$(_context26) {\n    while (1) {\n      switch (_context26.prev = _context26.next) {\n        case 0:\n          _context26.prev = 0;\n          _context26.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.get('/app/fields/v2'));\n\n        case 3:\n          response = _context26.sent;\n          return _context26.abrupt(\"return\", response.data);\n\n        case 7:\n          _context26.prev = 7;\n          _context26.t0 = _context26[\"catch\"](0);\n          return _context26.abrupt(\"return\", {});\n\n        case 10:\n        case \"end\":\n          return _context26.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var getCultures = function getCultures() {\n  var response;\n  return _regeneratorRuntime.async(function getCultures$(_context27) {\n    while (1) {\n      switch (_context27.prev = _context27.next) {\n        case 0:\n          _context27.prev = 0;\n          _context27.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.get('/app/cultures'));\n\n        case 3:\n          response = _context27.sent;\n          return _context27.abrupt(\"return\", response.data);\n\n        case 7:\n          _context27.prev = 7;\n          _context27.t0 = _context27[\"catch\"](0);\n          return _context27.abrupt(\"return\", {});\n\n        case 10:\n        case \"end\":\n          return _context27.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var getMeteoRadar = function getMeteoRadar() {\n  var response;\n  return _regeneratorRuntime.async(function getMeteoRadar$(_context28) {\n    while (1) {\n      switch (_context28.prev = _context28.next) {\n        case 0:\n          _context28.prev = 0;\n          _context28.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.get('/app/radar'));\n\n        case 3:\n          response = _context28.sent;\n          return _context28.abrupt(\"return\", response.data);\n\n        case 7:\n          _context28.prev = 7;\n          _context28.t0 = _context28[\"catch\"](0);\n          return _context28.abrupt(\"return\", {});\n\n        case 10:\n        case \"end\":\n          return _context28.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var updateIntervention = function updateIntervention(products, interventionid) {\n  var response;\n  return _regeneratorRuntime.async(function updateIntervention$(_context29) {\n    while (1) {\n      switch (_context29.prev = _context29.next) {\n        case 0:\n          _context29.prev = 0;\n          _context29.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/interventions/update', {\n            products: products,\n            interventionid: interventionid\n          }));\n\n        case 3:\n          response = _context29.sent;\n          return _context29.abrupt(\"return\", response.data);\n\n        case 7:\n          _context29.prev = 7;\n          _context29.t0 = _context29[\"catch\"](0);\n          return _context29.abrupt(\"return\", {});\n\n        case 10:\n        case \"end\":\n          return _context29.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var deleteIntervention = function deleteIntervention(interventionid) {\n  var response;\n  return _regeneratorRuntime.async(function deleteIntervention$(_context30) {\n    while (1) {\n      switch (_context30.prev = _context30.next) {\n        case 0:\n          _context30.prev = 0;\n          _context30.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/interventions/delete', {\n            id: interventionid\n          }));\n\n        case 3:\n          response = _context30.sent;\n          return _context30.abrupt(\"return\", response.data);\n\n        case 7:\n          _context30.prev = 7;\n          _context30.t0 = _context30[\"catch\"](0);\n          return _context30.abrupt(\"return\", {});\n\n        case 10:\n        case \"end\":\n          return _context30.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var createIntervention = function createIntervention() {\n  var response;\n  return _regeneratorRuntime.async(function createIntervention$(_context31) {\n    while (1) {\n      switch (_context31.prev = _context31.next) {\n        case 0:\n          _context31.prev = 0;\n          _context31.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/interventions/create'));\n\n        case 3:\n          response = _context31.sent;\n          return _context31.abrupt(\"return\", response.data);\n\n        case 7:\n          _context31.prev = 7;\n          _context31.t0 = _context31[\"catch\"](0);\n          return _context31.abrupt(\"return\", {});\n\n        case 10:\n        case \"end\":\n          return _context31.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var checkSetup = function checkSetup() {\n  var response;\n  return _regeneratorRuntime.async(function checkSetup$(_context32) {\n    while (1) {\n      switch (_context32.prev = _context32.next) {\n        case 0:\n          _context32.prev = 0;\n          _context32.next = 3;\n          return _regeneratorRuntime.awrap(hygoApi.post('/app/checkSetup', {\n            version: VERSION\n          }));\n\n        case 3:\n          response = _context32.sent;\n          return _context32.abrupt(\"return\", response.data);\n\n        case 7:\n          _context32.prev = 7;\n          _context32.t0 = _context32[\"catch\"](0);\n          console.log(_context32.t0);\n          return _context32.abrupt(\"return\", {});\n\n        case 11:\n        case \"end\":\n          return _context32.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/api/hygoApi.tsx"],"names":["axios","getUserAgent","VERSION","_","CONDITIONS_ORDERING","hygoApi","create","baseURL","timeout","headers","interceptors","request","use","config","AsyncStorage","getItem","token","Authorization","storeAppLocation","data","post","console","log","updateUI","phytoProduct","res","updateUIPhytoProduct","phytoProducts","timestamp","Date","getTime","updateUICultures","cultures","getActiveProducts","get","response","getPhytoProducts","checkToken","errorMessage","userName","familyName","deviceid","deviceType","hasEquipment","signInWithBarCode","barcode","message","trim","match","storePushToken","pushToken","storeEquipmentInformation","buses","speed","pressure","soil","family","getEquipment","getMeteo","getMeteoDetailed","day","product","getMeteoDetailed_v2","fields","meteoByHour","meteoBy4Hour","getMetrics_v2","getConditions_v2","products","parcelles","conditions","map","condition","parcelleId","productId","ret","groupBy","x","sortBy","v","value","key","Math","min","getMeteoIntervention","length","getModulationValue","getModulationValue_v2","getModulationList","modulationList","getInterventions","interventionValues","getInterventionByID","id","intervention","getRealtimeData","phytoProductSelected","getFields","getFields_v2","getCultures","getMeteoRadar","updateIntervention","interventionid","deleteIntervention","createIntervention","checkSetup","version"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { AsyncStorage } from 'react-native';\nimport getUserAgent from './getUserAgent';\nimport { VERSION } from '../constants';\n\nimport { fieldType } from '../types/field.types';\nimport { errorType } from '../types/error.types';\nimport { activeProductType } from '../types/activeproduct.types';\nimport {meteoByHourType, meteoDataType} from '../types/meteo.types';\nimport { modulationType} from '../types/modulation.types';\nimport { conditionType } from '../types/condition.types'\nimport _ from 'lodash';\n\nimport { CONDITIONS_ORDERING, CONDITIONS } from '../constants';\n\nexport const hygoApi = axios.create({\n    baseURL: 'http://192.168.43.29:3000',  //'http://192.168.1.35:3000',//'https://hygo-api.alvie.fr', //\n    timeout: 30000,\n    headers: {\n        'User-Agent': getUserAgent()\n    },\n});\n\n// Add a request interceptor\nhygoApi.interceptors.request.use(async (config) => {\n    const token = await AsyncStorage.getItem('token');\n    config.headers.Authorization = `Bearer ${token || ''}`;\n    return config;\n});\n\n// Store device position\nexport const storeAppLocation = async (data) => {\n    try {\n        await hygoApi.post('/app/location', { ...data });\n    } catch (e) {\n        console.log(e)\n    }\n}\n\n// Store phytoproduct changes\nexport const updateUI = async (phytoProduct) => {\n    try {\n        const res = await hygoApi.post('/app/ui', { phytoProduct });\n        return res.data\n    } catch (e) {\n        console.log(e)\n    }\n}\n\n// Store phytoproducts changes\nexport const updateUIPhytoProduct = async (phytoProducts) => {\n    try {\n        const res = await hygoApi.post('/app/ui', { phytoProducts, timestamp: (new Date()).getTime() });\n        return res.data\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nexport const updateUICultures = async (cultures) => {\n    try {\n        const res = await hygoApi.post('/app/ui', { cultures, timestamp: (new Date()).getTime() });\n        return res.data\n    } catch (e) {\n        console.log(e)\n    }\n}\n\n// Retrieve active products list\nexport interface getActiveProductsReturnType {\n    products?: Array<activeProductType>\n}\nexport const getActiveProducts = async (): Promise<Array<activeProductType>> => {\n    try {\n        const response = await hygoApi.get('/app/activeproducts');\n        return response.data\n    } catch (error) {\n        return []\n    }\n}\n\n// Retrieve phytoproduct list\nexport const getPhytoProducts = async () => {\n    try {\n        const { data } = await hygoApi.get('/app/phytoproducts')\n        return data\n    } catch (e) { console.log(e) }\n\n    return []\n}\n\n// Check if token is valid\nexport const checkToken = async (token) => {\n    if (!token) {\n        return {\n            errorMessage: 'NO_TOKEN',\n        };\n    }\n\n    try {\n        const response = await hygoApi.post('/app/auth/token', { token });\n\n        const { userName, familyName, deviceid, deviceType, hasEquipment } = response.data\n        return {\n            errorMessage: '',\n            userName, familyName, deviceid, deviceType, hasEquipment\n        }\n    } catch (err) {\n        return {\n            errorMessage: 'INVALID_TOKEN',\n        };\n    }\n}\n\n// SignIn using a barcode\nexport const signInWithBarCode = async (barcode) => {\n    try {\n        const response = await hygoApi.post('/app/auth/barcode', { barcode });\n\n        const { token, userName, familyName, deviceid, deviceType, hasEquipment } = response.data\n        return {\n            token, userName, familyName, deviceid, deviceType, hasEquipment,\n            errorMessage: ''\n        };\n    } catch (err) {\n        console.log(err);\n        if (err.message.trim().match(/^Network Error/)) {\n            return {\n                errorMessage: 'NETWORK_ERROR'\n            }\n        } else {\n            return {\n                errorMessage: 'SIGNIN_ERROR'\n            };\n        }\n\n    }\n}\n\n// Store a new pushToken for this device\nexport const storePushToken = async (token, deviceid) => {\n    try {\n        const response = await hygoApi.post('/app/pushtoken', { pushToken: token, deviceid });\n        return response.data;\n    } catch (error) {\n        return {}\n    }\n}\n\n// Save equipments\nexport const storeEquipmentInformation = async ({ buses, speed, pressure, soil, family }) => {\n    try {\n        const response = await hygoApi.post('/app/equipment', { buses, speed, pressure, soil, family });\n        return response.data;\n    } catch (error) {\n        return {}\n    }\n}\nexport const getEquipment = async () => {\n    try {\n        const response = await hygoApi.get('/app/equipment')\n        return response.data\n    } catch (error) {\n        return {}\n    }\n}\n\n// Retrieve next 3 hours meteo\nexport const getMeteo = async () => {\n    try {\n        const response = await hygoApi.post('/app/meteo', {})\n        return response.data\n    } catch (error) {\n        return {}\n    }\n}\n\n// Retrieve detailed meteo\nexport const getMeteoDetailed = async ({ day, product }) => {\n    try {\n        const response = await hygoApi.post('/app/meteo/detailed', { day, product })\n        return response.data\n    } catch (error) {\n        return {}\n    }\n}\n\nexport const getMeteoDetailed_v2 = async (day: string, fields:Array<fieldType>): Promise<meteoDataType> => {\n    /**\n     * Retrieve meteo by hour and meteo by 4 hour of the day over the givenFields\n     * faster than getMeteoDetailed\n     * @param day = \"2020-09-09\"\n     */\n    try {\n        const response = await hygoApi.post('/app/meteo/detailed/v2', { day, fields })\n        return response.data\n    } catch (error) {\n        return {\n            meteoByHour: [],\n            meteoBy4Hour: []\n        }\n    }\n}\n\ntype metricsType = any\nexport const getMetrics_v2 = async ({day, fields}): Promise<Array<metricsType>> => {\n    /**\n     * Retrieve meteo by hour and meteo by 4 hour of the day over the givenFields\n     * faster than getMeteoDetailed\n     * @param \n     * day = \"2020-09-09\"\n     * fields : Array<fieldType>\n     */\n    try {\n        const response = await hygoApi.post('/app/meteo/detailed/v3', { day, fields })\n        return response.data\n    } catch (error) {\n        return []\n    }\n}\n\ntype getConditionV2Props = {\n    day: string,\n    parcelles: Array<number>,\n    products: Array<number>\n}\n\nexport const getConditions_v2 = async (data:getConditionV2Props): Promise<Array<conditionType>> => {\n    /**\n     * Retrieve compacted conditions for every hour of the day\n     * Rules : the worst condition win\n     */\n    try {\n        const { products, parcelles, day } = data\n        const response = await hygoApi.post('/app/meteo/condition/v2', { products, parcelles, day })\n        const conditions = response.data.map(\n            ({condition, parcelleId, productId, timestamp }) => ({\n                condition, parcelleId, productId, timestamp \n            }))\n        const ret = _(conditions)\n            .groupBy(x => x.timestamp)\n            .sortBy((v)=> v.timestamp)\n            .map((value, key) => Math.min(...value.map((v) => CONDITIONS_ORDERING[v.condition])))\n            .value()\n\n        return ret\n    } catch (error) {\n        return []\n    }\n}\n\n// Retrieve detailed meteo for intervention planning\nexport const getMeteoIntervention = async ({ products, cultures }) => {\n    if (products.length === 0 || cultures.length === 0) {\n        return {}\n    }\n\n    try {\n        const response = await hygoApi.post('/app/meteo/intervention', { products, cultures })\n        return response.data\n    } catch (error) {\n        return {}\n    }\n}\n\n\n// Retrieve modulation\ntype getModulationValueProps = any\n\nexport const getModulationValue = async (data) => {\n    try {\n        const response = await hygoApi.post('/app/modulation', { ...data })\n        return response.data\n    } catch (error) {\n        return {}\n    }\n}\n\nexport const getModulationValue_v2 = async (data): Promise<Array<modulationType>> => {\n    try {\n        const response = await hygoApi.post('/app/modulation/v2', { ...data })\n        return response.data\n    } catch (error) {\n        return []\n    }\n}\n\nexport const getModulationList = async (data: Array<getModulationValueProps>): Promise<Array<number>> => {\n    try {\n        const response = await hygoApi.post('/app/modulationList', { ...data })\n        return response.data.modulationList\n    } catch (error) {\n        return []\n    }\n}\n\n// Retrive interventions\nexport const getInterventions = async () => {\n    try {\n        const response = await hygoApi.post('/app/interventions', {});\n        return { interventionValues: response.data }\n    } catch (error) {\n        return { interventionValues: [] }\n    }\n}\n\n// Retrive intervention ID\nexport const getInterventionByID = async ({ id }) => {\n    try {\n        const response = await hygoApi.post('/app/interventions/details', { id });\n        return response.data\n    } catch (error) {\n        return { intervention: {} }\n    }\n}\n\n// Get Realtime data\nexport const getRealtimeData = async (phytoProductSelected) => {\n    try {\n        const response = await hygoApi.post('/app/realtime', { products: phytoProductSelected });\n        return response.data\n    } catch (error) {\n        return {}\n    }\n}\n\n// Get fields\nexport const getFields = async () => {\n    try {\n        const response = await hygoApi.get('/app/fields');\n        return response.data\n    } catch (error) {\n        return {}\n    }\n}\n\nexport interface getFieldsReturnType {\n    fields?: Array<fieldType>\n}\nexport const getFields_v2 = async (): Promise<getFieldsReturnType> => {\n    try {\n        const response = await hygoApi.get('/app/fields/v2');\n        return response.data\n    } catch (error) {\n        return {}\n    }\n}\n\n// Get cultures\nexport const getCultures = async () => {\n    try {\n        const response = await hygoApi.get('/app/cultures');\n        return response.data\n    } catch (error) {\n        return {}\n    }\n}\n\n// Get Meteo Radar\nexport const getMeteoRadar = async () => {\n    try {\n        const response = await hygoApi.get('/app/radar');\n        return response.data\n    } catch (error) {\n        return {}\n    }\n}\n\n// Update intervention products\nexport const updateIntervention = async (products, interventionid) => {\n    try {\n        const response = await hygoApi.post('/app/interventions/update', { products, interventionid });\n        return (response.data);\n    } catch (error) {\n        return ({\n\n        });\n    }\n}\n\nexport const deleteIntervention = async (interventionid) => {\n    try {\n        const response = await hygoApi.post('/app/interventions/delete', { id: interventionid });\n        return (response.data);\n    } catch (error) {\n        return ({\n\n        });\n    }\n}\n\nexport const createIntervention = async () => {\n    try {\n        const response = await hygoApi.post('/app/interventions/create');\n        return (response.data);\n    } catch (error) {\n        return ({\n\n        });\n    }\n}\n\n// Check if the database is ready (parcels and meteo datas loaded => 24h),and if a new version is needed\nexport const checkSetup = async () => {\n    try {\n        const response = await hygoApi.post('/app/checkSetup', { version: VERSION })\n        return (response.data);\n    } catch (error) {\n        console.log(error)\n        return ({})\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}