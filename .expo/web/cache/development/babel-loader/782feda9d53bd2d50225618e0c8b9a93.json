{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/HygoParcelleIntervention.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport COLORS from \"../colors\";\nimport _ from 'lodash';\nvar NUM_ITEMS = 12;\nvar CURSOR_HEIGHT = 120;\nvar conditionsOrdering = ['FORBIDDEN', 'BAD', 'CORRECT', 'GOOD', 'EXCELLENT'];\n\nvar HygoParcelleIntervention = function (_Component) {\n  _inherits(HygoParcelleIntervention, _Component);\n\n  var _super = _createSuper(HygoParcelleIntervention);\n\n  function HygoParcelleIntervention(props) {\n    var _this;\n\n    _classCallCheck(this, HygoParcelleIntervention);\n\n    _this = _super.call(this, props);\n    _this.panResponder = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {\n        return true;\n      },\n      onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n        return _this.onMove(evt, gestureState);\n      },\n      onPanResponderRelease: function onPanResponderRelease() {\n        if (_this.props.onHourChangeEnd) {\n          _this.props.onHourChangeEnd(_this.state.selected);\n        }\n      }\n    });\n\n    _this.onMove = function (evt, gestureState) {\n      var xpos = gestureState.x0 + gestureState.dx;\n      var offset = (Dimensions.get('window').width - _this.props.width) / 2;\n      var fv = (xpos - offset) / _this.props.width * NUM_ITEMS,\n          dv = fv % 1;\n\n      if (gestureState.vx > 0) {\n        if (dv >= 0.65) {\n          fv = parseInt(fv) + 1;\n        } else {\n          fv = parseInt(fv);\n        }\n      } else if (gestureState.vx < 0) {\n        if (dv <= 0.35) {\n          fv = parseInt(fv);\n        } else {\n          fv = parseInt(fv) + 1;\n        }\n      }\n\n      var posInsideBar = fv;\n\n      if (posInsideBar > NUM_ITEMS - 1) {\n        posInsideBar = NUM_ITEMS - 1;\n      }\n\n      if (posInsideBar < 0) {\n        posInsideBar = 0;\n      }\n\n      var _this$state$selected = _this.state.selected,\n          min = _this$state$selected.min,\n          max = _this$state$selected.max;\n\n      if (gestureState.vx > 0) {\n        if (posInsideBar === max + 1) {\n          max = posInsideBar;\n        } else if (posInsideBar === min && max !== posInsideBar) {\n          min = posInsideBar + 1;\n        }\n      } else {\n        if (posInsideBar === min - 1) {\n          min = posInsideBar;\n        } else if (posInsideBar === max && posInsideBar !== min) {\n          max = posInsideBar - 1;\n        }\n      }\n\n      _this.setState({\n        selected: {\n          min: min,\n          max: max\n        }\n      });\n    };\n\n    _this.getColor = function (i) {\n      var isSelected = i <= _this.state.selected.max && _this.state.selected.min <= i;\n      if (isSelected) return 'transparent';\n\n      var padded = (\"\" + (i + _this.props.from)).padStart(2, '0');\n\n      return COLORS[_this.props.data[padded].condition + \"_CARDS\"];\n    };\n\n    _this.getItemWidth = function (i, isSub) {\n      var w = _this.props.width,\n          margin = parseFloat(w) / NUM_ITEMS * 0.14,\n          isSelected = i <= _this.state.selected.max && _this.state.selected.min <= i;\n\n      if (isSub) {\n        return {\n          borderWidth: isSelected ? margin : 0,\n          borderColor: isSelected ? 'transparent' : '#fff',\n          height: 45 + (isSelected ? margin : 0)\n        };\n      }\n\n      return {\n        width: parseFloat(w) / NUM_ITEMS,\n        paddingHorizontal: isSelected ? 0 : margin,\n        paddingVertical: 5,\n        height: 55 + (isSelected ? margin : 0)\n      };\n    };\n\n    _this.getSelectedWidth = function () {\n      if (_this.state.selected.max < _this.state.selected.min) {\n        return {\n          width: 0,\n          boderWidth: 0\n        };\n      }\n\n      var curCond = null;\n\n      for (var i = _this.state.selected.min; i <= _this.state.selected.max; i++) {\n        var padded = (\"\" + (i + _this.props.from)).padStart(2, '0');\n\n        if (!curCond || conditionsOrdering.indexOf(curCond) >= conditionsOrdering.indexOf(_this.props.data[padded].condition)) {\n          curCond = _this.props.data[padded].condition;\n        }\n      }\n\n      var w = _this.props.width,\n          margin = parseFloat(w) / NUM_ITEMS * 0.14;\n      return {\n        width: (_this.state.selected.max - _this.state.selected.min + 1) * (parseFloat(w) / NUM_ITEMS),\n        marginHorizontal: 0,\n        borderWidth: margin,\n        borderColor: '#fff',\n        height: 45 + margin,\n        position: 'absolute',\n        left: _this.state.selected.min * _this.props.width / NUM_ITEMS,\n        backgroundColor: COLORS[curCond + \"_CARDS\"]\n      };\n    };\n\n    _this.getContainerHeight = function () {\n      var w = _this.props.width,\n          margin = parseFloat(w) / NUM_ITEMS * 0.14;\n      return 45 + margin;\n    };\n\n    _this.computeSelected = function (prev, idx) {\n      var i = idx,\n          isSelected = i <= prev.max && prev.min <= i;\n\n      if (isSelected) {\n        if (i !== prev.max && i !== prev.min) {\n          return _objectSpread({}, prev);\n        }\n\n        return {\n          min: i === prev.min ? i + 1 : prev.min,\n          max: i === prev.max ? i - 1 : prev.max\n        };\n      }\n\n      if (prev.max < prev.min) {\n        return {\n          min: i,\n          max: i\n        };\n      }\n\n      if (i > prev.max + 1 || i < prev.min - 1) {\n        return _objectSpread({}, prev);\n      }\n\n      return {\n        min: Math.min(i, prev.min),\n        max: Math.max(i, prev.max)\n      };\n    };\n\n    _this.onHourChangeDelayed = _.debounce(function (h) {\n      props.onHourChange(h);\n    }, 100);\n    _this.state = {\n      selected: {\n        min: parseInt(0),\n        max: parseInt(props.initialMax ? props.initialMax : 0)\n      }\n    };\n    return _this;\n  }\n\n  _createClass(HygoParcelleIntervention, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: [styles.container, {\n          width: this.props.width,\n          height: this.getContainerHeight()\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 7\n        }\n      }, React.createElement(View, _extends({\n        style: [styles.parcelleCursor, {\n          left: -1 * parseFloat(Dimensions.get('window').width - this.props.width) / 2,\n          width: Dimensions.get('window').width,\n          height: this.props.cursorHeight || CURSOR_HEIGHT\n        }]\n      }, this.panResponder.panHandlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }\n      })), React.createElement(View, {\n        style: [styles.selected, _objectSpread({}, this.getSelectedWidth())],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }\n      }), _toConsumableArray(Array(NUM_ITEMS).keys()).map(function (i) {\n        return React.createElement(TouchableWithoutFeedback, {\n          key: i,\n          onPress: function onPress() {\n            return _this2.onPressParcelle(i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: [styles.parcelle, _objectSpread({}, _this2.getItemWidth(i))],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: [styles.subTile, {\n            backgroundColor: _this2.getColor(i)\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }\n        })));\n      }));\n    }\n  }]);\n\n  return HygoParcelleIntervention;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    paddingVertical: 5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  parcelleCursor: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    zIndex: 10\n  },\n  parcelle: {\n    height: 45,\n    zIndex: 5\n  },\n  subTile: {\n    height: 45,\n    zIndex: 5\n  },\n  selected: {\n    height: 45,\n    zIndex: 1\n  }\n});\nexport default HygoParcelleIntervention;","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/HygoParcelleIntervention.js"],"names":["React","useState","Component","COLORS","_","NUM_ITEMS","CURSOR_HEIGHT","conditionsOrdering","HygoParcelleIntervention","props","panResponder","PanResponder","create","onMoveShouldSetPanResponderCapture","onPanResponderMove","evt","gestureState","onMove","onPanResponderRelease","onHourChangeEnd","state","selected","xpos","x0","dx","offset","Dimensions","get","width","fv","dv","vx","parseInt","posInsideBar","min","max","setState","getColor","i","isSelected","padded","from","padStart","data","condition","getItemWidth","isSub","w","margin","parseFloat","borderWidth","borderColor","height","paddingHorizontal","paddingVertical","getSelectedWidth","boderWidth","curCond","indexOf","marginHorizontal","position","left","backgroundColor","getContainerHeight","computeSelected","prev","idx","Math","onHourChangeDelayed","debounce","h","onHourChange","initialMax","styles","container","parcelleCursor","cursorHeight","panHandlers","Array","keys","map","onPressParcelle","parcelle","subTile","StyleSheet","display","flexDirection","justifyContent","alignItems","zIndex"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react'\nimport { StyleSheet, View, TouchableWithoutFeedback, PanResponder, Dimensions } from 'react-native'\n\nimport COLORS from '../colors'\n\nimport _ from 'lodash';\n\nconst NUM_ITEMS = 12\nconst CURSOR_HEIGHT = 120\n\nconst conditionsOrdering = ['FORBIDDEN', 'BAD', 'CORRECT', 'GOOD', 'EXCELLENT']\n\nclass HygoParcelleIntervention extends Component { \n  constructor(props) {\n    super(props);\n\n    this.onHourChangeDelayed = _.debounce((h) => { props.onHourChange(h) }, 100);\n\n    this.state = {\n      selected: {\n        min: parseInt(0),\n        max: parseInt(props.initialMax?props.initialMax:0)\n      },\n    }\n  }\n\n  panResponder = PanResponder.create({\n    onMoveShouldSetPanResponderCapture: () => true,\n    onPanResponderMove: (evt, gestureState) => this.onMove(evt, gestureState),\n    onPanResponderRelease: () => {\n      if (this.props.onHourChangeEnd) {\n        this.props.onHourChangeEnd(this.state.selected)\n      }\n    }\n  })\n\n  onMove = (evt, gestureState) => {\n    let xpos = gestureState.x0 + gestureState.dx\n\n    let offset = (Dimensions.get('window').width - this.props.width) / 2\n\n    let fv = (xpos - offset) / this.props.width * NUM_ITEMS, dv = fv % 1\n\n    if (gestureState.vx > 0) {\n      if (dv >= 0.65) { fv = parseInt(fv) + 1 }\n      else { fv = parseInt(fv) }\n    } else if (gestureState.vx < 0) {\n      if (dv <= 0.35) { fv = parseInt(fv) }\n      else { fv = parseInt(fv) + 1 }\n    }\n\n\n    let posInsideBar = fv\n    if (posInsideBar > NUM_ITEMS - 1) { posInsideBar = NUM_ITEMS - 1 }\n    if (posInsideBar < 0) { posInsideBar = 0 }\n\n    let { min, max } = this.state.selected\n\n    if (gestureState.vx > 0) {\n      if (posInsideBar === max + 1) {\n        max = posInsideBar\n      } else if (posInsideBar === min && max !== posInsideBar) {\n        min = posInsideBar + 1\n      }\n    } else {\n      if (posInsideBar === min - 1) {\n        min = posInsideBar\n      } else if (posInsideBar === max && posInsideBar !== min) {\n        max = posInsideBar - 1\n      }\n    }\n\n    this.setState({\n      selected: {\n        min,\n        max\n      }\n    })\n  }\n\n  getColor = (i) => {\n    let isSelected = i <= this.state.selected.max && this.state.selected.min <= i\n    if (isSelected) \n      return 'transparent'\n\n    let padded = `${i+this.props.from}`.padStart(2, '0')\n    return COLORS[`${this.props.data[padded].condition}_CARDS`];\n  }\n  \n  getItemWidth = (i, isSub) => {\n    const w = this.props.width, margin = parseFloat(w) / NUM_ITEMS * 0.14, isSelected = i <= this.state.selected.max && this.state.selected.min <= i\n    if (isSub) {\n      return {\n        borderWidth: isSelected ? margin : 0,\n        borderColor: isSelected ? 'transparent' : '#fff',\n        height: 45 + (isSelected ? margin : 0),\n      }\n    }\n\n    return {\n      width: parseFloat(w) / NUM_ITEMS,\n      paddingHorizontal: isSelected ? 0 : margin,\n      paddingVertical: 5,\n      height: 55 + (isSelected ? margin : 0),\n    }\n  }\n\n  getSelectedWidth = () => {\n    if (this.state.selected.max < this.state.selected.min) {\n      return {\n        width: 0,\n        boderWidth: 0,\n      }\n    }\n\n    let curCond = null\n    for (let i = this.state.selected.min; i <= this.state.selected.max; i++) {\n      let padded = `${i+this.props.from}`.padStart(2, '0')\n      if (!curCond || conditionsOrdering.indexOf(curCond) >= conditionsOrdering.indexOf(this.props.data[padded].condition)) {\n        curCond = this.props.data[padded].condition\n      }\n    }\n\n    const w = this.props.width, margin = parseFloat(w) / NUM_ITEMS * 0.14\n    return {\n      width: (this.state.selected.max-this.state.selected.min+1) * (parseFloat(w) / NUM_ITEMS),\n      marginHorizontal: 0,\n      borderWidth: margin,\n      borderColor: '#fff',\n      height: 45 + margin,\n      position: 'absolute',\n      left: this.state.selected.min * this.props.width / NUM_ITEMS,\n      backgroundColor: COLORS[`${curCond}_CARDS`],\n    }\n  }\n\n  getContainerHeight = () => {\n    const w = this.props.width, margin = parseFloat(w) / NUM_ITEMS * 0.14\n    return 45 + margin\n  }\n\n  computeSelected = (prev, idx) => {\n    let i = idx, isSelected = i <= prev.max && prev.min <= i\n\n    if (isSelected) {\n      if (i !== prev.max && i !== prev.min) {\n        return { ...prev }\n      }\n\n      return {\n        min: i === prev.min ? i + 1 : prev.min,\n        max: i === prev.max ? i - 1 : prev.max,\n      }\n    } \n\n    if (prev.max < prev.min) {\n      return {\n        min: i,\n        max: i\n      }\n    }\n\n    if (i > prev.max + 1 || i < prev.min - 1) {\n      return { ...prev }\n    }\n\n    return {\n      min: Math.min(i, prev.min),\n      max: Math.max(i, prev.max),\n    }\n  }\n\n  render() {\n    return (\n      <View style={[ styles.container, { width: this.props.width, height: this.getContainerHeight() }]}>\n        <View style={[styles.parcelleCursor, { \n          left: -1 * parseFloat(Dimensions.get('window').width - this.props.width) / 2, \n          width: Dimensions.get('window').width,\n          height: this.props.cursorHeight||CURSOR_HEIGHT,\n        }]} \n          {...this.panResponder.panHandlers}></View>\n\n        <View style={[styles.selected, {\n          ...this.getSelectedWidth()\n        }]}></View>\n        { [...Array(NUM_ITEMS).keys()].map(i => {\n          return (\n            <TouchableWithoutFeedback key={i} onPress={() => this.onPressParcelle(i)}>\n              <View style={[styles.parcelle, {\n                ...this.getItemWidth(i)}, \n              ]}>\n                <View style={[styles.subTile, { backgroundColor: this.getColor(i), }]}></View>\n              </View>\n            </TouchableWithoutFeedback>\n          )\n        }) }\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    paddingVertical: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },  \n  parcelleCursor: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    zIndex: 10,\n  },\n  parcelle: {\n    height: 45,\n    zIndex: 5,\n  },\n  subTile: {\n    height: 45,\n    zIndex: 5\n  },\n  selected: {\n    height: 45,\n    zIndex: 1,\n  }\n})\n\nexport default HygoParcelleIntervention"]},"metadata":{},"sourceType":"module"}