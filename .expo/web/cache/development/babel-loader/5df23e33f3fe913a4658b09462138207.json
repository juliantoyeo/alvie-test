{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/navigation.js\";\nimport React from 'react';\nimport { createAppContainer, createSwitchNavigator } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport { createDrawerNavigator } from 'react-navigation-drawer';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TabBar from \"./components/HygoTabBar\";\nimport i18n from 'i18n-js';\nimport HygoProductPicker from \"./components/HygoProductPicker\";\nimport HygoCulturePicker from \"./components/HygoCulturePicker\";\nimport RealTimeScreen from \"./screens/RealTimeScreen\";\nimport BarCodeScreen from \"./screens/BarCodeScreen\";\nimport MeteoScreen from \"./screens/MeteoScreen\";\nimport InterventionsScreen from \"./screens/InterventionsScreen\";\nimport InterventionMapScreen from \"./screens/InterventionMapScreen\";\nimport EquipmentScreen from \"./screens/EquipmentScreen\";\nimport LoadingScreen from \"./screens/LoadingScreen\";\nimport DrawerScreen from \"./screens/DrawerScreen\";\nimport FieldsScreen from \"./screens/FieldsScreen\";\nimport MeteoDetailedDetails from \"./screens/MeteoDetailedDetails\";\nimport BarCodeValidationScreen from \"./screens/BarCodeValidationScreen\";\nimport NextPulverisationScreen from \"./screens/NextPulverisationScreen\";\nimport NextPulverisationDetails from \"./screens/NextPulverisationDetailsTop\";\nimport WaitActivationScreen from \"./screens/WaitActivationScreen\";\nimport HeaderText from \"./components/HeaderText\";\nimport COLORS from \"./colors\";\nimport SelectParcelsScreen from \"./screens/testScreens/SelectParcelsScreen\";\nvar Navigator = createSwitchNavigator({\n  mainFlow: createStackNavigator({\n    BarCode: BarCodeScreen,\n    WaitActivation: WaitActivationScreen,\n    main: createDrawerNavigator({\n      Drawer: {\n        screen: createBottomTabNavigator({\n          MeteoScreen: createStackNavigator({\n            MeteoScreen: {\n              screen: MeteoScreen,\n              navigationOptions: {\n                header: null\n              }\n            }\n          }),\n          Pulverisation: NextPulverisationScreen,\n          RealTime: RealTimeScreen,\n          Intervention: createStackNavigator({\n            Interventions: InterventionsScreen\n          }, {\n            headerMode: 'none',\n            defaultNavigationOptions: {}\n          })\n        }, {\n          defaultNavigationOptions: function defaultNavigationOptions(_ref) {\n            var navigation = _ref.navigation;\n            return {\n              tabBarIcon: function tabBarIcon(_ref2) {\n                var focused = _ref2.focused,\n                    horizontal = _ref2.horizontal,\n                    tintColor = _ref2.tintColor;\n                var routeName = navigation.state.routeName;\n                var r = ['MeteoScreen', 'Pulverisation', 'RealTime', 'Intervention'];\n                var idx = r.indexOf(routeName);\n                var props = {\n                  style: {\n                    height: 20,\n                    tintColor: tintColor\n                  }\n                };\n\n                switch (idx) {\n                  case 0:\n                    return React.createElement(Image, _extends({}, props, {\n                      source: require(\"../assets/ICN-Nav1.png\"),\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 78,\n                        columnNumber: 26\n                      }\n                    }));\n\n                  case 1:\n                    return React.createElement(Image, _extends({}, props, {\n                      source: require(\"../assets/ICN-Nav2.png\"),\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 80,\n                        columnNumber: 26\n                      }\n                    }));\n\n                  case 2:\n                    return React.createElement(Image, _extends({}, props, {\n                      source: require(\"../assets/ICN-Nav3.png\"),\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 82,\n                        columnNumber: 26\n                      }\n                    }));\n\n                  case 3:\n                    return React.createElement(Image, _extends({}, props, {\n                      source: require(\"../assets/ICN-Nav4.png\"),\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 84,\n                        columnNumber: 26\n                      }\n                    }));\n                }\n              }\n            };\n          },\n          tabBarComponent: TabBar,\n          tabBarOptions: {\n            activeTintColor: COLORS.DARK_GREEN,\n            inactiveTintColor: '#fff',\n            labelStyle: {\n              fontSize: 14\n            }\n          }\n        })\n      }\n    }, {\n      contentComponent: DrawerScreen,\n      drawerWidth: 310\n    }),\n    BarCodeValidationScreen: BarCodeValidationScreen,\n    InterventionMapScreen: InterventionMapScreen,\n    MeteoDetailedDetails: {\n      screen: MeteoDetailedDetails,\n      navigationOptions: {\n        gesturesEnabled: false\n      }\n    },\n    NextPulverisationDetails: {\n      screen: NextPulverisationDetails,\n      navigationOptions: {\n        gesturesEnabled: false\n      }\n    },\n    FieldsScreen: FieldsScreen,\n    EquipmentSettingsScreen: {\n      screen: EquipmentScreen,\n      navigationOptions: {\n        header: function header() {\n          return React.createElement(HeaderText, {\n            text: i18n.t('equipment.header'),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 23\n            }\n          });\n        }\n      }\n    },\n    HygoProductPicker: HygoProductPicker,\n    HygoCulturePicker: HygoCulturePicker,\n    LoadingScreen: {\n      screen: LoadingScreen,\n      navigationOptions: {\n        header: null\n      }\n    },\n    TestPage: SelectParcelsScreen\n  }, {\n    headerMode: 'none'\n  })\n});\nexport default createAppContainer(Navigator);","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/navigation.js"],"names":["React","createAppContainer","createSwitchNavigator","createStackNavigator","createBottomTabNavigator","createDrawerNavigator","TabBar","i18n","HygoProductPicker","HygoCulturePicker","RealTimeScreen","BarCodeScreen","MeteoScreen","InterventionsScreen","InterventionMapScreen","EquipmentScreen","LoadingScreen","DrawerScreen","FieldsScreen","MeteoDetailedDetails","BarCodeValidationScreen","NextPulverisationScreen","NextPulverisationDetails","WaitActivationScreen","HeaderText","COLORS","SelectParcelsScreen","Navigator","mainFlow","BarCode","WaitActivation","main","Drawer","screen","navigationOptions","header","Pulverisation","RealTime","Intervention","Interventions","headerMode","defaultNavigationOptions","navigation","tabBarIcon","focused","horizontal","tintColor","routeName","state","r","idx","indexOf","props","style","height","require","tabBarComponent","tabBarOptions","activeTintColor","DARK_GREEN","inactiveTintColor","labelStyle","fontSize","contentComponent","drawerWidth","gesturesEnabled","EquipmentSettingsScreen","t","TestPage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createAppContainer, createSwitchNavigator } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport { createDrawerNavigator } from 'react-navigation-drawer';\n\nimport { Image } from 'react-native';\n\nimport TabBar from './components/HygoTabBar'\n\nimport i18n from 'i18n-js'\n\nimport HygoProductPicker from './components/HygoProductPicker';\nimport HygoCulturePicker from './components/HygoCulturePicker';\nimport RealTimeScreen from './screens/RealTimeScreen';\nimport BarCodeScreen from './screens/BarCodeScreen';\nimport MeteoScreen from './screens/MeteoScreen';\nimport InterventionsScreen from './screens/InterventionsScreen';\nimport InterventionMapScreen from './screens/InterventionMapScreen';\nimport EquipmentScreen from './screens/EquipmentScreen';\nimport LoadingScreen from './screens/LoadingScreen';\nimport DrawerScreen from './screens/DrawerScreen'\nimport FieldsScreen from './screens/FieldsScreen'\nimport MeteoDetailedDetails from './screens/MeteoDetailedDetails'\nimport BarCodeValidationScreen from './screens/BarCodeValidationScreen'\nimport NextPulverisationScreen from './screens/NextPulverisationScreen'\nimport NextPulverisationDetails from './screens/NextPulverisationDetailsTop'\nimport WaitActivationScreen from './screens/WaitActivationScreen'\n\nimport HeaderText from './components/HeaderText'\n\nimport COLORS from './colors'\nimport SelectParcelsScreen from './screens/testScreens/SelectParcelsScreen';\n\nconst Navigator = createSwitchNavigator({\n  mainFlow: createStackNavigator({\n    BarCode: BarCodeScreen,\n    WaitActivation: WaitActivationScreen,\n    main: createDrawerNavigator({\n      Drawer: {\n        screen: createBottomTabNavigator({\n          MeteoScreen: createStackNavigator({\n            MeteoScreen: {\n              screen: MeteoScreen, \n              navigationOptions: {\n                header: null,\n              },\n            },\n          }),\n\n          Pulverisation: NextPulverisationScreen,\n\n          RealTime: RealTimeScreen,\n\n          Intervention: createStackNavigator({\n            Interventions : InterventionsScreen,\n          }, {\n            headerMode: 'none',\n            defaultNavigationOptions : {}\n          }),\n        }, {\n          defaultNavigationOptions: ({ navigation }) => ({\n            tabBarIcon: ({ focused, horizontal, tintColor }) => {\n              const { routeName } = navigation.state;\n      \n              const r = [ 'MeteoScreen', 'Pulverisation', 'RealTime', 'Intervention' ]\n              let idx = r.indexOf(routeName)\n      \n              let props = {\n                style: {\n                  height: 20,\n                  tintColor,\n                },\n              }\n      \n              switch (idx) {\n                case 0:\n                  return <Image {...props} source={require(\"../assets/ICN-Nav1.png\")} />\n                case 1:\n                  return <Image {...props} source={require(\"../assets/ICN-Nav2.png\")} />\n                case 2:\n                  return <Image {...props} source={require(\"../assets/ICN-Nav3.png\")} />\n                case 3:\n                  return <Image {...props} source={require(\"../assets/ICN-Nav4.png\")} />\n              }\n      \n            }\n          }),\n      \n          tabBarComponent: TabBar,\n          tabBarOptions: {\n            activeTintColor: COLORS.DARK_GREEN,\n            inactiveTintColor: '#fff',\n            labelStyle: {\n              fontSize: 14,\n            },\n          },\n        })\n      }\n    }, {\n      contentComponent: DrawerScreen,\n      drawerWidth: 310\n    }),\n    BarCodeValidationScreen: BarCodeValidationScreen,\n    InterventionMapScreen: InterventionMapScreen,\n    MeteoDetailedDetails: {\n      screen: MeteoDetailedDetails,\n      navigationOptions: {\n        gesturesEnabled: false,\n      }\n    },\n    NextPulverisationDetails: {\n      screen: NextPulverisationDetails,\n      navigationOptions: {\n        gesturesEnabled: false,\n      }\n    },\n    FieldsScreen: FieldsScreen,\n    EquipmentSettingsScreen: {\n      screen: EquipmentScreen, \n      navigationOptions: {\n        header: () => <HeaderText text={i18n.t('equipment.header')} />,\n      },\n    },\n    HygoProductPicker: HygoProductPicker,\n    HygoCulturePicker: HygoCulturePicker,\n    LoadingScreen: {\n      screen: LoadingScreen,\n      navigationOptions: {\n        header: null\n      }\n    },\n    TestPage : SelectParcelsScreen\n  }, {\n    headerMode: 'none'\n  })\n})\n\nexport default createAppContainer(Navigator)"]},"metadata":{},"sourceType":"module"}