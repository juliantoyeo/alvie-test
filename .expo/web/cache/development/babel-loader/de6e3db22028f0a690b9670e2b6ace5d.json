{"ast":null,"code":"var _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/HygoTabBar.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport COLORS from \"../colors\";\n\nvar TabBar = function TabBar(props) {\n  var renderIcon = props.renderIcon,\n      getLabelText = props.getLabelText,\n      activeTintColor = props.activeTintColor,\n      inactiveTintColor = props.inactiveTintColor,\n      onTabPress = props.onTabPress,\n      onTabLongPress = props.onTabLongPress,\n      getAccessibilityLabel = props.getAccessibilityLabel,\n      navigation = props.navigation;\n  var _navigation$state = navigation.state,\n      routes = _navigation$state.routes,\n      activeRouteIndex = _navigation$state.index;\n  return React.createElement(View, {\n    style: styles.top,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, routes.map(function (route, routeIndex) {\n    var isRouteActive = routeIndex === activeRouteIndex;\n    var tintColor = isRouteActive ? activeTintColor : inactiveTintColor;\n    return React.createElement(TouchableOpacity, {\n      activeOpacity: .6,\n      key: routeIndex,\n      style: styles.tabButton,\n      onPress: function onPress() {\n        onTabPress({\n          route: route\n        });\n      },\n      onLongPress: function onLongPress() {\n        onTabLongPress({\n          route: route\n        });\n      },\n      accessibilityLabel: getAccessibilityLabel({\n        route: route\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, isRouteActive && React.createElement(View, {\n      style: styles.topCircle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.circle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    }, renderIcon({\n      route: route,\n      focused: isRouteActive,\n      tintColor: tintColor\n    }))), !isRouteActive && renderIcon({\n      route: route,\n      focused: isRouteActive,\n      tintColor: tintColor\n    }));\n  })));\n};\n\nvar styles = StyleSheet.create({\n  top: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  container: {\n    flexDirection: \"row\",\n    height: 50,\n    elevation: 2,\n    borderTopRightRadius: 40,\n    borderTopLeftRadius: 40,\n    backgroundColor: COLORS.CYAN,\n    paddingLeft: 30,\n    paddingRight: 30\n  },\n  tabButton: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  circle: {\n    backgroundColor: 'white',\n    width: 50,\n    height: 50,\n    borderRadius: 100,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowOpacity: .2,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 3,\n    elevation: 2\n  },\n  topCircle: {\n    backgroundColor: COLORS.CYAN,\n    width: 65,\n    height: 65,\n    borderRadius: 130,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 5\n  }\n});\nexport default TabBar;","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/HygoTabBar.js"],"names":["React","COLORS","TabBar","props","renderIcon","getLabelText","activeTintColor","inactiveTintColor","onTabPress","onTabLongPress","getAccessibilityLabel","navigation","state","routes","activeRouteIndex","index","styles","top","container","map","route","routeIndex","isRouteActive","tintColor","tabButton","topCircle","circle","focused","StyleSheet","create","backgroundColor","position","left","right","bottom","flexDirection","height","elevation","borderTopRightRadius","borderTopLeftRadius","CYAN","paddingLeft","paddingRight","flex","justifyContent","alignItems","width","borderRadius","display","shadowOpacity","shadowOffset","shadowRadius","paddingBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet, TouchableOpacity } from \"react-native\";\n\nimport COLORS from '../colors'\n\nconst TabBar = props => {\n  const {\n    renderIcon,\n    getLabelText,\n    activeTintColor,\n    inactiveTintColor,\n    onTabPress,\n    onTabLongPress,\n    getAccessibilityLabel,\n    navigation\n  } = props;\n\n  const { routes, index: activeRouteIndex } = navigation.state;\n\n  return (\n    <View style={styles.top}>\n      <View style={styles.container}>\n        {routes.map((route, routeIndex) => {\n          const isRouteActive = routeIndex === activeRouteIndex;\n          const tintColor = isRouteActive ? activeTintColor : inactiveTintColor;\n\n          return (\n            <TouchableOpacity\n              activeOpacity={.6}\n              key={routeIndex}\n              style={styles.tabButton}\n              onPress={() => {\n                onTabPress({ route });\n              }}\n              onLongPress={() => {\n                onTabLongPress({ route });\n              }}\n              accessibilityLabel={getAccessibilityLabel({ route })}\n            >\n              { isRouteActive && (\n                <View style={styles.topCircle}>\n                  <View style={styles.circle}>\n                    {renderIcon({ route, focused: isRouteActive, tintColor })}\n                  </View>\n                </View>\n              )}\n\n              { !isRouteActive && renderIcon({ route, focused: isRouteActive, tintColor })}\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  top: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  container: { \n    flexDirection: \"row\", \n    height: 50, \n    elevation: 2, \n    borderTopRightRadius: 40, \n    borderTopLeftRadius: 40, \n    backgroundColor: COLORS.CYAN ,\n    paddingLeft: 30,\n    paddingRight: 30,\n  },\n  tabButton: { flex: 1, justifyContent: \"center\", alignItems: \"center\" },\n  circle: {\n    backgroundColor: 'white',\n    width: 50,\n    height: 50,\n    borderRadius: 100,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowOpacity: .2,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 3,\n    elevation: 2\n  },\n  topCircle: {\n    backgroundColor: COLORS.CYAN,\n    width: 65,\n    height: 65,\n    borderRadius: 130,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 5\n  }\n});\n\nexport default TabBar;\n"]},"metadata":{},"sourceType":"module"}