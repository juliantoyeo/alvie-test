{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/NextPulverisationScreen.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Content, Header, Left, Body, Right, Button, Icon, Title, Text, Spinner } from 'native-base';\nimport { connect } from 'react-redux';\nimport { updatePhytoProductSelected as _updatePhytoProductSelected } from \"../store/actions/pulveActions\";\nimport i18n from 'i18n-js';\nimport COLORS from \"../colors\";\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\nimport { getMeteoIntervention } from \"../api/hygoApi\";\nimport capitalize from \"../utils/capitalize\";\nimport { Amplitude, AMPLITUDE_EVENTS } from \"../amplitude\";\nvar ampEvent = AMPLITUDE_EVENTS.nextPulvScreen;\n\nvar NextPulverisationScreen = function NextPulverisationScreen(_ref) {\n  var navigation = _ref.navigation,\n      phytoProductList = _ref.phytoProductList,\n      cultures = _ref.cultures,\n      culturesSelected = _ref.culturesSelected,\n      phytoProductSelected = _ref.phytoProductSelected;\n  var MONTHS = [i18n.t('months.january'), i18n.t('months.february'), i18n.t('months.march'), i18n.t('months.april'), i18n.t('months.may'), i18n.t('months.june'), i18n.t('months.july'), i18n.t('months.august'), i18n.t('months.september'), i18n.t('months.october'), i18n.t('months.november'), i18n.t('months.december')];\n  var DAYS = [i18n.t('days.sunday'), i18n.t('days.monday'), i18n.t('days.tuesday'), i18n.t('days.wednesday'), i18n.t('days.thursday'), i18n.t('days.friday'), i18n.t('days.saturday')];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      blurred = _useState6[0],\n      setBlurred = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentParams = _useState8[0],\n      setCurrentParams = _useState8[1];\n\n  var openPicker = function openPicker(screen) {\n    navigation.navigate(screen, {\n      backScreen: 'Pulverisation'\n    });\n  };\n\n  useEffect(function () {\n    Amplitude.logEventWithProperties(ampEvent.render, {\n      timestamp: Date.now()\n    });\n    var unsubscribe = navigation.addListener('didFocus', function () {\n      Amplitude.logEventWithProperties(ampEvent.render, {\n        timestamp: Date.now()\n      });\n    });\n    return function () {\n      return unsubscribe.remove();\n    };\n  }, []);\n  useEffect(function () {\n    if (culturesSelected.length > 0 && phytoProductSelected.length > 0 && !blurred) {\n      loadMeteoIntervention();\n    }\n  }, [culturesSelected, phytoProductSelected, loadMeteoIntervention]);\n  useEffect(function () {\n    var unsubscribe = navigation.addListener('didBlur', function () {\n      setBlurred(true);\n    });\n    var unsubscribeFocus = navigation.addListener('willFocus', function () {\n      setBlurred(false);\n      loadMeteoIntervention();\n    });\n    return function () {\n      unsubscribe.remove();\n      unsubscribeFocus.remove();\n    };\n  }, [navigation, loadMeteoIntervention, culturesSelected, phytoProductSelected, currentParams]);\n  var loadMeteoIntervention = useCallback(function _callee() {\n    var js, result;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            js = JSON.stringify({\n              products: phytoProductSelected,\n              cultures: culturesSelected\n            });\n\n            if (!(currentParams === js)) {\n              _context.next = 5;\n              break;\n            }\n\n            setLoading(false);\n            return _context.abrupt(\"return\");\n\n          case 5:\n            setCurrentParams(js);\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(getMeteoIntervention({\n              products: phytoProductSelected,\n              cultures: culturesSelected\n            }));\n\n          case 8:\n            result = _context.sent;\n            setData(result);\n            setLoading(false);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [setCurrentParams, currentParams, phytoProductSelected, culturesSelected]);\n\n  var goToDetails = function goToDetails(_ref2) {\n    var day = _ref2.day,\n        hour = _ref2.hour,\n        data = _ref2.data;\n    Amplitude.logEventWithProperties(ampEvent.click_goToPulvDetails, {\n      timestamp: Date.now()\n    });\n    navigation.navigate('NextPulverisationDetails', {\n      day: day,\n      hour: hour,\n      data: data\n    });\n  };\n\n  var formatDay = function formatDay(d) {\n    var now = new Date(\"\" + d);\n    return capitalize(DAYS[now.getDay()]) + \" \" + now.getDate() + \" \" + capitalize(MONTHS[now.getMonth()]);\n  };\n\n  var getWidth = function getWidth() {\n    return (Dimensions.get('window').width - 64) / 12;\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.statusbar,\n    forceInset: {\n      top: 'always'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    translucent: true,\n    backgroundColor: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }), React.createElement(Content, {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    style: styles.header,\n    androidStatusBarColor: \"transparent\",\n    hasTabs: true,\n    transparent: true,\n    iosBarStyle: \"light-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, React.createElement(Left, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return navigation.toggleDrawer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, React.createElement(Icon, {\n    name: \"menu\",\n    style: {\n      color: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }))), React.createElement(Body, {\n    style: styles.headerBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, React.createElement(Title, {\n    style: styles.headerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, i18n.t('pulverisation.header'))), React.createElement(Right, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.pulveContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return openPicker(\"HygoCulturePicker\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.picker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, culturesSelected.length === 0 && React.createElement(Text, {\n    style: styles.pickerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, i18n.t('pulverisation.culture_type')), culturesSelected.length === cultures.length && React.createElement(Text, {\n    style: styles.pickerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, i18n.t('pulverisation.all_cultures')), culturesSelected.length < cultures.length && culturesSelected.length > 0 && React.createElement(Text, {\n    style: styles.pickerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, cultures.filter(function (pp) {\n    return culturesSelected.indexOf(pp.id) > -1;\n  }).map(function (pp) {\n    return i18n.t(\"cultures.\" + pp.name);\n  }).join(', ')), React.createElement(Icon, {\n    style: styles.pickerIcon,\n    type: \"Feather\",\n    name: \"chevron-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return openPicker(\"HygoProductPicker\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.picker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, phytoProductSelected.length === 0 && React.createElement(Text, {\n    style: styles.pickerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, i18n.t('pulverisation.product_type')), phytoProductSelected.length > 0 && React.createElement(Text, {\n    style: styles.pickerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, phytoProductList.filter(function (pp) {\n    return phytoProductSelected.indexOf(pp.id) > -1;\n  }).map(function (pp) {\n    return i18n.t(\"products.\" + pp.name);\n  }).join(', ')), React.createElement(Icon, {\n    style: styles.pickerIcon,\n    type: \"Feather\",\n    name: \"chevron-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  })))), (phytoProductSelected.length === 0 || culturesSelected.length === 0) && React.createElement(View, {\n    style: styles.bottomTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.bottomText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, i18n.t('pulverisation.select_text'))), phytoProductSelected.length > 0 && culturesSelected.length > 0 && React.createElement(View, {\n    style: styles.hoursSelector,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.hoursText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, i18n.t('pulverisation.select_hours_text')), React.createElement(View, {\n    style: {\n      marginTop: 10,\n      marginBottom: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, loading && React.createElement(Spinner, {\n    size: 16,\n    color: COLORS.CYAN,\n    style: {\n      height: 16,\n      marginTop: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }), !loading && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }, data.days && data.days.slice(0, 3).map(function (d, didx) {\n    return React.createElement(View, {\n      key: d,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }, (new Date().getHours() < 12 || didx > 0) && (new Date().getHours() >= 12 || didx < 2) && React.createElement(View, {\n      style: styles.dayLine,\n      key: d + \"-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: styles.dayText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 31\n      }\n    }, formatDay(d)), React.createElement(View, {\n      style: styles.productCondition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 31\n      }\n    }, _toConsumableArray(Array(12).keys()).map(function (i) {\n      var padded = (\"\" + i).padStart(2, '0');\n      var dayProduct = data.data[d].hours1;\n      return React.createElement(TouchableOpacity, {\n        key: i,\n        style: [styles.parcelle, {\n          backgroundColor: COLORS[dayProduct[padded].condition]\n        }],\n        onPress: function onPress() {\n          return goToDetails({\n            day: d,\n            hour: padded,\n            data: data\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 37\n        }\n      }, dayProduct[padded].conflict && React.createElement(Text, {\n        style: styles.parcelleExclamation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 41\n        }\n      }, \"!\"));\n    })), React.createElement(View, {\n      style: styles.hoursDetailsContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 31\n      }\n    }, React.createElement(Text, {\n      style: [styles.hoursDetails, {\n        left: getWidth()\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 33\n      }\n    }, \"01H\"), React.createElement(Text, {\n      style: [styles.hoursDetails, {\n        left: 3 * getWidth()\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 33\n      }\n    }, \"03H\"), React.createElement(Text, {\n      style: [styles.hoursDetails, {\n        left: 5 * getWidth()\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 33\n      }\n    }, \"05H\"), React.createElement(Text, {\n      style: [styles.hoursDetails, {\n        left: 7 * getWidth()\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 33\n      }\n    }, \"07H\"), React.createElement(Text, {\n      style: [styles.hoursDetails, {\n        left: 9 * getWidth()\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 33\n      }\n    }, \"09H\"), React.createElement(Text, {\n      style: [styles.hoursDetails, {\n        left: 11 * getWidth()\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 33\n      }\n    }, \"11H\"))), didx < 2 && React.createElement(View, {\n      style: styles.dayLine,\n      key: d + \"-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: styles.dayText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 31\n      }\n    }, formatDay(d)), React.createElement(View, {\n      style: styles.productCondition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 31\n      }\n    }, _toConsumableArray(Array(12).keys()).map(function (i) {\n      var padded = (\"\" + (i + 12)).padStart(2, '0');\n      var dayProduct = data.data[d].hours1;\n      return React.createElement(TouchableOpacity, {\n        key: i,\n        style: [styles.parcelle, {\n          backgroundColor: COLORS[dayProduct[padded].condition]\n        }],\n        onPress: function onPress() {\n          return goToDetails({\n            day: d,\n            hour: padded,\n            data: data\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 37\n        }\n      }, dayProduct[padded].conflict && React.createElement(Text, {\n        style: styles.parcelleExclamation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 41\n        }\n      }, \"!\"));\n    })), React.createElement(View, {\n      style: styles.hoursDetailsContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 31\n      }\n    }, React.createElement(Text, {\n      style: [styles.hoursDetails, {\n        left: getWidth()\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 33\n      }\n    }, \"13H\"), React.createElement(Text, {\n      style: [styles.hoursDetails, {\n        left: 3 * getWidth()\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 33\n      }\n    }, \"15H\"), React.createElement(Text, {\n      style: [styles.hoursDetails, {\n        left: 5 * getWidth()\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 33\n      }\n    }, \"17H\"), React.createElement(Text, {\n      style: [styles.hoursDetails, {\n        left: 7 * getWidth()\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 33\n      }\n    }, \"19H\"), React.createElement(Text, {\n      style: [styles.hoursDetails, {\n        left: 9 * getWidth()\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 33\n      }\n    }, \"21H\"), React.createElement(Text, {\n      style: [styles.hoursDetails, {\n        left: 11 * getWidth()\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 33\n      }\n    }, \"23H\"))));\n  }))))));\n};\n\nvar styles = StyleSheet.create({\n  dayLine: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: 10\n  },\n  dayText: {\n    fontFamily: 'nunito-bold',\n    fontSize: 14,\n    color: COLORS.DARK_BLUE,\n    textTransform: 'uppercase'\n  },\n  statusbar: {\n    flex: 1,\n    display: 'flex',\n    backgroundColor: Platform.OS === 'ios' ? 'black' : COLORS.CYAN\n  },\n  container: {\n    flex: 1,\n    display: 'flex'\n  },\n  header: {\n    backgroundColor: COLORS.CYAN\n  },\n  headerBody: {\n    textAlign: 'center',\n    display: 'flex',\n    alignItems: 'center',\n    flex: 6\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 24\n  },\n  content: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  tabBar: {\n    backgroundColor: 'transparent',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    elevation: 0,\n    borderBottomWidth: 0\n  },\n  tabStyle: {\n    backgroundColor: 'transparent',\n    borderBottomWidth: 0\n  },\n  textStyle: {\n    textTransform: 'uppercase',\n    color: '#fff',\n    fontSize: 14,\n    fontFamily: 'nunito-bold'\n  },\n  pulveContainer: {\n    backgroundColor: COLORS.CYAN,\n    paddingRight: 15,\n    paddingTop: 30,\n    paddingBottom: 40\n  },\n  picker: {\n    shadowColor: '#000',\n    shadowOpacity: .2,\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    elevation: 3,\n    backgroundColor: '#fff',\n    paddingLeft: 20,\n    borderTopRightRadius: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    paddingRight: 20,\n    paddingVertical: 10\n  },\n  pickerText: {\n    flex: 1,\n    color: COLORS.DARK_BLUE,\n    fontSize: 16,\n    fontFamily: 'nunito-bold'\n  },\n  pickerIcon: {\n    marginLeft: 5,\n    fontSize: 20,\n    color: COLORS.DARK_BLUE\n  },\n  bottomText: {\n    fontSize: 18,\n    color: '#fff',\n    fontFamily: 'nunito-italic'\n  },\n  bottomTextContainer: {\n    paddingTop: 40,\n    paddingLeft: 24,\n    paddingRight: 60\n  },\n  hoursSelector: {\n    backgroundColor: '#fff',\n    padding: 22,\n    flex: 1\n  },\n  hoursText: {\n    fontFamily: 'nunito-italic',\n    fontSize: 18,\n    color: '#6b6b6b'\n  },\n  productCondition: {\n    height: 45,\n    flexDirection: 'row',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  parcelle: {\n    height: 45,\n    zIndex: 5,\n    width: 20,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  parcelleExclamation: {\n    fontFamily: 'nunito-heavy',\n    fontSize: 16,\n    color: '#fff'\n  },\n  hoursDetailsContainer: {\n    flexDirection: 'row',\n    display: 'flex'\n  },\n  hoursDetails: {\n    fontFamily: 'nunito-bold',\n    fontSize: 12,\n    color: '#aaaaaa',\n    position: 'absolute'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cultures: state.metadata.cultures,\n    phytoProductList: state.pulve.phytoProductList,\n    culturesSelected: state.pulve.culturesSelected,\n    phytoProductSelected: state.pulve.phytoProductSelected\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    updatePhytoProductSelected: function updatePhytoProductSelected(selected) {\n      return dispatch(_updatePhytoProductSelected(selected));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextPulverisationScreen);","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/NextPulverisationScreen.js"],"names":["React","useState","useEffect","useCallback","Content","Header","Left","Body","Right","Button","Icon","Title","Text","Spinner","connect","updatePhytoProductSelected","i18n","COLORS","TouchableWithoutFeedback","getMeteoIntervention","capitalize","Amplitude","AMPLITUDE_EVENTS","ampEvent","nextPulvScreen","NextPulverisationScreen","navigation","phytoProductList","cultures","culturesSelected","phytoProductSelected","MONTHS","t","DAYS","loading","setLoading","data","setData","blurred","setBlurred","currentParams","setCurrentParams","openPicker","screen","navigate","backScreen","logEventWithProperties","render","timestamp","Date","now","unsubscribe","addListener","remove","length","loadMeteoIntervention","unsubscribeFocus","js","JSON","stringify","products","result","goToDetails","day","hour","click_goToPulvDetails","formatDay","d","getDay","getDate","getMonth","getWidth","Dimensions","get","width","styles","statusbar","top","content","header","flex","toggleDrawer","color","headerBody","headerTitle","pulveContainer","picker","pickerText","filter","pp","indexOf","id","map","name","join","pickerIcon","height","bottomTextContainer","bottomText","hoursSelector","hoursText","marginTop","marginBottom","CYAN","days","slice","didx","getHours","dayLine","dayText","productCondition","Array","keys","i","padded","padStart","dayProduct","hours1","parcelle","backgroundColor","condition","conflict","parcelleExclamation","hoursDetailsContainer","hoursDetails","left","StyleSheet","create","display","flexDirection","padding","fontFamily","fontSize","DARK_BLUE","textTransform","Platform","OS","container","textAlign","alignItems","tabBar","shadowOffset","elevation","borderBottomWidth","tabStyle","textStyle","paddingRight","paddingTop","paddingBottom","shadowColor","shadowOpacity","paddingLeft","borderTopRightRadius","justifyContent","paddingVertical","marginLeft","zIndex","position","mapStateToProps","state","metadata","pulve","mapDispatchToProps","dispatch","props","selected"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport { StatusBar, StyleSheet, SafeAreaView, View, ImageBackground, TouchableOpacity, Dimensions } from 'react-native'\nimport { Content, Header, Left, Body, Right, Button, Icon, Title, Text, Spinner } from 'native-base';\nimport { connect } from 'react-redux'\n\nimport { updatePhytoProductSelected } from '../store/actions/pulveActions'\n\nimport i18n from 'i18n-js'\n\nimport COLORS from '../colors'\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\n\nimport { getMeteoIntervention } from '../api/hygoApi'\nimport capitalize from '../utils/capitalize'\n\nimport {Amplitude, AMPLITUDE_EVENTS} from '../amplitude'\nconst {nextPulvScreen: ampEvent} = AMPLITUDE_EVENTS\n\nconst NextPulverisationScreen = ({ navigation, phytoProductList, cultures, culturesSelected, phytoProductSelected }) => {\n  const MONTHS = [\n    i18n.t('months.january'),\n    i18n.t('months.february'),\n    i18n.t('months.march'),\n    i18n.t('months.april'),\n    i18n.t('months.may'),\n    i18n.t('months.june'),\n    i18n.t('months.july'),\n    i18n.t('months.august'),\n    i18n.t('months.september'),\n    i18n.t('months.october'),\n    i18n.t('months.november'),\n    i18n.t('months.december'),\n  ]\n  \n  const DAYS = [\n    i18n.t('days.sunday'),\n    i18n.t('days.monday'),\n    i18n.t('days.tuesday'),\n    i18n.t('days.wednesday'),\n    i18n.t('days.thursday'),\n    i18n.t('days.friday'),\n    i18n.t('days.saturday'),\n  ]\n\n  const [loading, setLoading] = useState(false)\n\n  const [data, setData] = useState({})\n  const [blurred, setBlurred] = useState(false)\n\n  const [currentParams, setCurrentParams] = useState(\"\")\n\n  const openPicker = (screen) => {\n    navigation.navigate(screen, {backScreen: 'Pulverisation'})\n  }\n\n  useEffect( () => {\n    // console.log(\"Amplitude : \", ampEvent.render)\n    Amplitude.logEventWithProperties(ampEvent.render, {\n      timestamp: Date.now()\n    })\n    const unsubscribe = navigation.addListener('didFocus', () => {\n      // console.log(\"Amplitude : \", ampEvent.render)\n      Amplitude.logEventWithProperties(ampEvent.render, {\n        timestamp: Date.now()\n      })\n    })\n    return () => unsubscribe.remove()\n  }, [])\n\n  useEffect(() => {\n    if (culturesSelected.length > 0 && phytoProductSelected.length > 0 && !blurred) {\n      loadMeteoIntervention()\n    }\n  }, [culturesSelected, phytoProductSelected, loadMeteoIntervention])\n  \n  useEffect(() => {\n    const unsubscribe = navigation.addListener('didBlur', () => {\n      setBlurred(true)\n    });\n\n    const unsubscribeFocus = navigation.addListener('willFocus', () => {\n      setBlurred(false)\n      loadMeteoIntervention()\n    });\n\n    return () => {\n      unsubscribe.remove()\n      unsubscribeFocus.remove()\n    };\n  }, [navigation, loadMeteoIntervention, culturesSelected, phytoProductSelected, currentParams])\n\n  const loadMeteoIntervention = useCallback(async () => {\n    setLoading(true)\n\n    let js = JSON.stringify({\n      products: phytoProductSelected,\n      cultures: culturesSelected\n    })\n\n    if (currentParams === js) {\n      setLoading(false)\n      return\n    }\n    setCurrentParams(js)\n\n    let result = await getMeteoIntervention({\n      products: phytoProductSelected,\n      cultures: culturesSelected\n    })\n\n    setData(result)\n    setLoading(false)\n  }, [setCurrentParams, currentParams, phytoProductSelected, culturesSelected])\n\n  const goToDetails = ({ day, hour, data }) => {\n    // console.log(\"Amplitude : \", ampEvent.click_goToPulvDetails)\n    Amplitude.logEventWithProperties(ampEvent.click_goToPulvDetails, {\n      timestamp: Date.now()\n    })\n\n    navigation.navigate('NextPulverisationDetails', {\n      day,\n      hour,\n      data,\n    })\n  }\n\n  const formatDay = (d) => {\n    let now = new Date(`${d}`)\n    return `${capitalize(DAYS[now.getDay()])} ${now.getDate()} ${capitalize(MONTHS[now.getMonth()])}`\n  }\n\n  const getWidth = () => {\n    return (Dimensions.get('window').width - 64) / 12\n  }\n\n  return (\n    <SafeAreaView style={styles.statusbar} forceInset={{top:'always'}}>\n      <StatusBar translucent backgroundColor=\"transparent\" />\n        <Content style={styles.content}>\n          <Header style={styles.header} androidStatusBarColor=\"transparent\" hasTabs transparent iosBarStyle=\"light-content\">\n            <Left style={{ flex: 1 }}>\n              <Button transparent onPress={() => navigation.toggleDrawer() }>\n                <Icon name='menu' style={{ color: '#fff' }} />\n              </Button>\n            </Left>\n            <Body style={styles.headerBody}>\n              <Title style={styles.headerTitle}>{i18n.t('pulverisation.header')}</Title>\n            </Body>\n            <Right style={{ flex: 1 }}></Right>\n          </Header>\n          <View style={styles.pulveContainer}>\n            <TouchableWithoutFeedback onPress={() => openPicker(\"HygoCulturePicker\")}>\n              <View style={styles.picker}>\n              { culturesSelected.length === 0 && (\n                <Text style={styles.pickerText}>{i18n.t('pulverisation.culture_type')}</Text>\n              )}\n              { culturesSelected.length === cultures.length && (\n                <Text style={styles.pickerText}>{i18n.t('pulverisation.all_cultures')}</Text>\n              )}\n              { culturesSelected.length < cultures.length && culturesSelected.length > 0 && (\n                <Text style={styles.pickerText}>{ cultures.filter(pp => culturesSelected.indexOf(pp.id) > -1).map(pp => i18n.t(`cultures.${pp.name}`)).join(', ') }</Text>\n              )}\n              <Icon style={styles.pickerIcon} type=\"Feather\" name=\"chevron-down\" />\n              </View>\n            </TouchableWithoutFeedback>\n\n            <View style={{ height: 10 }}></View>\n\n            <TouchableWithoutFeedback onPress={() => openPicker(\"HygoProductPicker\")}>\n              <View style={styles.picker}>\n                { phytoProductSelected.length === 0 && (\n                  <Text style={styles.pickerText}>{i18n.t('pulverisation.product_type')}</Text>\n                )}\n                { phytoProductSelected.length > 0 && (\n                  <Text style={styles.pickerText}>{ phytoProductList.filter(pp => phytoProductSelected.indexOf(pp.id) > -1).map(pp => i18n.t(`products.${pp.name}`)).join(', ') }</Text>\n                )}\n                <Icon style={styles.pickerIcon} type=\"Feather\" name=\"chevron-down\" />\n              </View>\n            </TouchableWithoutFeedback>\n          </View>\n\n          { (phytoProductSelected.length === 0 || culturesSelected.length === 0) && (\n            <View style={styles.bottomTextContainer}>\n              <Text style={styles.bottomText}>{i18n.t('pulverisation.select_text')}</Text>\n            </View>\n          )}\n\n          { phytoProductSelected.length > 0 && culturesSelected.length > 0 && (\n            <View style={styles.hoursSelector}>\n              <Text style={styles.hoursText}>{i18n.t('pulverisation.select_hours_text')}</Text>\n\n              <View style={{ marginTop: 10, marginBottom: 40 }}>\n                { loading && (\n                  <Spinner size={16} color={COLORS.CYAN} style={{ height: 16, marginTop: 16 }} />\n                )}\n                { !loading && (\n                  <React.Fragment>\n                    { data.days && data.days.slice(0, 3).map((d, didx) => {\n                      return (\n                        <View key={d}>\n                          { (((new Date()).getHours() < 12 || didx > 0) && ((new Date()).getHours() >= 12 || didx < 2)) && (\n                            <View style={styles.dayLine} key={`${d}-0`}>\n                              <Text style={styles.dayText}>{formatDay(d)}</Text>\n                              <View style={styles.productCondition}>\n                                { [...Array(12).keys()].map(i => {\n                                  let padded = `${i}`.padStart(2, '0')\n                                  let dayProduct = data.data[d].hours1\n                                  return (\n                                    <TouchableOpacity key={i} style={[styles.parcelle, {\n                                      backgroundColor: COLORS[dayProduct[padded].condition]\n                                    }]} onPress={() => goToDetails({\n                                      day: d,\n                                      hour: padded,\n                                      data\n                                    })}>\n                                      { dayProduct[padded].conflict && (\n                                        <Text style={styles.parcelleExclamation}>!</Text>\n                                      )}\n                                    </TouchableOpacity>\n                                  )\n                                }) }\n                              </View>\n                              <View style={styles.hoursDetailsContainer}>\n                                <Text style={[styles.hoursDetails, { left: getWidth()}]}>01H</Text>\n                                <Text style={[styles.hoursDetails, { left: 3 * getWidth()}]}>03H</Text>\n                                <Text style={[styles.hoursDetails, { left: 5 * getWidth()}]}>05H</Text>\n                                <Text style={[styles.hoursDetails, { left: 7 * getWidth()}]}>07H</Text>\n                                <Text style={[styles.hoursDetails, { left: 9 * getWidth()}]}>09H</Text>\n                                <Text style={[styles.hoursDetails, { left: 11 * getWidth()}]}>11H</Text>\n                              </View>\n                            </View>\n                          )}\n                          { didx < 2 && (\n                            <View style={styles.dayLine} key={`${d}-1`}>\n                              <Text style={styles.dayText}>{formatDay(d)}</Text>\n                              <View style={styles.productCondition}>\n                                { [...Array(12).keys()].map(i => {\n                                  let padded = `${i+12}`.padStart(2, '0')\n                                  let dayProduct = data.data[d].hours1\n                                  return (\n                                    <TouchableOpacity key={i} style={[styles.parcelle, {\n                                      backgroundColor: COLORS[dayProduct[padded].condition]\n                                    }]} onPress={() => goToDetails({\n                                      day: d,\n                                      hour: padded,\n                                      data\n                                    })}>\n                                      { dayProduct[padded].conflict && (\n                                        <Text style={styles.parcelleExclamation}>!</Text>\n                                      )}\n                                    </TouchableOpacity>\n                                  )\n                                }) }\n                              </View>\n                              <View style={styles.hoursDetailsContainer}>\n                                <Text style={[styles.hoursDetails, { left: getWidth()}]}>13H</Text>\n                                <Text style={[styles.hoursDetails, { left: 3 * getWidth()}]}>15H</Text>\n                                <Text style={[styles.hoursDetails, { left: 5 * getWidth()}]}>17H</Text>\n                                <Text style={[styles.hoursDetails, { left: 7 * getWidth()}]}>19H</Text>\n                                <Text style={[styles.hoursDetails, { left: 9 * getWidth()}]}>21H</Text>\n                                <Text style={[styles.hoursDetails, { left: 11 * getWidth()}]}>23H</Text>\n                              </View>\n                            </View>\n                          )}\n                        </View>\n                      )\n                    })}\n                    \n                  </React.Fragment>\n                )}\n              </View>\n            </View>\n          )}\n        </Content>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  dayLine: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: 10,\n  },\n  dayText: {\n    fontFamily: 'nunito-bold',\n    fontSize: 14,\n    color: COLORS.DARK_BLUE,\n    textTransform: 'uppercase',\n  },\n  statusbar: { \n    flex: 1, \n    display: 'flex',\n    backgroundColor: Platform.OS === 'ios' ? 'black' : COLORS.CYAN,\n  },\n  container: { \n    flex: 1, \n    display: 'flex', \n  },\n  header: {\n    backgroundColor: COLORS.CYAN,\n  },\n  headerBody: {\n    textAlign: 'center',\n    display: 'flex',\n    alignItems: 'center',\n    flex: 6,\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 24\n  },  \n  content: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  tabBar: { \n    backgroundColor: 'transparent', \n    shadowOffset: { width: 0, height: 0}, \n    elevation: 0,\n    borderBottomWidth: 0\n  },\n  tabStyle: {\n    backgroundColor: 'transparent',\n    borderBottomWidth: 0\n  },\n  textStyle: {\n    textTransform: 'uppercase',\n    color: '#fff',\n    fontSize: 14,\n    fontFamily: 'nunito-bold',\n  },\n  pulveContainer: {\n    backgroundColor: COLORS.CYAN,\n    paddingRight: 15,\n    paddingTop: 30,\n    paddingBottom: 40,\n  },\n  picker: {\n    shadowColor: '#000',\n    shadowOpacity: .2,\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    elevation: 3,\n    backgroundColor: '#fff',\n    paddingLeft: 20,\n    borderTopRightRadius: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    paddingRight: 20,\n    paddingVertical: 10,\n  },\n  pickerText: {\n    flex: 1,\n    color: COLORS.DARK_BLUE,\n    fontSize: 16,\n    fontFamily: 'nunito-bold',\n  },\n  pickerIcon: {\n    marginLeft: 5,\n    fontSize: 20,\n    color: COLORS.DARK_BLUE\n  },\n  bottomText: {\n    fontSize: 18,\n    color: '#fff',\n    fontFamily: 'nunito-italic',\n  },\n  bottomTextContainer: {\n    paddingTop: 40,\n    paddingLeft: 24,\n    paddingRight: 60,\n  },\n  hoursSelector: {\n    backgroundColor: '#fff',\n    padding: 22,\n    flex: 1,\n  },\n  hoursText: {\n    fontFamily: 'nunito-italic',\n    fontSize: 18,\n    color: '#6b6b6b',\n  },\n  productCondition: {\n    height: 45,\n    flexDirection: 'row',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  parcelle: {\n    height: 45,\n    zIndex: 5,\n    width: 20,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  parcelleExclamation: {\n    fontFamily: 'nunito-heavy',\n    fontSize: 16,\n    color: '#fff',\n  },\n  hoursDetailsContainer: {\n    flexDirection: 'row',\n    display: 'flex',\n  },\n  hoursDetails: {\n    fontFamily: 'nunito-bold',\n    fontSize: 12,\n    color: '#aaaaaa',\n    position: 'absolute'\n  }\n})\n\nconst mapStateToProps = (state) => ({\n  cultures: state.metadata.cultures,\n  phytoProductList: state.pulve.phytoProductList,\n  culturesSelected: state.pulve.culturesSelected,\n  phytoProductSelected: state.pulve.phytoProductSelected,\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  updatePhytoProductSelected: (selected) => dispatch(updatePhytoProductSelected(selected)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextPulverisationScreen);\n"]},"metadata":{},"sourceType":"module"}