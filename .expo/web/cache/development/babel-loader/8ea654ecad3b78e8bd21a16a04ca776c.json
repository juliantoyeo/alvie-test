{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/InterventionMapScreen.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { connect } from 'react-redux';\nimport { Button, Icon, Text, Left, Right, Body, Header, Title } from 'native-base';\nimport COLORS from \"../colors\";\nimport i18n from 'i18n-js';\nimport HygoMap from \"../components/HygoMap\";\nimport { updateIntervention, getInterventionByID, deleteIntervention } from \"../api/hygoApi\";\nimport { updateProductsInterv as _updateProductsInterv } from \"../store/actions/intervActions\";\nimport moment from 'moment-timezone';\nimport { Amplitude, AMPLITUDE_EVENTS } from \"../amplitude\";\nvar ampEvent = AMPLITUDE_EVENTS.interventionMapScreen;\n\nvar InterventionMapScreen = function InterventionMapScreen(_ref) {\n  var navigation = _ref.navigation,\n      phytoProductList = _ref.phytoProductList,\n      updateProductsInterv = _ref.updateProductsInterv;\n\n  var _navigation$getParam = navigation.getParam('result'),\n      intervention = _navigation$getParam.intervention,\n      byParcelle = _navigation$getParam.byParcelle,\n      data = _navigation$getParam.data,\n      region = _navigation$getParam.region;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      field = _useState2[0],\n      setField = _useState2[1];\n\n  useEffect(function () {\n    Amplitude.logEventWithProperties(ampEvent.render, {\n      timestamp: Date.now()\n    });\n  }, []);\n\n  var isRacinaire = function isRacinaire() {\n    if (intervention.products) {\n      return phytoProductList.filter(function (pp) {\n        return intervention.products.includes(pp.id) && pp.isRacinaire;\n      }).length > 0;\n    } else if (intervention.phytoproduct) {\n      return intervention.phytoproduct && intervention.phytoproduct.indexOf('acinaire') > -1;\n    }\n\n    return false;\n  };\n\n  var getRFromProduct = useCallback(function () {\n    if (intervention.products) {\n      var p = [];\n\n      for (var i = 0; i < intervention.products.length; i++) {\n        var productId = intervention.products[i];\n\n        switch (productId) {\n          case 1:\n          case 7:\n            p.push(\"r6\");\n\n          case 11:\n            p.push(\"r3\");\n\n          default:\n            p.push(\"r2\");\n        }\n      }\n\n      if (p.includes(\"r6\")) {\n        return \"r6\";\n      } else if (p.includes(\"r3\")) {\n        return \"r3\";\n      } else {\n        return \"r2\";\n      }\n    }\n\n    return \"r2\";\n  }, [intervention.products]);\n\n  var getPhyto = function getPhyto() {\n    if (intervention.products) {\n      return intervention.products;\n    } else if (intervention.phytoproduct) {\n      return phytoProductList.filter(function (pp) {\n        return pp.name === intervention.phytoproduct;\n      }).map(function (p) {\n        return p.id;\n      });\n    }\n\n    return [];\n  };\n\n  var getPhytoText = function getPhytoText() {\n    if (products && products.length > 0) {\n      var ptext = [];\n\n      if (products.indexOf(-1) > -1) {\n        ptext.push(i18n.t('intervention_map.other_farm_work'));\n      }\n\n      ptext = ptext.concat(phytoProductList.filter(function (pp) {\n        return products.includes(pp.id);\n      }).map(function (p) {\n        return i18n.t(\"products.\" + p.name);\n      }));\n      return i18n.t('intervention_map.header_phyto', {\n        phyto: ptext.join(', ')\n      });\n    } else if (intervention.phytoproduct) {\n      return i18n.t('intervention_map.header_phyto', {\n        phyto: intervention.phytoproduct\n      });\n    }\n\n    return i18n.t('intervention_map.header_phyto', {\n      phyto: i18n.t('intervention.no_phyto_selected')\n    });\n  };\n\n  var setProducts = function setProducts(p) {\n    return _regeneratorRuntime.async(function setProducts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(updateIntervention(p, intervention.interventionid));\n\n          case 2:\n            updateProductsInterv(p, intervention.id);\n            setCurrentProducts(p);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState3 = useState(getPhyto()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      products = _useState4[0],\n      setCurrentProducts = _useState4[1];\n\n  var getDay = useCallback(function () {\n    return moment.utc(intervention.starttime).tz('Europe/Paris').format('DD/MM');\n  }, [intervention.starttime]);\n  var getStartHour = useCallback(function () {\n    return moment.utc(intervention.starttime).tz('Europe/Paris').format('HH:mm');\n  }, [intervention.starttime]);\n  var getEndHour = useCallback(function () {\n    return moment.utc(intervention.endtime).tz('Europe/Paris').format('HH:mm');\n  }, [intervention.endtime]);\n\n  var getTotalArea = function getTotalArea() {\n    var fields = intervention.fields;\n\n    if (!fields) {\n      return 0;\n    }\n\n    var area = 0.0;\n\n    for (var i = 0; i < fields.length; i++) {\n      if (!fields[i].Parcelle) {\n        continue;\n      }\n\n      area += fields[i].Parcelle.area;\n    }\n\n    return (area / 10000).toFixed(1);\n  };\n\n  var handleFieldSelection = function handleFieldSelection(field) {\n    if (!field) {\n      setField(null);\n      return;\n    }\n\n    setField(field);\n  };\n\n  var getAreaPerCondition = function getAreaPerCondition() {\n    var conditions = ['EXCELLENT', 'GOOD', 'CORRECT', 'BAD', 'FORBIDDEN'];\n    var result = {};\n\n    for (var i = 0; i < intervention.fields.length; i++) {\n      if (!intervention.fields[i].Parcelle) {\n        continue;\n      }\n\n      var p = byParcelle[intervention.fields[i].parcelleId];\n\n      if (!p) {\n        continue;\n      }\n\n      result[p.condition] = (result[p.condition] || 0) + intervention.fields[i].Parcelle.area;\n    }\n\n    var output = [],\n        total = getTotalArea();\n\n    for (var _i = 0; _i < conditions.length; _i++) {\n      if (result[conditions[_i]]) {\n        output.push({\n          condition: conditions[_i],\n          area: (result[conditions[_i]] / 10000).toFixed(1),\n          percent: Math.round(result[conditions[_i]] / 10000 / total * 100)\n        });\n      }\n    }\n\n    return output;\n  };\n\n  var onDelete = function onDelete() {\n    var res;\n    return _regeneratorRuntime.async(function onDelete$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(deleteIntervention(intervention.id));\n\n          case 2:\n            res = _context2.sent;\n            res == 'OK' && navigation.navigate(\"Intervention\");\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!intervention.avgtemp) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: [styles.statusbar, {\n      backgroundColor: 'black'\n    }],\n    forceInset: {\n      top: 'always'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    translucent: true,\n    backgroundColor: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, React.createElement(Header, {\n    style: styles.header,\n    androidStatusBarColor: COLORS.CYAN,\n    iosBarStyle: \"light-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, React.createElement(Left, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"close\",\n    style: {\n      color: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }))), React.createElement(Body, {\n    style: styles.headerBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, React.createElement(Title, {\n    style: styles.headerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, i18n.t('intervention_map.header', {\n    date: getDay()\n  }))), React.createElement(Right, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    onPress: onDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"trash\",\n    style: {\n      color: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  })))), React.createElement(View, {\n    style: styles.phytoDetail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.phytoDetailRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    style: [styles.phytoDetailImage, {\n      height: 28\n    }],\n    source: require(\"../../assets/phyto.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      navigation.navigate(\"HygoProductPicker\", {\n        source: 'intervention',\n        set: setProducts,\n        initial: products,\n        back: 'LoadingScreen',\n        backParams: {\n          next: 'InterventionMapScreen',\n          params: {\n            id: intervention.id\n          },\n          action: getInterventionByID\n        },\n        backScreen: 'Intervention'\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.picker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.phytoDetailText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, getPhytoText()), React.createElement(Icon, {\n    style: styles.pickerIcon,\n    type: \"Feather\",\n    name: \"chevron-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  })))), React.createElement(View, {\n    style: styles.phytoDetailRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    style: styles.phytoDetailImage,\n    source: require(\"../../assets/clock.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.phytoDetailText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, i18n.t('intervention_map.header_clock', {\n    start: getStartHour(),\n    end: getEndHour()\n  })))), React.createElement(View, {\n    style: styles.metricsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.metrics,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, typeof data.minwind !== 'undefined' && React.createElement(View, {\n    style: styles.elem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/ICN-Wind.png\"),\n    style: styles.elemIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.big,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, Math.round(data.avgwind) + \" km/h\"), React.createElement(Text, {\n    style: styles.mini,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, \"min \" + Math.round(data.minwind) + \" km/h\"), React.createElement(Text, {\n    style: styles.mini,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, \"max \" + Math.round(data.maxwind) + \" km/h\")), typeof data.precipitation !== 'undefined' && React.createElement(View, {\n    style: styles.elem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/ICN-Rain.png\"),\n    style: styles.elemIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.big,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, Math.round(data.precipitation) + \" mm\")), React.createElement(View, {\n    style: styles.elem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/ICN-Temperature.png\"),\n    style: styles.elemIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.big,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  }, intervention.avgtemp.toFixed(1) + \"\\xB0C\"), React.createElement(Text, {\n    style: styles.mini,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, i18n.t('intervention_map.min', {\n    value: intervention.mintemp.toFixed(1) + \"\\xB0C\"\n  })), React.createElement(Text, {\n    style: styles.mini,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }, i18n.t('intervention_map.max', {\n    value: intervention.maxtemp.toFixed(1) + \"\\xB0C\"\n  }))), React.createElement(View, {\n    style: styles.elem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/ICN-Hygro.png\"),\n    style: styles.elemIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.big,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }, Math.round(intervention.avghumi) + \"%\"), React.createElement(Text, {\n    style: styles.mini,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }, i18n.t('intervention_map.min', {\n    value: Math.round(intervention.minhumi) + \"%\"\n  })), React.createElement(Text, {\n    style: styles.mini,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }, i18n.t('intervention_map.max', {\n    value: Math.round(intervention.maxhumi) + \"%\"\n  })))), React.createElement(Text, {\n    style: styles.metricsSurface,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, i18n.t('intervention_map.surface', {\n    surface: getTotalArea()\n  }))), field === null && React.createElement(View, {\n    style: styles.legend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, getAreaPerCondition().map(function (c) {\n    return React.createElement(View, {\n      key: c.condition,\n      style: [styles.legendLine, {\n        backgroundColor: COLORS[c.condition]\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: [styles.legendText, {\n        flex: 2\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 19\n      }\n    }, i18n.t(\"intervention_map.\" + c.condition.toLowerCase())), React.createElement(Text, {\n      style: [styles.legendText, {\n        flex: 1\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 19\n      }\n    }, c.area + \" ha\"), React.createElement(Text, {\n      style: [styles.legendText, {\n        flex: 1\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 19\n      }\n    }, c.percent + \"%\"));\n  })), field !== null && React.createElement(React.Fragment, null, React.createElement(View, {\n    style: [styles.selected, {\n      backgroundColor: byParcelle[field.parcelleId] && byParcelle[field.parcelleId].condition ? COLORS[byParcelle[field.parcelleId].condition] : field.colorField === COLORS.DEFAULT_FIELD ? COLORS.CYAN : field.colorField\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.selectedLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: styles.selectedElem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.selectedImageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 19\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/ICN-Temperature.png\"),\n    style: styles.selectedImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.selectedTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: styles.selectedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 21\n    }\n  }, i18n.t('intervention_map.avg', {\n    value: field.avgtemp.toFixed(1) + \"\\xB0C\"\n  })), React.createElement(Text, {\n    style: styles.selectedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 21\n    }\n  }, i18n.t('intervention_map.min', {\n    value: field.mintemp.toFixed(1) + \"\\xB0C\"\n  })), React.createElement(Text, {\n    style: styles.selectedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 21\n    }\n  }, i18n.t('intervention_map.max', {\n    value: field.maxtemp.toFixed(1) + \"\\xB0C\"\n  })))), (byParcelle[field.parcelleId] && typeof byParcelle[field.parcelleId].wind !== 'undefined' || typeof field.precipitation !== 'undefined') && React.createElement(View, {\n    style: [styles.selectedElem, {\n      marginTop: 20\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: styles.selectedImageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/ICN-Wind.png\"),\n    style: styles.selectedImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 23\n    }\n  })), React.createElement(View, {\n    style: styles.selectedTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.selectedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 23\n    }\n  }, byParcelle[field.parcelleId].winddirection + \" \" + byParcelle[field.parcelleId].wind.toFixed(0) + \" km/h\"), React.createElement(Text, {\n    style: styles.selectedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 23\n    }\n  }, \"raf \" + byParcelle[field.parcelleId].gust.toFixed(0) + \" km/h\"))), byParcelle[field.parcelleId] && typeof byParcelle[field.parcelleId].t3 !== 'undefined' && React.createElement(View, {\n    style: [styles.selectedElem, {\n      marginTop: 20\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: styles.selectedTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.selectedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 23\n    }\n  }, i18n.t(\"realtime.gel_\" + (byParcelle[field.parcelleId].t3 <= -2 ? 'risky' : 'none'))))), isRacinaire() && byParcelle[field.parcelleId] && typeof byParcelle[field.parcelleId].deltatemp !== 'undefined' && React.createElement(View, {\n    style: [styles.selectedElem],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: styles.selectedTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.selectedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 23\n    }\n  }, i18n.t(\"meteo_overlay.delta_temp\", {\n    value: byParcelle[field.parcelleId].deltatemp\n  }))))), React.createElement(View, {\n    style: [styles.selectedLine],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 15\n    }\n  }, byParcelle[field.parcelleId] && typeof byParcelle[field.parcelleId].wind !== 'undefined' && React.createElement(View, {\n    style: [styles.selectedElem, {\n      marginBottom: 20\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: styles.selectedImageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/ICN-Hygro.png\"),\n    style: styles.selectedImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 23\n    }\n  })), React.createElement(View, {\n    style: styles.selectedTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.selectedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 23\n    }\n  }, i18n.t('intervention_map.avg', {\n    value: Math.round(field.avghumi) + \"%\"\n  })), React.createElement(Text, {\n    style: styles.selectedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 23\n    }\n  }, i18n.t('intervention_map.min', {\n    value: Math.round(field.minhumi) + \"%\"\n  })), React.createElement(Text, {\n    style: styles.selectedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 23\n    }\n  }, i18n.t('intervention_map.max', {\n    value: Math.round(field.maxhumi) + \"%\"\n  })))), byParcelle[field.parcelleId] && typeof byParcelle[field.parcelleId].precipitation !== 'undefined' && React.createElement(View, {\n    style: [styles.selectedElem],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: styles.selectedImageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/ICN-Rain.png\"),\n    style: styles.selectedImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 23\n    }\n  })), React.createElement(View, {\n    style: styles.selectedTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.selectedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 23\n    }\n  }, i18n.t(\"meteo_overlay.precipitation_\" + getRFromProduct(), {\n    value: Math.round(parseFloat(byParcelle[field.parcelleId][getRFromProduct()]))\n  })))), (!byParcelle[field.parcelleId] || typeof byParcelle[field.parcelleId].wind === 'undefined') && (!byParcelle[field.parcelleId] || typeof field.precipitation === 'undefined') && React.createElement(View, {\n    style: [styles.selectedElem],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: styles.selectedImageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/ICN-Hygro.png\"),\n    style: styles.selectedImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 23\n    }\n  })), React.createElement(View, {\n    style: styles.selectedTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.selectedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 23\n    }\n  }, i18n.t('intervention_map.avg', {\n    value: Math.round(field.avghumi) + \"%\"\n  })), React.createElement(Text, {\n    style: styles.selectedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 23\n    }\n  }, i18n.t('intervention_map.min', {\n    value: Math.round(field.minhumi) + \"%\"\n  })), React.createElement(Text, {\n    style: styles.selectedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 23\n    }\n  }, i18n.t('intervention_map.max', {\n    value: Math.round(field.maxhumi) + \"%\"\n  })))), !isRacinaire() && byParcelle[field.parcelleId] && typeof byParcelle[field.parcelleId].deltatemp !== 'undefined' && React.createElement(View, {\n    style: [styles.selectedElem, {\n      marginTop: 32\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: styles.selectedTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.selectedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 23\n    }\n  }, i18n.t(\"meteo_overlay.delta_temp\", {\n    value: byParcelle[field.parcelleId].deltatemp\n  })))), isRacinaire() && byParcelle[field.parcelleId] && typeof byParcelle[field.parcelleId].soilhumi !== 'undefined' && React.createElement(View, {\n    style: [styles.selectedElem, {\n      marginTop: 32,\n      marginLeft: 20\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: styles.selectedImageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/sprout.png\"),\n    style: styles.selectedImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 23\n    }\n  })), React.createElement(View, {\n    style: styles.selectedTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.selectedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 23\n    }\n  }, i18n.t(\"realtime.soil_humi\", {\n    value: byParcelle[field.parcelleId].soilhumi\n  })))))), React.createElement(View, {\n    style: styles.carretContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: [styles.triangle, {\n      borderBottomColor: byParcelle[field.parcelleId] && byParcelle[field.parcelleId].condition ? COLORS[byParcelle[field.parcelleId].condition] : field.colorField === COLORS.DEFAULT_FIELD ? COLORS.CYAN : field.colorField\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    style: [styles.mapContainer, {\n      top: field != null ? -20 : 0\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }\n  }, intervention.id && React.createElement(HygoMap, {\n    intervention: intervention,\n    byParcelle: byParcelle,\n    handleFieldSelection: handleFieldSelection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  header: {\n    backgroundColor: COLORS.CYAN\n  },\n  headerBody: {\n    flex: 3,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 20\n  },\n  phytoDetail: {\n    backgroundColor: COLORS.BEIGE,\n    display: 'flex',\n    paddingTop: 7,\n    paddingBottom: 7\n  },\n  picker: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 10,\n    paddingRight: 30\n  },\n  pickerIcon: {\n    marginLeft: 5,\n    fontSize: 20,\n    color: COLORS.DARK_BLUE\n  },\n  phytoDetailRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    paddingRight: 42,\n    paddingTop: 7,\n    paddingBottom: 7\n  },\n  phytoDetailImage: {\n    height: 24,\n    width: 24,\n    marginRight: 10,\n    resizeMode: 'contain'\n  },\n  phytoDetailText: {\n    fontSize: 16,\n    fontFamily: 'nunito-regular',\n    color: COLORS.DARK_BLUE\n  },\n  metrics: {\n    backgroundColor: COLORS.BEIGE,\n    borderWidth: 1,\n    borderRadius: 2,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'space-evenly'\n  },\n  elem: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 5\n  },\n  elemIcon: {\n    height: 24,\n    tintColor: '#aaaaaa'\n  },\n  big: {\n    fontFamily: 'nunito-heavy',\n    fontSize: 16,\n    color: COLORS.DARK_BLUE,\n    marginTop: 5\n  },\n  mini: {\n    fontSize: 12,\n    fontFamily: 'nunito-heavy',\n    color: '#aaa'\n  },\n  metricsContainer: {\n    backgroundColor: '#fff',\n    paddingTop: 22,\n    paddingLeft: 15,\n    paddingRight: 15,\n    paddingBottom: 22\n  },\n  metricsSurface: {\n    fontSize: 14,\n    fontFamily: 'nunito-bold',\n    color: COLORS.DARK_BLUE,\n    marginTop: 21,\n    marginLeft: 5\n  },\n  legend: {},\n  legendLine: {\n    padding: 10,\n    paddingLeft: 15,\n    paddingRight: 15,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  legendText: {\n    fontFamily: 'nunito-heavy',\n    fontSize: 14,\n    color: '#fff'\n  },\n  selected: {\n    paddingTop: 25,\n    paddingBottom: 25,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'flex-start'\n  },\n  selectedLine: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    justifyContent: 'space-between',\n    flex: 1,\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  selectedElem: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'center'\n  },\n  selectedImageContainer: {\n    paddingRight: 20\n  },\n  selectedImage: {\n    width: 24,\n    resizeMode: 'contain',\n    tintColor: '#fff'\n  },\n  selectedText: {\n    color: '#fff',\n    fontFamily: 'nunito-heavy',\n    fontSize: 14\n  },\n  carretContainer: {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    alignItems: 'center',\n    zIndex: 5\n  },\n  mapContainer: {\n    zIndex: 1\n  },\n  triangle: {\n    zIndex: 5,\n    width: 0,\n    height: 0,\n    backgroundColor: 'transparent',\n    borderStyle: 'solid',\n    borderLeftWidth: 20,\n    borderRightWidth: 20,\n    borderBottomWidth: 20,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    transform: [{\n      rotate: '180deg'\n    }]\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    token: state.authen.token,\n    phytoProductList: state.pulve.phytoProductList,\n    interventionValues: state.interv.interventions\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    updateProductsInterv: function updateProductsInterv(products, id) {\n      return dispatch(_updateProductsInterv(products, id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InterventionMapScreen);","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/screens/InterventionMapScreen.js"],"names":["React","useState","useCallback","useEffect","SafeAreaView","connect","Button","Icon","Text","Left","Right","Body","Header","Title","COLORS","i18n","HygoMap","updateIntervention","getInterventionByID","deleteIntervention","updateProductsInterv","moment","Amplitude","AMPLITUDE_EVENTS","ampEvent","interventionMapScreen","InterventionMapScreen","navigation","phytoProductList","getParam","intervention","byParcelle","data","region","field","setField","logEventWithProperties","render","timestamp","Date","now","isRacinaire","products","filter","pp","includes","id","length","phytoproduct","indexOf","getRFromProduct","p","i","productId","push","getPhyto","name","map","getPhytoText","ptext","t","concat","phyto","join","setProducts","interventionid","setCurrentProducts","getDay","utc","starttime","tz","format","getStartHour","getEndHour","endtime","getTotalArea","fields","area","Parcelle","toFixed","handleFieldSelection","getAreaPerCondition","conditions","result","parcelleId","condition","output","total","percent","Math","round","onDelete","res","navigate","avgtemp","styles","statusbar","backgroundColor","top","container","header","CYAN","flex","goBack","color","headerBody","headerTitle","date","phytoDetail","phytoDetailRow","phytoDetailImage","height","require","source","set","initial","back","backParams","next","params","action","backScreen","picker","phytoDetailText","pickerIcon","start","end","metricsContainer","metrics","minwind","elem","elemIcon","big","avgwind","mini","maxwind","precipitation","value","mintemp","maxtemp","avghumi","minhumi","maxhumi","metricsSurface","surface","legend","c","legendLine","legendText","toLowerCase","selected","colorField","DEFAULT_FIELD","selectedLine","selectedElem","selectedImageContainer","selectedImage","selectedTextContainer","selectedText","wind","marginTop","winddirection","gust","t3","deltatemp","marginBottom","parseFloat","soilhumi","marginLeft","carretContainer","triangle","borderBottomColor","mapContainer","StyleSheet","create","display","justifyContent","alignItems","fontFamily","fontSize","BEIGE","paddingTop","paddingBottom","flexDirection","paddingHorizontal","paddingRight","DARK_BLUE","paddingLeft","width","marginRight","resizeMode","borderWidth","borderRadius","borderColor","borderBottomWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","padding","tintColor","zIndex","borderStyle","borderLeftWidth","borderRightWidth","borderLeftColor","borderRightColor","transform","rotate","mapStateToProps","state","token","authen","pulve","interventionValues","interv","interventions","mapDispatchToProps","dispatch","props"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport { ScrollView, StyleSheet, View, StatusBar, Image, TouchableWithoutFeedback } from 'react-native';\nimport { connect } from 'react-redux';\nimport { Button, Icon, Text, Left, Right, Body, Header, Title } from 'native-base';\n\nimport COLORS from '../colors'\nimport i18n from 'i18n-js'\n\nimport HygoMap from '../components/HygoMap'\nimport { updateIntervention, getInterventionByID, deleteIntervention } from '../api/hygoApi';\n\nimport { updateProductsInterv } from '../store/actions/intervActions'\n\nimport moment from 'moment-timezone'\n\nimport {Amplitude, AMPLITUDE_EVENTS} from '../amplitude'\nconst {interventionMapScreen: ampEvent} = AMPLITUDE_EVENTS\n\nconst InterventionMapScreen = ({ navigation, phytoProductList, updateProductsInterv }) => {\n  let { intervention, byParcelle, data, region } = navigation.getParam('result')\n  const [field, setField] = useState(null)\n\n  useEffect( () => {\n    // console.log(\"Amplitude : \", ampEvent.render)\n    Amplitude.logEventWithProperties(ampEvent.render, {\n      timestamp: Date.now()\n    })\n  }, [])\n\n  const isRacinaire = () => {\n    if (intervention.products) {\n      return phytoProductList.filter(pp => intervention.products.includes(pp.id) && pp.isRacinaire).length > 0\n    } else if (intervention.phytoproduct) {\n      return intervention.phytoproduct && intervention.phytoproduct.indexOf('acinaire') > -1\n    }\n    return false\n  }\n\n  const getRFromProduct = useCallback(() => {\n    if (intervention.products) {\n      let p = []\n      for (let i = 0; i < intervention.products.length; i++) {\n        let productId = intervention.products[i]\n        switch(productId) {\n          case 1:\n          case 7:\n            p.push(\"r6\")\n\n          case 11:\n            p.push(\"r3\")\n\n          default:\n            p.push(\"r2\")\n        }\n      }\n\n      if (p.includes(\"r6\")) {\n        return \"r6\"\n      } else if (p.includes(\"r3\")) {\n        return \"r3\"\n      } else {\n        return \"r2\"\n      }\n    }\n\n    return \"r2\"\n  }, [intervention.products])\n\n  const getPhyto = () => {\n    if (intervention.products) {\n      return intervention.products\n    } else if (intervention.phytoproduct) {\n      return phytoProductList.filter(pp => pp.name === intervention.phytoproduct).map(p => p.id)\n    }\n\n    return []\n  }\n\n  const getPhytoText = () => {\n    if (products && products.length > 0) {\n      let ptext = []\n      if (products.indexOf(-1) > -1) {\n        ptext.push(i18n.t('intervention_map.other_farm_work'))\n      }\n\n      ptext = ptext.concat(phytoProductList.filter(pp => products.includes(pp.id)).map(p => i18n.t(`products.${p.name}`)))\n      return i18n.t('intervention_map.header_phyto', { phyto: ptext.join(', ') })\n    } else if (intervention.phytoproduct) {\n      return i18n.t('intervention_map.header_phyto', { phyto: intervention.phytoproduct })\n    }\n\n    return i18n.t('intervention_map.header_phyto', { phyto: i18n.t('intervention.no_phyto_selected') })\n  }\n\n  const setProducts = async (p) => {\n    await updateIntervention(p, intervention.interventionid)\n    updateProductsInterv(p, intervention.id)\n    setCurrentProducts(p)\n  }\n  const [products, setCurrentProducts] = useState(getPhyto())\n\n  const getDay = useCallback(() => {\n    return moment.utc(intervention.starttime).tz('Europe/Paris').format('DD/MM')\n  }, [intervention.starttime])\n\n  const getStartHour = useCallback(() => {\n    return moment.utc(intervention.starttime).tz('Europe/Paris').format('HH:mm')\n  }, [intervention.starttime])\n\n  const getEndHour = useCallback(() => {\n    return moment.utc(intervention.endtime).tz('Europe/Paris').format('HH:mm')\n  }, [intervention.endtime])\n\n  const getTotalArea = () => {\n    let fields = intervention.fields\n    if (!fields) {\n      return 0\n    }\n\n    let area = 0.0\n    for (let i = 0; i < fields.length; i++) {\n      if (!fields[i].Parcelle) {\n        continue\n      }\n      area += fields[i].Parcelle.area\n    }\n\n    return (area / 10000).toFixed(1)\n  }\n\n  const handleFieldSelection = (field) => {\n    if (!field) {\n      setField(null)\n      return\n    }\n    setField(field)\n  }\n\n  const getAreaPerCondition = () => {\n    let conditions = ['EXCELLENT', 'GOOD', 'CORRECT', 'BAD', 'FORBIDDEN']\n    let result = {}\n    for (let i = 0; i < intervention.fields.length; i++) {\n      if (!intervention.fields[i].Parcelle) {\n        continue\n      }\n\n      let p = byParcelle[intervention.fields[i].parcelleId]\n      if (!p) { continue }\n      result[p.condition] = (result[p.condition]||0) + intervention.fields[i].Parcelle.area\n    }\n\n    let output = [], total = getTotalArea()\n    for (let i = 0; i < conditions.length; i++) {\n      if (result[conditions[i]]) {\n        output.push({\n          condition: conditions[i],\n          area: (result[conditions[i]] / 10000).toFixed(1),\n          percent: Math.round((result[conditions[i]] / 10000) / total * 100)\n        })\n      }\n    }\n\n    return output\n  }\n\n  const onDelete = async () => {\n      const res = await deleteIntervention(intervention.id);\n      (res == 'OK') && navigation.navigate(\"Intervention\")\n  }\n\n  if (!intervention.avgtemp) {\n    return (<View></View>)\n  }\n\n  return (\n    <SafeAreaView style={[styles.statusbar, { backgroundColor: 'black' }]} forceInset={{top:'always'}}>\n      <StatusBar translucent backgroundColor=\"transparent\" />\n      <ScrollView style={styles.container}>\n        <Header style={styles.header} androidStatusBarColor={COLORS.CYAN} iosBarStyle=\"light-content\">\n          <Left style={{ flex: 1 }}>\n            <Button transparent onPress={() => navigation.goBack()}>\n              <Icon name='close' style={{ color: '#fff' }} />\n            </Button>\n          </Left>\n          <Body style={styles.headerBody}>\n            <Title style={styles.headerTitle}>{i18n.t('intervention_map.header', { date: getDay()})}</Title>\n          </Body>\n          <Right style={{ flex: 1 }}>\n            <Button transparent onPress={onDelete}>\n              <Icon name='trash' style={{ color: '#fff' }} />\n            </Button>\n          </Right>\n        </Header>\n\n        <View style={styles.phytoDetail}>\n          <View style={styles.phytoDetailRow}>\n            <Image style={[styles.phytoDetailImage, { height: 28 }]} source={require('../../assets/phyto.png')} />\n            <TouchableWithoutFeedback onPress={() => {\n              navigation.navigate(\"HygoProductPicker\", \n                {  \n                  source: 'intervention', \n                  set: setProducts, \n                  initial: products,\n                  back: 'LoadingScreen',\n                  backParams: {\n                    next: 'InterventionMapScreen', \n                    params: {\n                      id: intervention.id\n                    },\n                    action: getInterventionByID,\n                  },\n                  backScreen: 'Intervention'\n              }) \n            }}>\n              <View style={styles.picker}>\n                <Text style={styles.phytoDetailText}>{getPhytoText()}</Text>\n                <Icon style={styles.pickerIcon} type=\"Feather\" name=\"chevron-down\" />\n              </View>\n            </TouchableWithoutFeedback>\n          </View>\n          <View style={styles.phytoDetailRow}>\n            <Image style={styles.phytoDetailImage} source={require('../../assets/clock.png')} />\n            <Text style={styles.phytoDetailText}>{i18n.t('intervention_map.header_clock', { start: getStartHour(), end: getEndHour() })}</Text>\n          </View>\n        </View>\n\n        <View style={styles.metricsContainer}>\n          <View style={styles.metrics}>\n            { typeof data.minwind !== 'undefined' && (\n              <View style={styles.elem}>\n                <Image source={require('../../assets/ICN-Wind.png')} style={styles.elemIcon} />\n                <Text style={styles.big}>{`${Math.round(data.avgwind)} km/h`}</Text>\n                <Text style={styles.mini}>{`min ${Math.round(data.minwind)} km/h`}</Text>\n                <Text style={styles.mini}>{`max ${Math.round(data.maxwind)} km/h`}</Text>\n              </View>\n            )}\n            { typeof data.precipitation !== 'undefined' && (\n              <View style={styles.elem}>\n                <Image source={require('../../assets/ICN-Rain.png')} style={styles.elemIcon} />\n                <Text style={styles.big}>{`${Math.round(data.precipitation)} mm`}</Text>\n              </View>\n            )}\n            <View style={styles.elem}>\n              <Image source={require('../../assets/ICN-Temperature.png')} style={styles.elemIcon} />\n              <Text style={styles.big}>{`${intervention.avgtemp.toFixed(1)}°C`}</Text>\n              <Text style={styles.mini}>{i18n.t('intervention_map.min', { value: `${intervention.mintemp.toFixed(1)}°C`})}</Text>\n              <Text style={styles.mini}>{i18n.t('intervention_map.max', { value: `${intervention.maxtemp.toFixed(1)}°C`})}</Text>\n            </View>\n            <View style={styles.elem}>\n              <Image source={require('../../assets/ICN-Hygro.png')} style={styles.elemIcon} />\n              <Text style={styles.big}>{`${Math.round(intervention.avghumi)}%`}</Text>\n              <Text style={styles.mini}>{i18n.t('intervention_map.min', { value: `${Math.round(intervention.minhumi)}%`})}</Text>\n              <Text style={styles.mini}>{i18n.t('intervention_map.max', { value: `${Math.round(intervention.maxhumi)}%`})}</Text>\n            </View>\n          </View>\n\n          <Text style={styles.metricsSurface}>{i18n.t('intervention_map.surface', { surface: getTotalArea() })}</Text>\n        </View>\n\n        { field === null && (\n          <View style={styles.legend}>\n            { getAreaPerCondition().map(c => {\n              return (\n                <View  key={c.condition} style={[styles.legendLine, { backgroundColor: COLORS[c.condition] }]}>\n                  <Text style={[styles.legendText, {flex: 2}]}>{i18n.t(`intervention_map.${c.condition.toLowerCase()}`)}</Text>\n                  <Text style={[styles.legendText, {flex: 1}]}>{`${c.area} ha`}</Text>\n                  <Text style={[styles.legendText, {flex: 1}]}>{`${c.percent}%`}</Text>\n                </View>\n              )\n            })}\n          </View>\n        )}\n\n        { field !== null && (\n          <>\n            <View style={[styles.selected, { backgroundColor: byParcelle[field.parcelleId] && byParcelle[field.parcelleId].condition ? COLORS[byParcelle[field.parcelleId].condition] : (field.colorField === COLORS.DEFAULT_FIELD ? COLORS.CYAN : field.colorField) }]}>\n              <View style={styles.selectedLine}>\n                <View style={styles.selectedElem}>\n                  <View style={styles.selectedImageContainer}>\n                    <Image source={require('../../assets/ICN-Temperature.png')} style={styles.selectedImage} />\n                  </View>\n                  <View style={styles.selectedTextContainer}>\n                    <Text style={styles.selectedText}>{i18n.t('intervention_map.avg', { value: `${field.avgtemp.toFixed(1)}°C`})}</Text>\n                    <Text style={styles.selectedText}>{i18n.t('intervention_map.min', { value: `${field.mintemp.toFixed(1)}°C`})}</Text>\n                    <Text style={styles.selectedText}>{i18n.t('intervention_map.max', { value: `${field.maxtemp.toFixed(1)}°C`})}</Text>\n                  </View>\n                </View>\n                { (byParcelle[field.parcelleId] && typeof byParcelle[field.parcelleId].wind !== 'undefined' || typeof field.precipitation !== 'undefined') && (\n                  <View style={[styles.selectedElem, { marginTop: 20 }]}>\n                    <View style={styles.selectedImageContainer}>\n                      <Image source={require('../../assets/ICN-Wind.png')} style={styles.selectedImage} />\n                    </View>\n                    <View style={styles.selectedTextContainer}>\n                      <Text style={styles.selectedText}>{`${byParcelle[field.parcelleId].winddirection} ${byParcelle[field.parcelleId].wind.toFixed(0)} km/h`}</Text>\n                      <Text style={styles.selectedText}>{`raf ${byParcelle[field.parcelleId].gust.toFixed(0)} km/h`}</Text>\n                    </View>\n                  </View>\n                )}\n                { (byParcelle[field.parcelleId] && typeof byParcelle[field.parcelleId].t3 !== 'undefined') && (\n                  <View style={[styles.selectedElem, { marginTop: 20 }]}>\n                    <View style={styles.selectedTextContainer}>\n                      <Text style={styles.selectedText}>{i18n.t(`realtime.gel_${byParcelle[field.parcelleId].t3 <= -2 ? 'risky' : 'none'}`)}</Text>\n                    </View>\n                  </View>\n                )}\n                { isRacinaire() && byParcelle[field.parcelleId] && typeof byParcelle[field.parcelleId].deltatemp !== 'undefined' && (\n                  <View style={[styles.selectedElem]}>\n                    <View style={styles.selectedTextContainer}>\n                      <Text style={styles.selectedText}>{i18n.t(`meteo_overlay.delta_temp`, { value: byParcelle[field.parcelleId].deltatemp })}</Text>\n                    </View>\n                  </View>\n                )}\n              </View>\n              <View style={[styles.selectedLine]}>\n                { byParcelle[field.parcelleId] && typeof byParcelle[field.parcelleId].wind !== 'undefined' && (\n                  <View style={[styles.selectedElem, { marginBottom: 20 }]}>\n                    <View style={styles.selectedImageContainer}>\n                      <Image source={require('../../assets/ICN-Hygro.png')} style={styles.selectedImage} />\n                    </View>\n                    <View style={styles.selectedTextContainer}>\n                      <Text style={styles.selectedText}>{i18n.t('intervention_map.avg', { value: `${Math.round(field.avghumi)}%`})}</Text>\n                      <Text style={styles.selectedText}>{i18n.t('intervention_map.min', { value: `${Math.round(field.minhumi)}%`})}</Text>\n                      <Text style={styles.selectedText}>{i18n.t('intervention_map.max', { value: `${Math.round(field.maxhumi)}%`})}</Text>\n                    </View>\n                  </View>\n                )}\n                { byParcelle[field.parcelleId] && typeof byParcelle[field.parcelleId].precipitation !== 'undefined' && (\n                  <View style={[styles.selectedElem]}>\n                    <View style={styles.selectedImageContainer}>\n                      <Image source={require('../../assets/ICN-Rain.png')} style={styles.selectedImage} />\n                    </View>\n                    <View style={styles.selectedTextContainer}>\n                      <Text style={styles.selectedText}>{i18n.t(`meteo_overlay.precipitation_${getRFromProduct()}`, { value: Math.round(parseFloat(byParcelle[field.parcelleId][getRFromProduct()])) })}</Text>\n                    </View>\n                  </View>\n                )}\n                { (!byParcelle[field.parcelleId] || typeof byParcelle[field.parcelleId].wind === 'undefined') && (! byParcelle[field.parcelleId] || typeof field.precipitation === 'undefined') && (\n                  <View style={[styles.selectedElem]}>\n                    <View style={styles.selectedImageContainer}>\n                      <Image source={require('../../assets/ICN-Hygro.png')} style={styles.selectedImage} />\n                    </View>\n                    <View style={styles.selectedTextContainer}>\n                      <Text style={styles.selectedText}>{i18n.t('intervention_map.avg', { value: `${Math.round(field.avghumi)}%`})}</Text>\n                      <Text style={styles.selectedText}>{i18n.t('intervention_map.min', { value: `${Math.round(field.minhumi)}%`})}</Text>\n                      <Text style={styles.selectedText}>{i18n.t('intervention_map.max', { value: `${Math.round(field.maxhumi)}%`})}</Text>\n                    </View>\n                  </View>\n                )}\n                { !isRacinaire() && byParcelle[field.parcelleId] && typeof byParcelle[field.parcelleId].deltatemp !== 'undefined' && (\n                  <View style={[styles.selectedElem, { marginTop: 32 }]}>\n                    <View style={styles.selectedTextContainer}>\n                      <Text style={styles.selectedText}>{i18n.t(`meteo_overlay.delta_temp`, { value: byParcelle[field.parcelleId].deltatemp })}</Text>\n                    </View>\n                  </View>\n                )}\n                { isRacinaire() && byParcelle[field.parcelleId] && typeof byParcelle[field.parcelleId].soilhumi !== 'undefined' && (\n                  <View style={[styles.selectedElem, { marginTop: 32, marginLeft: 20 }]}>\n                    <View style={styles.selectedImageContainer}>\n                      <Image source={require('../../assets/sprout.png')} style={styles.selectedImage} />\n                    </View>\n                    <View style={styles.selectedTextContainer}>\n                      <Text style={styles.selectedText}>{i18n.t(`realtime.soil_humi`, { value: byParcelle[field.parcelleId].soilhumi })}</Text>\n                    </View>\n                  </View>\n                )}\n              </View>\n            </View>\n            <View style={styles.carretContainer}>\n              <View style={[styles.triangle, { borderBottomColor: byParcelle[field.parcelleId] && byParcelle[field.parcelleId].condition ? COLORS[byParcelle[field.parcelleId].condition] : (field.colorField === COLORS.DEFAULT_FIELD ? COLORS.CYAN : field.colorField) }]} />\n            </View>\n          </>\n        )}\n\n        <View style={[styles.mapContainer, { top: field != null ? -20 : 0 }]}>\n          { intervention.id && (\n            <HygoMap intervention={intervention} byParcelle={byParcelle} handleFieldSelection={handleFieldSelection} />\n          )}\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    backgroundColor: COLORS.CYAN\n  },\n  headerBody: {\n    flex: 3,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headerTitle: {\n    color: '#fff',\n    fontFamily: 'nunito-regular',\n    fontSize: 20\n  },  \n  phytoDetail: {\n    backgroundColor: COLORS.BEIGE,\n    display: 'flex',\n    paddingTop: 7,\n    paddingBottom: 7,\n  },\n  picker: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 10,\n    paddingRight: 30\n  },  \n  pickerIcon: {\n    marginLeft: 5,\n    fontSize: 20,\n    color: COLORS.DARK_BLUE\n  },\n  phytoDetailRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    paddingRight: 42,\n    paddingTop: 7,\n    paddingBottom: 7\n  },\n  phytoDetailImage: {\n    height: 24,\n    width: 24,\n    marginRight: 10,\n    resizeMode: 'contain'\n  },\n  phytoDetailText: {\n    fontSize: 16,\n    fontFamily: 'nunito-regular',\n    color: COLORS.DARK_BLUE,\n  },\n  metrics: {\n    backgroundColor: COLORS.BEIGE,\n    borderWidth: 1,\n    borderRadius: 2,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'space-evenly'\n  },\n  elem: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 5,\n  },\n  elemIcon: {\n    height: 24,\n    tintColor: '#aaaaaa'\n  },\n  big: {\n    fontFamily: 'nunito-heavy',\n    fontSize: 16,\n    color: COLORS.DARK_BLUE,\n    marginTop: 5,\n  },\n  mini: {\n    fontSize: 12,\n    fontFamily: 'nunito-heavy',\n    color: '#aaa'\n  },\n  metricsContainer: {\n    backgroundColor: '#fff',\n    paddingTop: 22,\n    paddingLeft: 15,\n    paddingRight: 15,\n    paddingBottom: 22,\n  },\n  metricsSurface: {\n    fontSize: 14,\n    fontFamily: 'nunito-bold',\n    color: COLORS.DARK_BLUE,\n    marginTop: 21,\n    marginLeft: 5\n  },\n  legend: {\n\n  },\n  legendLine: {\n    padding: 10,\n    paddingLeft: 15,\n    paddingRight: 15,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  legendText: {\n    fontFamily: 'nunito-heavy',\n    fontSize: 14,\n    color: '#fff',\n  },\n  selected: {\n    paddingTop: 25,\n    paddingBottom: 25,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'flex-start',\n  },\n  selectedLine: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    justifyContent: 'space-between',\n    flex: 1,\n    paddingLeft: 20,\n    paddingRight: 20,\n  },\n  selectedElem: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  selectedImageContainer: {\n    paddingRight: 20,\n  },\n  selectedImage: {\n    width: 24,\n    resizeMode: 'contain',\n    tintColor: '#fff'\n  },\n  selectedText: {\n    color: '#fff',\n    fontFamily: 'nunito-heavy',\n    fontSize: 14,\n  },\n  carretContainer: {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    alignItems: 'center',\n    zIndex: 5,\n  },\n  mapContainer: {\n    zIndex: 1,\n  },  \n  triangle: {\n    zIndex: 5,\n    width: 0,\n    height: 0,\n    backgroundColor: 'transparent',\n    borderStyle: 'solid',\n    borderLeftWidth: 20,\n    borderRightWidth: 20,\n    borderBottomWidth: 20,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    transform: [\n      {rotate: '180deg'}\n    ]\n  }\n});\n\nconst mapStateToProps = (state) => ({\n    token: state.authen.token,\n    phytoProductList: state.pulve.phytoProductList,\n    interventionValues: state.interv.interventions\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  updateProductsInterv: (products, id) => dispatch(updateProductsInterv(products, id))\n})\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(InterventionMapScreen);"]},"metadata":{},"sourceType":"module"}