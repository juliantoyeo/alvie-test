{"ast":null,"code":"var _jsxFileName = \"/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/pulverisation-detailed/Cultures.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Icon } from 'native-base';\nimport i18n from 'i18n-js';\nimport COLORS from \"../../colors\";\nimport { connect } from 'react-redux';\n\nvar Cultures = function Cultures(_ref) {\n  var navigation = _ref.navigation,\n      cultures = _ref.cultures,\n      culturesSelected = _ref.culturesSelected,\n      _onPress = _ref.onPress;\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return _onPress(\"HygoCulturePicker\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.picker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, culturesSelected.length === 0 && React.createElement(Text, {\n    style: styles.pickerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, i18n.t('pulverisation.culture_type')), culturesSelected.length === cultures.length && React.createElement(Text, {\n    style: styles.pickerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, i18n.t('pulverisation.all_cultures')), culturesSelected.length < cultures.length && culturesSelected.length > 0 && React.createElement(Text, {\n    style: styles.pickerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, cultures.filter(function (pp) {\n    return culturesSelected.indexOf(pp.id) > -1;\n  }).map(function (pp) {\n    return i18n.t(\"cultures.\" + pp.name);\n  }).join(', ')), React.createElement(Icon, {\n    style: styles.pickerIcon,\n    type: \"Feather\",\n    name: \"chevron-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  picker: {\n    shadowColor: '#000',\n    shadowOpacity: .2,\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    elevation: 3,\n    backgroundColor: '#fff',\n    paddingLeft: 20,\n    borderTopRightRadius: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    paddingRight: 20,\n    paddingVertical: 10\n  },\n  pickerText: {\n    flex: 1,\n    color: COLORS.DARK_GREEN,\n    fontSize: 16,\n    fontFamily: 'nunito-bold'\n  },\n  pickerIcon: {\n    marginLeft: 5,\n    fontSize: 20,\n    color: COLORS.DARK_GREEN\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cultures: state.metadata.cultures,\n    culturesSelected: state.pulve.culturesSelected\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cultures);","map":{"version":3,"sources":["/Users/Morgan/Programmation/Pro/Hygo/hygoclient/src/components/pulverisation-detailed/Cultures.js"],"names":["React","Icon","i18n","COLORS","connect","Cultures","navigation","cultures","culturesSelected","onPress","styles","picker","length","pickerText","t","filter","pp","indexOf","id","map","name","join","pickerIcon","StyleSheet","create","shadowColor","shadowOpacity","shadowOffset","width","height","elevation","backgroundColor","paddingLeft","borderTopRightRadius","display","flexDirection","justifyContent","alignItems","paddingRight","paddingVertical","flex","color","DARK_GREEN","fontSize","fontFamily","marginLeft","mapStateToProps","state","metadata","pulve","mapDispatchToProps","dispatch","props"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { StyleSheet, View, Text, TouchableWithoutFeedback } from 'react-native'\nimport { Icon } from 'native-base'\n\nimport i18n from 'i18n-js'\n\nimport COLORS from '../../colors'\n\nimport {connect } from 'react-redux'\n\nconst Cultures = ({ navigation, cultures, culturesSelected, onPress }) => {\n\n  return (\n    <TouchableWithoutFeedback onPress={() => onPress(\"HygoCulturePicker\")}>\n      <View style={styles.picker}>\n      { culturesSelected.length === 0 && (\n        <Text style={styles.pickerText}>{i18n.t('pulverisation.culture_type')}</Text>\n      )}\n      { culturesSelected.length === cultures.length && (\n        <Text style={styles.pickerText}>{i18n.t('pulverisation.all_cultures')}</Text>\n      )}\n      { culturesSelected.length < cultures.length && culturesSelected.length > 0 && (\n        <Text style={styles.pickerText}>{ cultures.filter(pp => culturesSelected.indexOf(pp.id) > -1).map(pp => i18n.t(`cultures.${pp.name}`)).join(', ') }</Text>\n      )}\n      <Icon style={styles.pickerIcon} type=\"Feather\" name=\"chevron-down\" />\n      </View>\n    </TouchableWithoutFeedback>\n  )\n}\n\nconst styles = StyleSheet.create({\n  picker: {\n    shadowColor: '#000',\n    shadowOpacity: .2,\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    elevation: 3,\n    backgroundColor: '#fff',\n    paddingLeft: 20,\n    borderTopRightRadius: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    paddingRight: 20,\n    paddingVertical: 10,\n  },\n  pickerText: {\n    flex: 1,\n    color: COLORS.DARK_GREEN,\n    fontSize: 16,\n    fontFamily: 'nunito-bold',\n  },\n  pickerIcon: {\n    marginLeft: 5,\n    fontSize: 20,\n    color: COLORS.DARK_GREEN\n  },\n})\n\nconst mapStateToProps = (state) => ({\n  cultures: state.metadata.cultures,\n  culturesSelected: state.pulve.culturesSelected,\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cultures);"]},"metadata":{},"sourceType":"module"}